system.default.RowsForMatch = 8
system.PercentOfRows = 1

common.sql.byRownum = select * from (SELECT ROW_NUMBER() OVER (Order by
common.sql.forCount = SELECT COUNT (*)c

fctBookingCargo.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingCargo, validFrom  from fct.factBookingCargo)q
fctBookingCargo.dataInDV.commonPart = FROM (SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT  hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT validFrom, dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct  sat.validFrom, hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo )allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo UNION SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT  hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT satStatus.validFrom, hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo UNION  SELECT * FROM (SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT satLnk1.validFrom,  hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT  hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo ) a WHERE dwhIdHubBooking IS NOT NULL UNION SELECT * FROM (SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  satLnk2.validFrom, allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT   hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT  hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo ) a WHERE dwhIdHubContainerType IS NOT NULL  UNION SELECT * FROM (SELECT distinct satLnk3.validFrom, allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT   allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT   hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT  hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo ) a WHERE dwhIdHubFullEmpty IS NOT null) w
fctBookingCargo.dataInDM.RowByKeys = SELECT  dwhIdHubBooking, dwhIdHubBookingCargo, dwhIdHubContainerType, dwhIdHubFullEmpty, teus, containerCount, srcSystemId, accessCompanyId, dmStatus, validFrom from  fct.factBookingCargo

factBookingChargeLines.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingChargeLines, validFrom  from fct.factBookingChargeLines)q
factBookingChargeLines.dataInDV.commonPart = FROM (SELECT hubSatStatus.*, satlnk.dwhIdHubBooking FROM   sat.satLnkBookingBookingChargeLines satlnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargeLinesStatus satStatus INNER JOIN ( SELECT sat.validFrom, hub.*, sat.paymentTermCode, sat.chargeGroup, sat.currencyRoe, sat.currency, sat.amount, sat.contNr, sat.chargeNr, sat.chargeName, sat.price, sat.count, sat.units FROM sat.satBookingChargeLines sat INNER JOIN (SELECT dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId FROM hub.hubBookingChargeLines) hub ON hub.dwhIdHubBookingChargeLines = sat.dwhIdHubBookingChargeLines) hubSat ON hubSat.dwhIdHubBookingChargeLines = satStatus.dwhIdHubBookingChargeLines) hubSatStatus ON hubSatStatus.dwhIdHubBookingChargeLines = satlnk.dwhIdHubBookingChargeLines UNION SELECT hubSatStatus.*, satlnk.dwhIdHubBooking FROM   sat.satLnkBookingBookingChargeLines satlnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargeLinesStatus satStatus INNER JOIN (SELECT  hub.*, sat.paymentTermCode, sat.chargeGroup, sat.currencyRoe, sat.currency, sat.amount, sat.contNr, sat.chargeNr, sat.chargeName, sat.price, sat.count, sat.units FROM sat.satBookingChargeLines sat INNER JOIN (SELECT dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId FROM hub.hubBookingChargeLines) hub ON hub.dwhIdHubBookingChargeLines = sat.dwhIdHubBookingChargeLines) hubSat ON hubSat.dwhIdHubBookingChargeLines = satStatus.dwhIdHubBookingChargeLines) hubSatStatus ON hubSatStatus.dwhIdHubBookingChargeLines = satlnk.dwhIdHubBookingChargeLines UNION SELECT * FROM (SELECT satlnk.validFrom, hubSatStatus.*, satlnk.dwhIdHubBooking FROM   sat.satLnkBookingBookingChargeLines satlnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargeLinesStatus satStatus INNER JOIN (SELECT  hub.*, sat.paymentTermCode, sat.chargeGroup, sat.currencyRoe, sat.currency, sat.amount, sat.contNr, sat.chargeNr, sat.chargeName, sat.price, sat.count, sat.units FROM sat.satBookingChargeLines sat INNER JOIN (SELECT dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId FROM hub.hubBookingChargeLines) hub ON hub.dwhIdHubBookingChargeLines = sat.dwhIdHubBookingChargeLines) hubSat ON hubSat.dwhIdHubBookingChargeLines = satStatus.dwhIdHubBookingChargeLines) hubSatStatus ON hubSatStatus.dwhIdHubBookingChargeLines = satlnk.dwhIdHubBookingChargeLines) a WHERE dwhIdHubBooking IS NOT null)w
factBookingChargeLines.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId, paymentTermCode, chargeGroup, currencyRoe, currency, amount, contNr, chargeNr, chargeName, price, count, units, dmStatus, dwhIdHubBooking from  fct.factBookingChargeLines

factBookingCharges.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingCharges, validFrom  from fct.factBookingCharges)q
factBookingCharges.dataInDV.commonPart = FROM(SELECT DISTINCT hubSatStatus.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargesStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, sat.customerCode, sat.invoiceType, sat.invoiceRelationType, sat.invoiceStatus FROM sat.satBookingCharges  sat INNER JOIN (SELECT dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = sat.dwhIdHubBookingCharges) hubSat ON hubSat.dwhIdHubBookingCharges = satStatus.dwhIdHubBookingCharges) hubSatStatus ON hubSatStatus.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges  UNION SELECT DISTINCT hubSatStatus.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargesStatus satStatus INNER JOIN (SELECT  hub.*, sat.customerCode, sat.invoiceType, sat.invoiceRelationType, sat.invoiceStatus FROM sat.satBookingCharges  sat INNER JOIN (SELECT dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = sat.dwhIdHubBookingCharges) hubSat ON hubSat.dwhIdHubBookingCharges = satStatus.dwhIdHubBookingCharges) hubSatStatus ON hubSatStatus.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges UNION SELECT * FROM (SELECT DISTINCT satLnk.validFrom, hubSatStatus.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargesStatus satStatus INNER JOIN (SELECT  hub.*, sat.customerCode, sat.invoiceType, sat.invoiceRelationType, sat.invoiceStatus FROM sat.satBookingCharges  sat INNER JOIN (SELECT dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = sat.dwhIdHubBookingCharges) hubSat ON hubSat.dwhIdHubBookingCharges = satStatus.dwhIdHubBookingCharges) hubSatStatus ON hubSatStatus.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges) a WHERE  dwhIdHubBooking IS NOT NULL )w
factBookingCharges.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId,customerCode, invoiceType, invoiceRelationType, invoiceStatus, dmStatus, dwhIdHubBooking from  fct.factBookingCharges

factBookingEvents.fct.CountRows = select COUNT (*) c from (select dwhIdhubBookingEvents, validFrom  from fct.factBookingEvents)q
factBookingEvents.dataInDV.commonPart = FROM (SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdhubBooking FROM sat.satLnkBookingBookingEvents satlnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingEventsStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, sat.serviceCode, sat.bookingNr, sat.eventCode, sat.eventTime, sat.eventUser, sat.remark, sat.remark2, sat.remark3, sat.eventStatus, sat.fileLinerNr FROM sat.satBookingEvents sat INNER JOIN (SELECT dwhIdhubBookingEvents, bookingEventId, accessCompanyId, srcSystemId FROM hub.hubBookingEvents) hub ON hub.dwhIdhubBookingEvents = sat.dwhIdhubBookingEvents) hubSat ON hubSat.dwhIdhubBookingEvents = satStatus.dwhIdhubBookingEvents) hubSatStatus ON hubSatStatus.dwhIdhubBookingEvents = satlnk.dwhIdhubBookingEvents UNION SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdhubBooking FROM sat.satLnkBookingBookingEvents satlnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingEventsStatus satStatus INNER JOIN (SELECT  hub.*, sat.serviceCode, sat.bookingNr, sat.eventCode, sat.eventTime, sat.eventUser, sat.remark, sat.remark2, sat.remark3, sat.eventStatus, sat.fileLinerNr FROM sat.satBookingEvents sat INNER JOIN (SELECT dwhIdhubBookingEvents, bookingEventId, accessCompanyId, srcSystemId FROM hub.hubBookingEvents) hub ON hub.dwhIdhubBookingEvents = sat.dwhIdhubBookingEvents) hubSat ON hubSat.dwhIdhubBookingEvents = satStatus.dwhIdhubBookingEvents) hubSatStatus ON hubSatStatus.dwhIdhubBookingEvents = satlnk.dwhIdhubBookingEvents union SELECT * FROM (SELECT DISTINCT satlnk.validFrom, hubSatStatus.*, satlnk.dwhIdhubBooking FROM sat.satLnkBookingBookingEvents satlnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingEventsStatus satStatus INNER JOIN (SELECT  hub.*, sat.serviceCode, sat.bookingNr, sat.eventCode, sat.eventTime, sat.eventUser, sat.remark, sat.remark2, sat.remark3, sat.eventStatus, sat.fileLinerNr FROM sat.satBookingEvents sat INNER JOIN (SELECT dwhIdhubBookingEvents, bookingEventId, accessCompanyId, srcSystemId FROM hub.hubBookingEvents) hub ON hub.dwhIdhubBookingEvents = sat.dwhIdhubBookingEvents) hubSat ON hubSat.dwhIdhubBookingEvents = satStatus.dwhIdhubBookingEvents) hubSatStatus ON hubSatStatus.dwhIdhubBookingEvents = satlnk.dwhIdhubBookingEvents )a WHERE dwhIdhubBooking IS NOT NULL)w
factBookingEvents.dataInDM.RowByKeys = SELECT validFrom, dwhIdhubBookingEvents, bookingEventId, accessCompanyId, srcSystemId, serviceCode, bookingNr, eventCode, eventTime, eventUser, remark, remark2, remark3, eventStatus, fileLinerNr, dmStatus, dwhIdHubBooking from  fct.factBookingEvents

