cleanedCustomersNamesTable.truncate = truncate table etl.CleanedCustomersNamesTable_OZ
dictExcludedSymbols.truncate = truncate table etl.DictExcludedSymbols_OZ
dictEmptyCustomerTable.truncate = truncate table etl.DictEmptyCustomer_OZ
dictExceptionalCustomer.truncate = truncate table etl.DictExceptionalCustomer_OZ

cleanedCustomersNamesTable.insert = insert into etl.CleanedCustomersNamesTable_OZ (dwhIdHubCustomer, customerName) values (
dictExcludedSymbols.insert = insert into etl.dictExcludedSymbols_OZ (name) values (
dictEmptyCustomerTable.insert = insert into etl.DictEmptyCustomer_OZ (name) values (
dictExceptionalCustomer.insert = insert into etl.dictExceptionalCustomer_OZ (name) values (

dictExcludedSymbols.MDS.select = select name from mdm.dictExcludedSymbols_v
dictExcludedSymbols.DWH.select = select name from mdm.dictExcludedSymbols_v
dictEmptyCustomer.select = select name from mdm.dictEmptyCustomer_v
dictExceptionalCustomer.select = select name from mdm.dictExceptionalCustomer_v
satCustomers.names.select = select dwhIdHubCustomers, UPPER(customerName) as customerName from sat.satCustomers

TMScustomerNr.isNotNull.select = select dwhIdHubCustomers, UPPER(customerName) as customerName, TMScustomerNr from sat.satCustomers where TMScustomerNr is not null

cleanedCustomersNamesTable.create = create table etl.CleanedCustomersNamesTable_OZ (dwhIdHubCustomer int, customerName nvarchar (100))
dictExcludedSymbols.create = create table etl.DictExcludedSymbols_OZ (name nvarchar (100))
dictEmptyCustomer.create = create table etl.DictEmptyCustomer_OZ (name nvarchar (100))
dictExceptionalCustomer_OZ.create = create table etl.DictExceptionalCustomer_OZ (name nvarchar (100))