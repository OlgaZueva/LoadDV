payments.sat.CountRows = select count(*) c  from sat.satPayments
payments.satCondition.CountRows = select count (*) c from (select distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE, LOBE_NR, SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BILAGSNR, DATO, TEKST, VALUTA, cdcTimestamp from  StagingAreaTest.stg.UNITY_AbPost where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE, LOBE_NR, SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BILAGSNR, DATO, TEKST, VALUTA, cdcTimestamp from  StagingAreaTest.stg.MSCRUS_AbPost where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) q
payments.satStatusCondition.CountRows = select count (*) c from (select distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE, LOBE_NR, SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BILAGSNR, DATO, TEKST, VALUTA, cdcTimestamp from  StagingAreaTest.stg.UNITY_AbPost where isDeleted = 0 union select distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE, LOBE_NR, SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BILAGSNR, DATO, TEKST, VALUTA, cdcTimestamp from  StagingAreaTest.stg.MSCRUS_AbPost where isDeleted = 0)q
payments.satStatus.CountRows = select count(*) c  from sat.satPaymentsStatus

companyAgentCode.sat.CountRows = select count(*) c  from sat.satCompanyAgentCode
companyAgentCode.satCondition.CountRows = select count (*) c from (select  hubC.dwhIdHubCompany, src.TIL, src.SrcSystemId from datavaulttest.hub.hubCompany hubC inner join (select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from  StagingAreaTest.stg.UNITY_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='ID' and AGENT='MSC' and FRA='AGENT' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from StagingAreaTest.stg.MSCRUS_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='ID' and AGENT='MSC' and FRA='AGENT') src on hubC.CompanyId = src.SELSKAB and hubC.SrcSystemId = src.SrcSystemId) q

containerLocationCloc.sat.CountRows = select count(*) c  from sat.satContainerLocationCloc
containerLocationCloc.satCondition.CountRows = select count (*) c from (select  hubC.dwhIdHubContainerLocation, src.TIL, src.SrcSystemId from datavaulttest.hub.hubContainerLocation hubC inner join (select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from  StagingAreaTest.stg.UNITY_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='CLOC' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from StagingAreaTest.stg.MSCRUS_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='CLOC' and AGENT='MSC' ) src on hubC.containerLocationCode = src.FRA and hubC.accessCompanyId = src.SELSKAB and hubC.SrcSystemId = src.SrcSystemId) q

customers.sat.CountRows = select count(*) c  from sat.satCustomers
customers.emptyCustomersAdresse.CountRows = select COUNT (*) c from (select dictEmptyCust.*, src.NAVN, src.NR, src.REF_NR, src.REF_TYPE, src.SELSKAB, src.srcSystemId from etl.DictEmptyCustomer_OZ dictEmptyCust inner join (select distinct NR, REF_NR, REF_TYPE, SELSKAB, srcSystemId, ltrim(rtrim(Upper(NAVN))) as NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted = 0  union select distinct NR, REF_NR, REF_TYPE, SELSKAB, srcSystemId, ltrim(rtrim(Upper(NAVN))) as NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted = 0) src on dictEmptyCust.name = src.NAVN COLLATE SQL_Latin1_General_CP1_CS_AS )q
customers.emptyCustomersKunde.CountRows = select COUNT (*) c from (select dictEmptyCust.*, src.NAVN, src.KUNDENR, src.SELSKAB, src.srcSystemId from etl.DictEmptyCustomer_OZ dictEmptyCust inner join (select distinct KUNDENR, SELSKAB, srcSystemId, ltrim(rtrim(Upper(NAVN))) as NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted = 0 union select distinct KUNDENR, SELSKAB, srcSystemId, ltrim(rtrim(Upper(NAVN))) as NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted = 0) src on dictEmptyCust.name = src.NAVN COLLATE SQL_Latin1_General_CP1_CS_AS )q
customers.satConditionKunde.CountRows = select count (*) c from(select  distinct KUNDENR, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, DERES_REF, EMAILADR, FORKORT, NAVN, TELEFAX, TELEFON from  StagingAreaTest.stg.MSCRUS_Kunde where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct KUNDENR, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, DERES_REF, EMAILADR, FORKORT, NAVN, TELEFAX, TELEFON from  StagingAreaTest.stg.UNITY_Kunde where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) q
customers.satConditionAdresse.CountRows = select count (*) c from(select  distinct NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, EMAILADR, NAVN, TELEFAX, TELEFON from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, EMAILADR, NAVN, TELEFAX, TELEFON from  StagingAreaTest.stg.UNITY_Adresse where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) q
customers.satConditionIbox.CountRows = select COUNT (*) c from (select sat.* from hub.hubCustomers hub inner join (select * from sat.satCustomers ) sat on sat.dwhIdHubCustomers = hub.dwhIdHubCustomers and hub.customerType='I')q
customers.satStatus.CountRows = select count(*) c  from sat.satCustomersStatus
customers.satStatusConditionKunde.CountRows = select count (*) c from (select distinct KUNDENR, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, DERES_REF, EMAILADR, FORKORT, NAVN, TELEFAX, TELEFON from  StagingAreaTest.stg.MSCRUS_Kunde where isDeleted = 0  union select distinct KUNDENR, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, DERES_REF, EMAILADR, FORKORT, NAVN, TELEFAX, TELEFON  from  StagingAreaTest.stg.UNITY_Kunde where isDeleted = 0 ) q
customers.satStatusConditionAdresse.CountRows = select count (*) c from (select distinct NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, EMAILADR, NAVN, TELEFAX, TELEFON from  StagingAreaTest.stg.MSCRUS_Adresse where isDeleted = 0  union select distinct NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN,CITY_CODE, CUSTOMER_NUMBER, DEB_LAND, EMAILADR, NAVN, TELEFAX, TELEFON from  StagingAreaTest.stg.UNITY_Adresse where isDeleted = 0)q
customers.satStatusConditionIbox.CountRows = select count (*) c from (select sat.* from sat.satCustomers sat inner join (select * from hub.hubCustomers where customerType='I') hub on hub.dwhIdHubCustomers = sat.dwhIdHubCustomers)q

masterCustomerName.condition_TMSnumber_TMSnumberNotNull_Kunde.CountRows = select COUNT (*)c from (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName,  mc.dwhIdmdsMasterClient from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER,  NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null) src on hub1.customerNr =  src.KUNDENR and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers)srcHub1 on mc.tmsNumber =  srcHub1.satTMS  COLLATE SQL_Latin1_General_CP1_CS_AS)q
masterCustomerName.condition_TMSnumber_TMSnumberNotNull_Adresse.CountRows = select COUNT (*)c from (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName,  mc.dwhIdmdsMasterClient from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null) src on hub1.number =  src.NR and hub1.bookingNumber =  src.REF_NR and hub1.refType = src.REF_TYPE and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers)srcHub1 on  mc.tmsNumber =  srcHub1.satTMS  COLLATE SQL_Latin1_General_CP1_CS_AS)q
masterCustomerName.condition_CleanName_TMSnumberNotNull_Kunde.CountRows = select COUNT (*)c from (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName,  mc.dwhIdmdsMasterClient from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select * from (select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER,  NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null)w where CUSTOMER_NUMBER not in (select tmsNumber  COLLATE SQL_Latin1_General_CP1_CS_AS from mds.mdsMasterClient where tmsNumber is not null)) src on hub1.customerNr =  src.KUNDENR and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers)srcHub1 on  mc.cleanedName =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CS_AS)q
masterCustomerName.condition_CleanName_TMSnumberNotNull_Adresse.CountRows = select COUNT (*)c from (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName,   mc.dwhIdmdsMasterClient from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select * from (select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null)w where CUSTOMER_NUMBER not in (select tmsNumber  COLLATE SQL_Latin1_General_CP1_CS_AS from mds.mdsMasterClient where tmsNumber is not null)) src on hub1.number =  src.NR and hub1.bookingNumber =  src.REF_NR and hub1.refType = src.REF_TYPE and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers)srcHub1 on mc.cleanedName =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CS_AS)q
masterCustomerName.condition_CleanName_TMSnumberNull_Kunde.CountRows = select COUNT (*)c from (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName,  mc.dwhIdmdsMasterClient from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null union select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER,  NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null) src on hub1.customerNr =  src.KUNDENR and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on  mc.cleanedName =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CS_AS)q
masterCustomerName.condition_CleanName_TMSnumberNull_Adresse.CountRows = select COUNT (*)c from (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName,   mc.dwhIdmdsMasterClient from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null union select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null) src on hub1.number =  src.NR and hub1.bookingNumber =  src.REF_NR and hub1.refType = src.REF_TYPE and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.cleanedName =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CS_AS)q
masterCustomerName.UnionCondition.CountRows = select COUNT (*)c from ((select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName/*,  mc.dwhIdmdsMasterClient*/ from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null) src on hub1.number =  src.NR and hub1.bookingNumber =  src.REF_NR and hub1.refType = src.REF_TYPE and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.tmsNumber =  srcHub1.satTMS  COLLATE SQL_Latin1_General_CP1_CI_AI) union (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName/*,  mc.dwhIdmdsMasterClient*/ from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select * from (select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null)w where CUSTOMER_NUMBER not in (select tmsNumber  COLLATE SQL_Latin1_General_CP1_CS_AS from mds.mdsMasterClient where tmsNumber is not null)) src on hub1.number =  src.NR and hub1.bookingNumber =  src.REF_NR and hub1.refType = src.REF_TYPE and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.cleanedName COLLATE SQL_Latin1_General_CP1_CI_AI =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CI_AI and mc.tmsNumber is null) union (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName/*,  mc.dwhIdmdsMasterClient*/ from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null union select NR, REF_NR, REF_TYPE, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.UNITY_Adresse where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null) src on hub1.number =  src.NR and hub1.bookingNumber =  src.REF_NR and hub1.refType = src.REF_TYPE and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.cleanedName COLLATE SQL_Latin1_General_CP1_CI_AI=  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CI_AI and mc.tmsNumber is null) union (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName/*,  mc.dwhIdmdsMasterClient*/ from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER,  NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null) src on hub1.customerNr =  src.KUNDENR and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.tmsNumber =  srcHub1.satTMS  COLLATE SQL_Latin1_General_CP1_CI_AI) union (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName/*,  mc.dwhIdmdsMasterClient*/ from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select * from (select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null union select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER,  NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is not null)w where CUSTOMER_NUMBER not in (select tmsNumber  COLLATE SQL_Latin1_General_CP1_CS_AS from mds.mdsMasterClient where tmsNumber is not null)) src on hub1.customerNr =  src.KUNDENR and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.cleanedName COLLATE SQL_Latin1_General_CP1_CI_AI =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CI_AI and mc.tmsNumber is null) union (select distinct srcHub1.dwhIdHubCustomers, srcHub1.satCleanName/*,  mc.dwhIdmdsMasterClient*/ from mds.mdsMasterClient mc inner join (select  srcHub.dwhIdHubCustomers, sat.TmsCustomerNr as satTMS, sat.dwhIdMasterClient, srcHub.NAVN as srcName, sat.cleanCustomerName as satCleanName from sat.satCustomers sat inner join (select hub1.dwhIdHubCustomers, src.CUSTOMER_NUMBER, src.NAVN from hub.hubCustomers hub1 inner join (select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER, NAVN from StagingAreaTest.stg.MSCRUS_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null union select KUNDENR, SELSKAB, SrcSystemId, CUSTOMER_NUMBER,  NAVN from StagingAreaTest.stg.UNITY_Kunde where isDeleted =0 and (cdcOperation != 'D ' or cdcOperation is null) and CUSTOMER_NUMBER is null and NAVN is not null) src on hub1.customerNr =  src.KUNDENR and hub1.accessCompanyId = src.SELSKAB and hub1.srcSystemId = src.srcSystemId)srcHub on srcHub.dwhIdHubCustomers = sat.dwhIdHubCustomers and sat.cleanCustomerName is not null)srcHub1 on mc.cleanedName COLLATE SQL_Latin1_General_CP1_CI_AI  =  srcHub1.satCleanName  COLLATE SQL_Latin1_General_CP1_CI_AI and mc.tmsNumber is null))q
masterCustomerName.masterClientId.CountRows = select COUNT (*) c from (select dwhIdHubCustomers, cleanCustomername, customerName, TMScustomerNr from sat.satCustomers where cleanCustomername is not null and dwhIdMasterClient is not null)q


accountingTransaction.sat.CountRows = select count(*) c  from sat.satAccountingTransaction
accountingTransaction.satStatus.CountRows = select count(*) c  from sat.satAccountingTransactionStatus
accountingTransaction.satCondition.CountRows = select count (*) c from ((select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.MSCRUS_BogfTrans where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.UNITY_BogfTrans where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) union (select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.MSCRUS_BogfTrans where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) union select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.UNITY_BogfTrans where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3)))q 
accountingTransaction.satStatusCondition.CountRows = select count (*) c from ((select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.MSCRUS_BogfTrans where IsDeleted = 0 union select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.UNITY_BogfTrans where IsDeleted = 0 ) union (select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.MSCRUS_BogfTrans where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) union select distinct BILAGSNR, LOBE_NR, SELSKAB, SrcSystemId, AFDELING, AKTIVITET, BELOBDKK, BELOBVAL, DAGBOG, FP_ID, GRUPPE, INIT, KONTONR, KONTOR, PERIODE, REF_NR, SAGSNR, TEKST, TRANSTYPE  from StagingAreaTest.stg.UNITY_BogfTrans where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3)))q 

booking.sat.CountRows = select count(*) c  from sat.satBooking
booking.satStatus.CountRows = select count(*) c  from sat.satBookingStatus
booking.satCondition.CountRows = select count (*) c from ((select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP,  KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1,  PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER,  SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.MSCRUS_Book where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP, KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1, PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER, SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.UNITY_Book where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) union (select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP, KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1, PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER, SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.MSCRUS_Book where  SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or creation_date  < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) and cdcTimeStamp is null union select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP, KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1, PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER, SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.UNITY_Book where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or creation_date  < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) and cdcTimeStamp is null))q 
booking.satStatusCondition.CountRows = select count (*) c from ((select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP,  KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1,  PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER,  SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.MSCRUS_Book where IsDeleted = 0 union select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP, KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1, PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER, SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.UNITY_Book where IsDeleted = 0) union (select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS, GVA_AFDELING, IMP_EXP,  KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION, PLD_SUBLOCATION_CODE1, PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR, SPEC_REF_NUMBER, SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.MSCRUS_Book where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or creation_date  < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) union select distinct BOOK_NR, SELSKAB, SrcSystemId, AFDELING, AFG_BY, AFG_DATO, AFG_ZONE, AFSENDER, AIRLINECODE_3, ANK_BY, ANK_DATO, ANK_ZONE, CONTROL_KONTOR, CONTROL_SELSKAB, CREATED_BY, CREATION_DATE, CROSS_BOOK, DATO, DER_REF, DIRECT_FLAG, FEEDER_DATO, FREIGHT_PAY, FREIGHT_PAY_IMS,  GVA_AFDELING, IMP_EXP, KONTOR, LOC, LOC_REF, LOC2, LOC2_REF, MANIFEST_TYPE, OCEAN_AFDELING, PL_O_DELIVER, PL_O_RECEIPT, PLD_HAULAGE_AT_DESTINATION,  PLD_SUBLOCATION_CODE1, PLD_ZIPCODE, PLR_HAULAGE_AT_ORIGIN, PLR_SUBLOCATION_CODE1, PLR_ZIPCODE, POD_DATO, POR_DATO, QUOTATION_REF_NR, REF_NR,  SPEC_REF_NUMBER, SPECIAL_CONTRACT_REF, STAT, TIDL_GODS, UDF_ANG2  from StagingAreaTest.stg.UNITY_Book where  SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0)  or creation_date  < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3)))q

bookingManifestAdditionals.sat.CountRows = select count(*) c  from sat.satBookingManifestAdditionals
bookingManifestAdditionals.satStatus.CountRows = select count(*) c  from sat.satBookingManifestAdditionalsStatus
bookingManifestAdditionals.satCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, SEGMENT_CODE, SEQ_NR, SELSKAB, SrcSystemId, VALUE_CODE  from StagingAreaTest.stg.MSCRUS_BookDetails where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, SEGMENT_CODE, SEQ_NR, SELSKAB, SrcSystemId, VALUE_CODE  from StagingAreaTest.stg.UNITY_BookDetails where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingManifestAdditionals.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, SEGMENT_CODE, SEQ_NR, SELSKAB, SrcSystemId, VALUE_CODE  from StagingAreaTest.stg.MSCRUS_BookDetails where IsDeleted = 0 union select distinct BOOK_NR, SEGMENT_CODE, SEQ_NR, SELSKAB, SrcSystemId, VALUE_CODE  from StagingAreaTest.stg.UNITY_BookDetails where IsDeleted = 0)q

bookingManifestedHaulage.sat.CountRows = select count(*) c  from sat.satBookingManifestedHaulage
bookingManifestedHaulage.satStatus.CountRows = select count(*) c  from sat.satBookingManifestedHaulageStatus
bookingManifestedHaulage.satCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, SEQ_NR, SELSKAB, SrcSystemId, PRE_CARRIAGE_MODE  from StagingAreaTest.stg.MSCRUS_BookDetailsMof where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, SEQ_NR, SELSKAB,  SrcSystemId, PRE_CARRIAGE_MODE from StagingAreaTest.stg.UNITY_BookDetailsMof where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q 
bookingManifestedHaulage.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, SEQ_NR, SELSKAB, SrcSystemId, PRE_CARRIAGE_MODE  from StagingAreaTest.stg.MSCRUS_BookDetailsMof where IsDeleted = 0 union select distinct BOOK_NR, SEQ_NR, SELSKAB,  SrcSystemId, PRE_CARRIAGE_MODE from StagingAreaTest.stg.UNITY_BookDetailsMof where IsDeleted = 0)q

bookingNonManifestedHaulage.sat.CountRows = select count(*) c  from sat.satBookingNonManifestedHaulage
bookingNonManifestedHaulage.satCondition.CountRows = select count (*) c from (select distinct BOOK_NR, SELSKAB, SrcSystemId, CARRIAGE_MODE, DRY_PORT_NAME, PL_O_DELIVER, PL_O_RECEIPT,PLD_ZIPCODE, PLR_ZIPCODE from StagingAreaTest.stg.MSCRUS_BookDryPort where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, SELSKAB, SrcSystemId, CARRIAGE_MODE, DRY_PORT_NAME, PL_O_DELIVER, PL_O_RECEIPT,PLD_ZIPCODE, PLR_ZIPCODE  from StagingAreaTest.stg.UNITY_BookDryPort where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q

bookingEvents.sat.CountRows = select count(*) c  from sat.satBookingEvents
bookingEvents.satStatus.CountRows = select count(*) c  from sat.satBookingEventsStatus
bookingEvents.satCondition.CountRows = select count (*) c from (select distinct  SEQ, SELSKAB, SrcSystemId, AFDELING, BOOK_NR, EVENT_ID, EVENT_STAT, EVENT_TIME, EVENT_USER, REMARK, REMARK2, REMARK3, SAGSNR  from StagingAreaTest.stg.MSCRUS_BookEvent where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct SEQ, SELSKAB, SrcSystemId, AFDELING, BOOK_NR, EVENT_ID, EVENT_STAT, EVENT_TIME, EVENT_USER, REMARK, REMARK2, REMARK3, SAGSNR  from StagingAreaTest.stg.UNITY_BookEvent where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingEvents.satStatusCondition.CountRows = select count (*) c from (select distinct  SEQ, SELSKAB, SrcSystemId, AFDELING, BOOK_NR, EVENT_ID, EVENT_STAT, EVENT_TIME, EVENT_USER, REMARK, REMARK2, REMARK3, SAGSNR  from StagingAreaTest.stg.MSCRUS_BookEvent where IsDeleted = 0 union select distinct SEQ, SELSKAB, SrcSystemId, AFDELING, BOOK_NR, EVENT_ID, EVENT_STAT, EVENT_TIME, EVENT_USER, REMARK, REMARK2, REMARK3, SAGSNR  from StagingAreaTest.stg.UNITY_BookEvent where IsDeleted = 0)q

bookingCharges.sat.CountRows = select count(*) c  from sat.satBookingCharges
bookingCharges.satStatus.CountRows = select count(*) c  from sat.satBookingChargesStatus
bookingCharges.satCondition.CountRows = select count (*) c from (select distinct  BOOK_NR, FRG_BT_NR, SELSKAB, SrcSystemId, DK_KODE, KUNDE, REL_TYPE, STAT from StagingAreaTest.stg.MSCRUS_BookFak where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, FRG_BT_NR, SELSKAB, SrcSystemId, DK_KODE, KUNDE, REL_TYPE, STAT  from StagingAreaTest.stg.UNITY_BookFak where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingCharges.satStatusCondition.CountRows = select count (*) c from (select distinct  BOOK_NR, FRG_BT_NR, SELSKAB, SrcSystemId, DK_KODE, KUNDE, REL_TYPE, STAT from StagingAreaTest.stg.MSCRUS_BookFak where IsDeleted = 0 union select distinct BOOK_NR, FRG_BT_NR, SELSKAB, SrcSystemId, DK_KODE, KUNDE, REL_TYPE, STAT from StagingAreaTest.stg.UNITY_BookFak where IsDeleted = 0)q

bookingCargo.sat.CountRows = select count(*) c  from sat.satBookingCargo
bookingCargo.satStatus.CountRows = select count(*) c  from sat.satBookingCargoStatus
bookingCargo.satCondition.CountRows = select count (*) c from (select distinct BOOK_NR, VAREPOST_NR, SELSKAB, SrcSystemId, AGENCY_CCC, ATMOSPHERE_CONTROL, AUTOMATIC_TEMP_FLAG, AUTOMATIC_TEMP_VALUE, BRUTTO, BULB_MODE, COLD_TREATMENT, CONT_ANT, CONT_NR, CONT_TEKST, CONT_TYPE, DEHUMIDIFICATION_FLAG, DEHUMIDIFICATION_VALUE, IMCO_KL, IMS_TRANSPORT_CODE, KOLLI_ENHED,MANUAL_TEMP_FLAG, MANUAL_TEMP_VALUE, MRK_NR, OPERATING_REEFER_INDICATOR, PART_LOAD_FLAG, PRECARRIAGE, SEAL_NO, TARA,TEMP_ENH, TEMP1, TEMP2, UN_NR, VAREART, VOL, VOL_ENHED  from StagingAreaTest.stg.MSCRUS_BookGods where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, VAREPOST_NR, SELSKAB, SrcSystemId, AGENCY_CCC, ATMOSPHERE_CONTROL, AUTOMATIC_TEMP_FLAG, AUTOMATIC_TEMP_VALUE, BRUTTO, BULB_MODE, COLD_TREATMENT, CONT_ANT, CONT_NR, CONT_TEKST, CONT_TYPE, DEHUMIDIFICATION_FLAG, DEHUMIDIFICATION_VALUE, IMCO_KL, IMS_TRANSPORT_CODE, KOLLI_ENHED, MANUAL_TEMP_FLAG, MANUAL_TEMP_VALUE, MRK_NR, OPERATING_REEFER_INDICATOR, PART_LOAD_FLAG, PRECARRIAGE, SEAL_NO, TARA, TEMP_ENH, TEMP1, TEMP2, UN_NR, VAREART, VOL, VOL_ENHED  from StagingAreaTest.stg.UNITY_BookGods where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingCargo.satStatusCondition.CountRows = select count (*) c from (select distinct BOOK_NR, VAREPOST_NR, SELSKAB, SrcSystemId, AGENCY_CCC, ATMOSPHERE_CONTROL, AUTOMATIC_TEMP_FLAG, AUTOMATIC_TEMP_VALUE, BRUTTO, BULB_MODE, COLD_TREATMENT, CONT_ANT, CONT_NR, CONT_TEKST, CONT_TYPE, DEHUMIDIFICATION_FLAG, DEHUMIDIFICATION_VALUE, IMCO_KL, IMS_TRANSPORT_CODE, KOLLI_ENHED, MANUAL_TEMP_FLAG, MANUAL_TEMP_VALUE, MRK_NR, OPERATING_REEFER_INDICATOR, PART_LOAD_FLAG, PRECARRIAGE, SEAL_NO, TARA,TEMP_ENH, TEMP1, TEMP2, UN_NR, VAREART, VOL, VOL_ENHED  from StagingAreaTest.stg.MSCRUS_BookGods where IsDeleted = 0 union select distinct BOOK_NR, VAREPOST_NR, SELSKAB, SrcSystemId, AGENCY_CCC, ATMOSPHERE_CONTROL, AUTOMATIC_TEMP_FLAG, AUTOMATIC_TEMP_VALUE, BRUTTO, BULB_MODE, COLD_TREATMENT, CONT_ANT,CONT_NR, CONT_TEKST, CONT_TYPE, DEHUMIDIFICATION_FLAG, DEHUMIDIFICATION_VALUE, IMCO_KL, IMS_TRANSPORT_CODE, KOLLI_ENHED, MANUAL_TEMP_FLAG, MANUAL_TEMP_VALUE, MRK_NR, OPERATING_REEFER_INDICATOR, PART_LOAD_FLAG, PRECARRIAGE, SEAL_NO, TARA, TEMP_ENH, TEMP1, TEMP2, UN_NR, VAREART, VOL, VOL_ENHED  from StagingAreaTest.stg.UNITY_BookGods where IsDeleted = 0)q

bookingHaulageDetails.sat.CountRows = select count(*) c  from sat.satBookingHaulageDetails
bookingHaulageDetails.satStatus.CountRows = select count(*) c  from sat.satBookingHaulageDetailsStatus
bookingHaulageDetails.satCondition.CountRows = select count (*) c from (select distinct  BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId from StagingAreaTest.stg.MSCRUS_BookKor  where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)union select distinct BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId from StagingAreaTest.stg.UNITY_BookKor  where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingHaulageDetails.satStatusCondition.CountRows = select count (*) c from (select distinct  BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId from StagingAreaTest.stg.MSCRUS_BookKor  where isDeleted = 0 union select distinct BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId from StagingAreaTest.stg.UNITY_BookKor  where isDeleted = 0)q

bookingChargeLines.sat.CountRows = select count(*) c  from sat.satBookingChargeLines
bookingChargeLines.satStatus.CountRows = select count(*) c  from sat.satBookingChargeLinesStatus
bookingChargeLines.satCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, FRG_BT_NR, LINIE_NR, SELSKAB, SrcSystemId, ANTAL, BET_KODE, CONT_NR, ENHED, GRUPPE, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.MSCRUS_BookLin where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, FRG_BT_NR, LINIE_NR, SELSKAB, SrcSystemId, ANTAL, BET_KODE, CONT_NR, ENHED, GRUPPE, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.UNITY_BookLin where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) )q
bookingChargeLines.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, FRG_BT_NR, LINIE_NR, SELSKAB, SrcSystemId, ANTAL, BET_KODE, CONT_NR, ENHED, GRUPPE, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.MSCRUS_BookLin where IsDeleted = 0 union select distinct BOOK_NR, FRG_BT_NR, LINIE_NR, SELSKAB, SrcSystemId, ANTAL, BET_KODE, CONT_NR, ENHED, GRUPPE, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.UNITY_BookLin where IsDeleted = 0)q

bookingManifest.sat.CountRows = select count(*) c  from sat.satBookingManifest
bookingManifest.satStatus.CountRows = select count(*) c  from sat.satBookingManifestStatus
bookingManifest.satCondition.CountRows = select count (*) c from (select  distinct BOOK_MFT_ID, SELSKAB, SrcSystemId, CORR_REASON, CORR_TYPE, CREATED_BY, CREATION_DATE, MANIFEST_TYPE, MFT_FILE_ID, ROLL_AFDELING , ROLL_SAGSNR, SPLIT_BL_FLAG, STATUS  from StagingAreaTest.stg.MSCRUS_BookManifests  where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_MFT_ID, SELSKAB, SrcSystemId, CORR_REASON, CORR_TYPE, CREATED_BY, CREATION_DATE, MANIFEST_TYPE, MFT_FILE_ID, ROLL_AFDELING , ROLL_SAGSNR, SPLIT_BL_FLAG, STATUS  from StagingAreaTest.stg.UNITY_BookManifests where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) )q
bookingManifest.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_MFT_ID, SELSKAB, SrcSystemId, CORR_REASON, CORR_TYPE, CREATED_BY, CREATION_DATE, MANIFEST_TYPE, MFT_FILE_ID, ROLL_AFDELING , ROLL_SAGSNR, SPLIT_BL_FLAG, STATUS  from StagingAreaTest.stg.MSCRUS_BookManifests  where IsDeleted = 0 union select distinct BOOK_MFT_ID, SELSKAB, SrcSystemId, CORR_REASON, CORR_TYPE, CREATED_BY, CREATION_DATE, MANIFEST_TYPE, MFT_FILE_ID, ROLL_AFDELING , ROLL_SAGSNR, SPLIT_BL_FLAG, STATUS  from StagingAreaTest.stg.UNITY_BookManifests where IsDeleted = 0)q

bookingDTXFile.sat.CountRows = select count(*) c  from sat.satBookingDTXFile
bookingDTXFile.satStatus.CountRows = select count(*) c  from sat.satBookingDTXFileStatus
bookingDTXFile.satCondition.CountRows = select count (*) c from (select  distinct MFT_FILE_ID, SELSKAB, SrcSystemId, FILE_DATE  from StagingAreaTest.stg.MSCRUS_BookMftFile where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct MFT_FILE_ID, SELSKAB, SrcSystemId, FILE_DATE  from StagingAreaTest.stg.UNITY_BookMftFile where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingDTXFile.satStatusCondition.CountRows = select count (*) c from (select  distinct MFT_FILE_ID, SELSKAB, SrcSystemId, FILE_DATE  from StagingAreaTest.stg.MSCRUS_BookMftFile where IsDeleted = 0 union select distinct MFT_FILE_ID, SELSKAB, SrcSystemId, FILE_DATE  from StagingAreaTest.stg.UNITY_BookMftFile where IsDeleted = 0)q

bookingEMCRemarks.sat.CountRows = select count(*) c  from sat.satBookingEMCRemarks
bookingEMCRemarks.satStatus.CountRows = select count(*) c  from sat.satBookingEMCRemarksStatus
bookingEMCRemarks.satCondition.CountRows = select count (*) c from (select  distinct BOOK_MFT_ID, SEQ, SELSKAB, SrcSystemId, REMARK_CODE, REMARK_TEXT  from StagingAreaTest.stg.MSCRUS_BookMftRemarks where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)  union select distinct BOOK_MFT_ID, SEQ, SELSKAB, SrcSystemId, REMARK_CODE, REMARK_TEXT  from StagingAreaTest.stg.UNITY_BookMftRemarks where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) )q
bookingEMCRemarks.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_MFT_ID, SEQ, SELSKAB, SrcSystemId, REMARK_CODE, REMARK_TEXT  from StagingAreaTest.stg.MSCRUS_BookMftRemarks where IsDeleted = 0 union select distinct BOOK_MFT_ID, SEQ, SELSKAB, SrcSystemId, REMARK_CODE, REMARK_TEXT  from StagingAreaTest.stg.UNITY_BookMftRemarks where IsDeleted = 0)q

bookingOceanVessel.sat.CountRows = select count(*) c  from sat.satBookingOceanVessel
bookingOceanVessel.satStatus.CountRows = select count(*) c  from sat.satBookingOceanVessel
bookingOceanVessel.satCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, BOOK_VESSEL_ID, SELSKAB, SrcSystemId, BLOCK_CODE, CREATED_BY, CREATION_DATE  from StagingAreaTest.stg.MSCRUS_BookVessel where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, BOOK_VESSEL_ID, SELSKAB, SrcSystemId, BLOCK_CODE, CREATED_BY, CREATION_DATE   from StagingAreaTest.stg.UNITY_BookVessel where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) )q
bookingOceanVessel.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, BOOK_VESSEL_ID, SELSKAB, SrcSystemId, BLOCK_CODE, CREATED_BY, CREATION_DATE  from StagingAreaTest.stg.MSCRUS_BookVessel where IsDeleted = 0 union select distinct BOOK_NR, BOOK_VESSEL_ID, SELSKAB, SrcSystemId, BLOCK_CODE, CREATED_BY, CREATION_DATE   from StagingAreaTest.stg.UNITY_BookVessel where IsDeleted = 0)q

weekendsHolidays.satStatus.CountRows = select count(*) c  from sat.satWeekendsHolidaysStatus
weekendsHolidays.satStatusCondition.CountRows = select count (*) c from (select  distinct AFDELING, DATO, SELSKAB, SrcSystemId  from StagingAreaTest.stg.MSCRUS_ContHolliday where IsDeleted = 0 union select distinct AFDELING, DATO, SELSKAB, SrcSystemId  from StagingAreaTest.stg.UNITY_ContHolliday where IsDeleted = 0)q

controllingOffice.sat.CountRows = select count(*) c  from sat.satControllingOffice
controllingOffice.satStatus.CountRows = select count(*) c  from sat.satControllingOfficeStatus
controllingOffice.satCondition.CountRows = select count (*) c from (select  distinct COMPANY_ID, ISNULL(OFFICE_ID, -1) AS OFFICE_ID, SrcSystemId, COMPANY_NAME, CONTROLING_OFFICE, OFFICE_NAME  from StagingAreaTest.stg.MSCRUS_ControlOffice where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct COMPANY_ID, ISNULL(OFFICE_ID, -1) AS OFFICE_ID, SrcSystemId, COMPANY_NAME, CONTROLING_OFFICE, OFFICE_NAME  from StagingAreaTest.stg.UNITY_ControlOffice where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) )q
controllingOffice.satStatusCondition.CountRows = select count (*) c from (select  distinct COMPANY_ID, ISNULL(OFFICE_ID, -1) AS OFFICE_ID, SrcSystemId, COMPANY_NAME, CONTROLING_OFFICE, OFFICE_NAME  from StagingAreaTest.stg.MSCRUS_ControlOffice where IsDeleted = 0 union select distinct COMPANY_ID, ISNULL(OFFICE_ID, -1) AS OFFICE_ID, SrcSystemId, COMPANY_NAME, CONTROLING_OFFICE, OFFICE_NAME  from StagingAreaTest.stg.UNITY_ControlOffice where IsDeleted = 0)q

containerType.sat.CountRows = select count(*) c  from sat.satContainerType
containerType.satStatus.CountRows = select count(*) c  from sat.satContainerTypeStatus
containerType.satCondition.CountRows = select count (*) c from (select  distinct KODE,  SELSKAB, SrcSystemId, CONT_FEET, CONT_SIZE, CONT_TYPE, SHIP_OWN, TEKST, TEMPERATUR  from StagingAreaTest.stg.MSCRUS_ContType where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct KODE, SELSKAB, SrcSystemId,  CONT_FEET, CONT_SIZE, CONT_TYPE, SHIP_OWN, TEKST, TEMPERATUR  from StagingAreaTest.stg.UNITY_ContType where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
containerType.satStatusCondition.CountRows = select count (*) c from ( select  distinct KODE,  SELSKAB, SrcSystemId, CONT_FEET, CONT_SIZE, CONT_TYPE, SHIP_OWN, TEKST, TEMPERATUR  from StagingAreaTest.stg.MSCRUS_ContType where IsDeleted = 0 union select distinct KODE, SELSKAB, SrcSystemId,  CONT_FEET, CONT_SIZE, CONT_TYPE, SHIP_OWN, TEKST, TEMPERATUR  from StagingAreaTest.stg.UNITY_ContType where IsDeleted = 0)q

containerMoves.sat.CountRows = select count(*) c  from sat.satContainerMoves
containerMoves.satStatus.CountRows = select count(*) c  from sat.satContainerMovesStatus
containerMoves.satCondition.CountRows = select count (*) c from (select  distinct LOBE_NR,  SELSKAB, SrcSystemId, BEMARK, BOOK_NR, CONT_NR,  CONT_SIZE, CONT_TYPE, CREATED_BY, CREATION_DATE, DAMAGED, DATO, DEST, KODE, LOC, LOC2, RAP_DATO, RAP_NR, RAP_STATUS, REP_MODULE, STAT, TID  from StagingAreaTest.stg.MSCRUS_ContRep where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct LOBE_NR, SELSKAB, SrcSystemId, BEMARK, BOOK_NR, CONT_NR,  CONT_SIZE, CONT_TYPE, CREATED_BY, CREATION_DATE, DAMAGED, DATO, DEST, KODE, LOC, LOC2, RAP_DATO, RAP_NR, RAP_STATUS, REP_MODULE, STAT, TID  from StagingAreaTest.stg.UNITY_ContRep where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
containerMoves.satStatusCondition.CountRows = select count (*) c from (select  distinct LOBE_NR,  SELSKAB, SrcSystemId, BEMARK, BOOK_NR, CONT_NR,  CONT_SIZE, CONT_TYPE, CREATED_BY, CREATION_DATE, DAMAGED, DATO, DEST, KODE, LOC, LOC2, RAP_DATO, RAP_NR, RAP_STATUS, REP_MODULE, STAT, TID  from StagingAreaTest.stg.MSCRUS_ContRep where IsDeleted = 0 union select distinct LOBE_NR, SELSKAB, SrcSystemId, BEMARK, BOOK_NR, CONT_NR,  CONT_SIZE, CONT_TYPE, CREATED_BY, CREATION_DATE, DAMAGED, DATO, DEST, KODE, LOC, LOC2, RAP_DATO, RAP_NR, RAP_STATUS, REP_MODULE, STAT, TID  from StagingAreaTest.stg.UNITY_ContRep where IsDeleted = 0)q

oceanVesselService.satStatus.CountRows = select count(*) c  from sat.satOceanVesselServiceStatus
oceanVesselService.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='SRDR' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='SRDR' and AGENT='MSC')q

oceanVesselStatus.satStatus.CountRows = select count(*) c  from sat.satOceanVesselStatusStatus
oceanVesselStatus.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='DYPL' and AGENT='MSC' and FRA='BOOK_VESSEL_STATUS' union  select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='DYPL' and AGENT='MSC' and FRA='BOOK_VESSEL_STATUS')q

imsChargeLines.satStatus.CountRows = select count(*) c  from sat.satImsChargeLinesStatus
imsChargeLines.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='IMSC' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='IMSC' and AGENT='MSC')q

specialContractTypes.sat.CountRows = select count(*) c  from sat.satSpecialContractTypes
specialContractTypes.satStatus.CountRows = select count(*) c  from sat.satSpecialContractTypesStatus
specialContractTypes.satCondition.CountRows =  select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='SCT' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='SCT')q
specialContractTypes.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='SCT' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='SCT')q

correctorRemarkTypes.sat.CountRows = select count(*) c  from sat.satCorrectorRemarkTypes
correctorRemarkTypes.satStatus.CountRows = select count(*) c  from sat.satCorrectorRemarkTypesStatus
correctorRemarkTypes.satCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId,TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='MCK02' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId,TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='MCK02')q
correctorRemarkTypes.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId,TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='MCK02' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId,TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='MCK02')q

sublocation.sat.CountRows = select count(*) c  from sat.satSublocation
sublocation.satStatus.CountRows = select count(*) c  from sat.satSublocationStatus
sublocation.satCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='SUB03' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0and (cdcOperation != 'D ' or cdcOperation is null)  and FELT='DTX' and AGENT='MSC' and FRA='SUB03')q
sublocation.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='SUB03' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='SUB03')q

transportMode.sat.CountRows = select count(*) c  from sat.satTransportMode
transportMode.satStatus.CountRows = select count(*) c  from sat.satTransportModeStatus
transportMode.satCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='MOF02' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DTX' and AGENT='MSC' and FRA='MOF02')q
transportMode.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='MOF02' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='DTX' and AGENT='MSC' and FRA='MOF02')q

exportVessels.sat.CountRows = select count(*) c  from sat.satExportVessels
exportVessels.satStatus.CountRows = select count(*) c  from sat.satExportVesselsStatus
exportVessels.satCondition.CountRows = select count (*) c from (select  distinct EXP_VESSEL_ID,  SELSKAB, SrcSystemId, ACTUAL_SAIL_DATE, GVA_TRADE, OLD_TRADE, VESSEL_CODE, VESSEL_NAME, VOY_NR, WEEK  from StagingAreaTest.stg.MSCRUS_ExpVessels where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct EXP_VESSEL_ID, SELSKAB, SrcSystemId, ACTUAL_SAIL_DATE, GVA_TRADE, OLD_TRADE, VESSEL_CODE, VESSEL_NAME, VOY_NR, WEEK  from StagingAreaTest.stg.UNITY_ExpVessels where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) )q
exportVessels.satStatusCondition.CountRows = select count (*) c from (select  distinct EXP_VESSEL_ID,  SELSKAB, SrcSystemId, ACTUAL_SAIL_DATE, GVA_TRADE, OLD_TRADE, VESSEL_CODE, VESSEL_NAME, VOY_NR, WEEK  from StagingAreaTest.stg.MSCRUS_ExpVessels where IsDeleted = 0 union select distinct EXP_VESSEL_ID, SELSKAB, SrcSystemId, ACTUAL_SAIL_DATE, GVA_TRADE, OLD_TRADE, VESSEL_CODE, VESSEL_NAME, VOY_NR, WEEK  from StagingAreaTest.stg.UNITY_ExpVessels where IsDeleted = 0)q

invoicePosting.sat.CountRows = select count(*) c  from sat.satInvoicePosting
invoicePosting.satStatus.CountRows = select count(*) c  from sat.satInvoicePostingStatus
invoicePosting.satCondition.CountRows = select count (*) c from (select  distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE,  SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BET_DATO, BET_MD, BETAL_BET, BETAL_REF, BILAGSNR, DAGBOG, DATO, FORF_DATO, FP_ID, INIT, KURS, MONT_ENHED, REL_FAK_NR, RESTDKK, RESTVAL, SAP_DOCUMENT_NBR, SOURCE_MODULE, TEKST  from StagingAreaTest.stg.MSCRUS_FaktPost where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE, SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BET_DATO, BET_MD, BETAL_BET, BETAL_REF, BILAGSNR, DAGBOG, DATO, FORF_DATO, FP_ID, INIT, KURS, MONT_ENHED, REL_FAK_NR, RESTDKK, RESTVAL, SAP_DOCUMENT_NBR, SOURCE_MODULE, TEKST  from StagingAreaTest.stg.UNITY_FaktPost where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
invoicePosting.satStatusCondition.CountRows = select count (*) c from (select  distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE,  SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BET_DATO, BET_MD, BETAL_BET, BETAL_REF, BILAGSNR, DAGBOG, DATO, FORF_DATO, FP_ID, INIT, KURS, MONT_ENHED, REL_FAK_NR, RESTDKK, RESTVAL, SAP_DOCUMENT_NBR, SOURCE_MODULE, TEKST  from StagingAreaTest.stg.MSCRUS_FaktPost where IsDeleted = 0 union select distinct F_TYPE, FAKTURANR, K_TYPE, KUNDE, SELSKAB, SrcSystemId, BELOBDKK, BELOBVAL, BET_DATO, BET_MD, BETAL_BET, BETAL_REF, BILAGSNR, DAGBOG, DATO, FORF_DATO, FP_ID, INIT, KURS, MONT_ENHED, REL_FAK_NR, RESTDKK, RESTVAL, SAP_DOCUMENT_NBR, SOURCE_MODULE, TEKST  from StagingAreaTest.stg.UNITY_FaktPost where IsDeleted = 0)q

containerLocation.sat.CountRows = select count(*) c  from sat.satContainerLocation
containerLocation.satStatus.CountRows = select count(*) c  from sat.satContainerLocationStatus
containerLocation.satCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and ART='CL' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and  ART='CL' and LOBE_NR=1)q
containerLocation.satStatusCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0  and ART='CL' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0  and  ART='CL' and LOBE_NR=1)q

vesselRegistry.sat.CountRows = select count(*) c  from sat.satVesselRegistry
vesselRegistry.satStatus.CountRows = select count(*) c  from sat.satVesselRegistryStatus
vesselRegistry.satCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, KONTONR, MANIFEST, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)and ART='FE' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, KONTONR, MANIFEST, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and  ART='FE' and LOBE_NR=1)q
vesselRegistry.satStatusCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, KONTONR, MANIFEST, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and ART='FE' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, KONTONR, MANIFEST, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and  ART='FE' and LOBE_NR=1)q

country.sat.CountRows = select count(*) c  from sat.satCountry
country.satStatus.CountRows = select count(*) c  from sat.satCountryStatus
country.satCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and  ART='LA' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR, SELSKAB, SrcSystemId, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and   ART='LA' and LOBE_NR=1)q
country.satStatusCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and  ART='LA' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR, SELSKAB, SrcSystemId, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and   ART='LA' and LOBE_NR=1)q

locations.sat.CountRows = select count(*) c  from sat.satLocations
locations.satStatus.CountRows = select count(*) c  from sat.satLocationsStatus
locations.satCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, CHAR_ATRIBUTE1, CHAR_ATRIBUTE4, CHAR_ATRIBUTE2, CHAR_ATRIBUTE9, MONT_ENHED, TEKST_1 from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and ART='LO' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, CHAR_ATRIBUTE1, CHAR_ATRIBUTE4, CHAR_ATRIBUTE2, CHAR_ATRIBUTE9, MONT_ENHED, TEKST_1  from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and  ART='LO' and LOBE_NR=1)q
locations.satStatusCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, CHAR_ATRIBUTE1, CHAR_ATRIBUTE4, CHAR_ATRIBUTE2, CHAR_ATRIBUTE9, MONT_ENHED, TEKST_1 from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and ART='LO' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, CHAR_ATRIBUTE1, CHAR_ATRIBUTE4, CHAR_ATRIBUTE2, CHAR_ATRIBUTE9, MONT_ENHED, TEKST_1  from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0  and  ART='LO' and LOBE_NR=1)q

currency.sat.CountRows = select count(*) c  from sat.satCurrency
currency.satStatus.CountRows = select count(*) c  from sat.satCurrencyStatus
currency.satCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and ART='VA' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and ART='VA' and LOBE_NR=1)q
currency.satStatusCondition.CountRows = select count (*) c from (select  distinct ART, KODE, LOBE_NR,  SELSKAB, SrcSystemId, TEKST_1  from StagingAreaTest.stg.MSCRUS_Henvis where IsDeleted = 0 and ART='VA' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR,   SELSKAB, SrcSystemId, TEKST_1 from StagingAreaTest.stg.UNITY_Henvis where IsDeleted = 0 and ART='VA' and LOBE_NR=1)q

invoice.sat.CountRows = select count(*) c  from sat.satInvoice
invoice.satStatus.CountRows = select count(*) c  from sat.satInvoiceStatus
invoice.satCondition.CountRows = select count (*) c from ((select distinct ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.MSCRUS_Ordre where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.UNITY_Ordre where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) union (select ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.MSCRUS_Ordre where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or reg_dato  < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) union select distinct ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.UNITY_Ordre where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or reg_dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3)))q 
invoice.satStatusCondition.CountRows = select count (*) c from ((select distinct ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.MSCRUS_Ordre where IsDeleted = 0 union select distinct ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.UNITY_Ordre where IsDeleted = 0 ) union (select ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.MSCRUS_Ordre where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or reg_dato  < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) union select distinct ORDRE_NR, SELSKAB, SrcSystemId, BETAL_BET, DK_KODE, FAK_NR, FAKT_DATO, FORF_DATO, IMP_EXP, KURS, PRINT_DATE, REF_TYPE, REG_DATO, REG_NR, SERVICE_DATE, STAT, VOR_REF  from StagingAreaTest.stg.UNITY_Ordre where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or reg_dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3)))q 

invoiceLines.sat.CountRows = select count(*) c  from sat.satInvoiceLines
invoiceLines.satStatus.CountRows = select count(*) c  from sat.satInvoiceLinesStatus
invoiceLines.satCondition.CountRows = select count (*) c from (select  distinct LINIE_NR, ORDRE_NR, SELSKAB, SrcSystemId, A_PRIS, AKTIVITET, ANTAL, CONT_NR, CONT_TYPE, ENHED, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.MSCRUS_OrdreLin where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct LINIE_NR, ORDRE_NR,SELSKAB, SrcSystemId, A_PRIS, AKTIVITET, ANTAL, CONT_NR, CONT_TYPE, ENHED, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.UNITY_OrdreLin where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
invoiceLines.satStatusCondition.CountRows = select count (*) c from (select  distinct LINIE_NR, ORDRE_NR, SELSKAB, SrcSystemId, A_PRIS, AKTIVITET, ANTAL, CONT_NR, CONT_TYPE, ENHED, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.MSCRUS_OrdreLin where IsDeleted = 0 union select distinct LINIE_NR, ORDRE_NR,SELSKAB, SrcSystemId, A_PRIS, AKTIVITET, ANTAL, CONT_NR, CONT_TYPE, ENHED, OMR_KURS, OMR_VALUTA, TEKST, TOTAL_BEL, YDE_NR  from StagingAreaTest.stg.UNITY_OrdreLin where IsDeleted = 0)q

fileLiner.sat.CountRows = select count(*) c  from sat.satFileLiner
fileLiner.satStatus.CountRows = select count(*) c  from sat.satFileLinerStatus
fileLiner.satCondition.CountRows = select count (*) c from ((select  distinct AFDELING, SAGSNR, SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG  from StagingAreaTest.stg.MSCRUS_Sag where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct AFDELING, SAGSNR,SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG  from StagingAreaTest.stg.UNITY_Sag where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) union (select distinct AFDELING, SAGSNR, SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG from StagingAreaTest.stg.MSCRUS_Sag where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or start_dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) and cdcTimeStamp is null union select distinct AFDELING, SAGSNR, SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG from StagingAreaTest.stg.UNITY_Sag where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or start_dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104))and ReasonDeleted not in (2,3) and cdcTimeStamp is null))q  
fileLiner.satStatusCondition.CountRows =  select count (*) c from ((select  distinct AFDELING, SAGSNR, SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG  from StagingAreaTest.stg.MSCRUS_Sag where IsDeleted = 0 union select distinct AFDELING, SAGSNR,SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG  from StagingAreaTest.stg.UNITY_Sag where IsDeleted = 0)union (select distinct AFDELING, SAGSNR, SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG from StagingAreaTest.stg.MSCRUS_Sag where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or start_dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) and ReasonDeleted not in (2,3) and cdcTimeStamp is null union select distinct AFDELING, SAGSNR, SELSKAB, SrcSystemId, CALL_ID, EXP_AFG_DATO, IMP_ANK_DATO, PROFORMA_DATE, REJSE_NR, S_WEEK, SKIBS_NAVN, SLUT_DATO, START_DATO, STAT, TEMPORARY_FLAG from StagingAreaTest.stg.UNITY_Sag where SELSKAB not in (select distinct SELSKAB from StagingAreaTest.stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or start_dato < (SELECT  CONVERT(datetime, (SELECT c_val FROM StagingAreaTest.stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104))and ReasonDeleted not in (2,3) and cdcTimeStamp is null))q 

fileROE.sat.CountRows = select count(*) c  from sat.satFileROE
fileROE.satStatus.CountRows = select count(*) c  from sat.satFileROEStatus
fileROE.satCondition.CountRows = select count (*) c from (select  distinct AFDELING, SAGSNR, VALUTA, SELSKAB, SrcSystemId, KURS  from StagingAreaTest.stg.MSCRUS_SagKurs where IsDeleted = 0  and (cdcOperation != 'D ' or cdcOperation is null) union select distinct AFDELING, SAGSNR, VALUTA, SELSKAB, SrcSystemId, KURS  from StagingAreaTest.stg.UNITY_SagKurs where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
fileROE.satStatusCondition.CountRows = select count (*) c from (select  distinct AFDELING, SAGSNR, VALUTA, SELSKAB, SrcSystemId, KURS  from StagingAreaTest.stg.MSCRUS_SagKurs where IsDeleted = 0 union select distinct AFDELING, SAGSNR, VALUTA, SELSKAB, SrcSystemId, KURS  from StagingAreaTest.stg.UNITY_SagKurs where IsDeleted = 0)q

dailyRoe.sat.CountRows = select count(*) c  from sat.satDailyRoe
dailyRoe.satStatus.CountRows = select count(*) c  from sat.satDailyRoeStatus
dailyRoe.satCondition.CountRows = select count (*) c from (select  distinct DATO, LOBE_NR, SELSKAB, SrcSystemId, KURS, VALUTA  from StagingAreaTest.stg.MSCRUS_ShipKurs where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct DATO, LOBE_NR, SELSKAB, SrcSystemId,  KURS, VALUTA  from StagingAreaTest.stg.UNITY_ShipKurs where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
dailyRoe.satStatusCondition.CountRows = select count (*) c from (select  distinct DATO, LOBE_NR, SELSKAB, SrcSystemId, KURS, VALUTA  from StagingAreaTest.stg.MSCRUS_ShipKurs where IsDeleted = 0 union select distinct DATO, LOBE_NR, SELSKAB, SrcSystemId,  KURS, VALUTA  from StagingAreaTest.stg.UNITY_ShipKurs where IsDeleted = 0)q

company.sat.CountRows = select count(*) c  from sat.satCompany
company.satStatus.CountRows = select count(*) c  from sat.satCompanyStatus
company.satCondition.CountRows = select count (*) c from (select  distinct SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, NAVN, POSTNR  from StagingAreaTest.stg.MSCRUS_Selskab where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, NAVN, POSTNR   from StagingAreaTest.stg.UNITY_Selskab where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
company.satStatusCondition.CountRows = select count (*) c from (select  distinct SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, NAVN, POSTNR  from StagingAreaTest.stg.MSCRUS_Selskab where isDeleted = 0 union select distinct SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, NAVN, POSTNR  from StagingAreaTest.stg.UNITY_Selskab where isDeleted = 0)q

shipItConstants.sat.CountRows = select count(*) c  from sat.satShipItConstants
shipItConstants.satStatus.CountRows = select count(*) c  from sat.satShipItConstantsStatus
shipItConstants.satCondition.CountRows = select count (*) c from (select  distinct C_NAME, SrcSystemId, C_VAL  from StagingAreaTest.stg.MSCRUS_UtsConstants where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and C_NAME='CPH_SELSKAB' union select distinct C_NAME, SrcSystemId, C_VAL from StagingAreaTest.stg.UNITY_UtsConstants where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and C_NAME='CPH_SELSKAB')q
shipItConstants.satStatusCondition.CountRows = select count (*) c from (select  distinct C_NAME, SrcSystemId, C_VAL  from StagingAreaTest.stg.MSCRUS_UtsConstants where IsDeleted = 0 and C_NAME='CPH_SELSKAB' union select distinct C_NAME, SrcSystemId, C_VAL from StagingAreaTest.stg.UNITY_UtsConstants where IsDeleted = 0 and C_NAME='CPH_SELSKAB')q

containerTypeSpecEquip.sat.CountRows = select count(*) c  from sat.satContainerTypeSpecEquip
containerTypeSpecEquip.satCondition.CountRows = select count (*) c from (select  distinct CONT_FEET, CONT_SIZE, CONT_TYPE, TEKST, SrcSystemId, MasterContType, TANK, SpecialEqpInclREF, SpecialEqpWoREF, FLATRACK, PLATFORM, OPENTOP, VALID_FROM  from StagingAreaTest.stg.Excel_CntrTypeSpecEquip where IsDeleted = 0)q

controllingOfficeAuxLocation.sat.CountRows = select count(*) c  from sat.satControllingOfficeAuxLocation
controllingOfficeAuxLocation.ViewDistinct.CountRows = select count (*) c from hub.hubControllingOffice hub inner join (select distinct q.COMPANY_ID, q.OFFICE_ID from (select distinct COMPANY_ID, ISNULL (OFFICE_ID, -1) as OFFICE_ID from StagingAreaTest.stg.v_ControllingOfficeLocationCode where Office_ID is null union select distinct COMPANY_ID,  OFFICE_ID from StagingAreaTest.stg.v_ControllingOfficeLocationCode where Office_ID is not null) q) w  on w.COMPANY_ID=hub.companyId and w.OFFICE_ID = hub.officeId 

locationsPortsOverview.satCondition.CountRows = select count (*)c from (select * from StagingAreaTest.stg.[EXCEL_PortsOverview] where LOCATION_CODE in (select LOCATION_CODE from StagingAreaTest.stg.[EXCEL_PortsOverview] group by LOCATION_CODE having count (LOCATION_CODE)>1) union select * from StagingAreaTest.stg.[EXCEL_PortsOverview] where LOCATION_CODE not in (select LOCATION_CODE from StagingAreaTest.stg.[EXCEL_PortsOverview] group by LOCATION_CODE having count (LOCATION_CODE)>1)) q
locationsPortsOverview.sat.CountRows = select count(*) c  from sat.satLocationsPortsOverview

bookingReportingCustomer.sat.CountRows = select count(*) c  from sat.satBookingReportingCustomer
bookingReportingCustomer.condition.CountRows = select count (*) c from (select distinct  BL_NUMBER, CUSTOMER, VALID_FROM, NvoBcoFrw from StagingAreaTest.stg.EXCEL_CleanUp)q

bookingCustomers.sat.CountRows = select count(*) c  from sat.satBookingCustomers

workingTime.sat.CountRows = select count(*) c  from sat.satWorkingTime
workingTime.satStatus.CountRows = select count(*) c  from sat.satWorkingTimeStatus
workingTime.satCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='INWT' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='INWT' and AGENT='MSC')q
workingTime.satStatusCondition.CountRows = select count (*) c from (select  distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from StagingAreaTest.stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='INWT' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from StagingAreaTest.stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='INWT' and AGENT='MSC')q

bookingInternalRemarks.sat.CountRows = select count(*) c  from sat.satBookingInternalRemarks
bookingInternalRemarks.satStatus.CountRows = select count(*) c  from sat.satBookingInternalRemarksStatus
bookingInternalRemarks.satCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId, CREATED_BY, CREATE_DATE, TEXT from stg.MSCRUS_BookBemInternal where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId, CREATED_BY, CREATE_DATE, TEXT from stg.UNITY_BookBemInternal where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
bookingInternalRemarks.satStatusCondition.CountRows = select count (*) c from (select  distinct BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId, CREATED_BY, CREATE_DATE, TEXT from stg.MSCRUS_BookBemInternal where IsDeleted = 0 union select distinct BOOK_NR, LOBE_NR, SELSKAB, SrcSystemId, CREATED_BY, CREATE_DATE, TEXT from stg.UNITY_BookBemInternal where IsDeleted = 0)q

commodityHsCodes.sat.CountRows = select count(*) c  from sat.satCommodityHsCodes
commodityHsCodes.satStatus.CountRows = select count(*) c  from sat.satCommodityHsCodesStatus
commodityHsCodes.satCondition.CountRows = select count (*) c from (select  distinct AFDELING, ITEM_NO, SELSKAB, SrcSystemId, TEKST_1, VALID_FROM_DATE, VALID_TO_DATE from stg.MSCRUS_Commodity where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct AFDELING, ITEM_NO, SELSKAB, SrcSystemId, TEKST_1, VALID_FROM_DATE, VALID_TO_DATE from stg.UNITY_Commodity where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
commodityHsCodes.satStatusCondition.CountRows = select count (*) c from (select  distinct AFDELING, ITEM_NO, SELSKAB, SrcSystemId, TEKST_1, VALID_FROM_DATE, VALID_TO_DATE from stg.MSCRUS_Commodity where IsDeleted = 0 union select distinct AFDELING, ITEM_NO, SELSKAB, SrcSystemId, TEKST_1, VALID_FROM_DATE, VALID_TO_DATE from stg.UNITY_Commodity where IsDeleted = 0)q

containerMoveTypes.sat.CountRows = select count(*) c  from sat.satContainerMoveTypes
containerMoveTypes.satStatus.CountRows = select count(*) c  from sat.satContainerMoveTypesStatus
containerMoveTypes.satCondition.CountRows = select count (*) c from (select distinct BEV_TYPE, KODE, LINIE, SELSKAB, SrcSystemId, DEMURRAGE, DETENTION, GRUPPE, IMP_EXP, STAT from stg.MSCRUS_ContBev where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BEV_TYPE, KODE, LINIE, SELSKAB, SrcSystemId, DEMURRAGE, DETENTION, GRUPPE, IMP_EXP, STAT from stg.UNITY_ContBev where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
containerMoveTypes.satStatusCondition.CountRows = select count (*) c from (select distinct BEV_TYPE, KODE, LINIE, SELSKAB, SrcSystemId, DEMURRAGE, DETENTION, GRUPPE, IMP_EXP, STAT from stg.MSCRUS_ContBev where IsDeleted = 0 union select distinct BEV_TYPE, KODE, LINIE, SELSKAB, SrcSystemId, DEMURRAGE, DETENTION, GRUPPE, IMP_EXP, STAT from stg.UNITY_ContBev where IsDeleted = 0)q

contMaster.sat.CountRows = select count(*) c  from sat.satContMaster
contMaster.satStatus.CountRows = select count(*) c  from sat.satContMasterStatus
contMaster.satCondition.CountRows = select count (*) c from (select distinct CONT_NR, SrcSystemId, EMPLOYMENT, ISO_CODE, PAYLOAD, TARA from stg.MSCRUS_ContMaster where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct CONT_NR, SrcSystemId,EMPLOYMENT, ISO_CODE, PAYLOAD, TARA from stg.UNITY_ContMaster where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
contMaster.satStatusCondition.CountRows = select count (*) c from (select distinct CONT_NR, SrcSystemId,EMPLOYMENT, ISO_CODE, PAYLOAD, TARA from stg.MSCRUS_ContMaster where IsDeleted = 0 union select distinct CONT_NR, SrcSystemId,EMPLOYMENT, ISO_CODE, PAYLOAD, TARA from stg.UNITY_ContMaster where IsDeleted = 0)q

containerDemurrageRules.sat.CountRows = select count(*) c  from sat.satContainerDemurrageRules
containerDemurrageRules.satStatus.CountRows = select count(*) c  from sat.satContainerDemurrageRulesStatus
containerDemurrageRules.satCondition.CountRows = select count (*) c from ((select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.MSCRUS_ContRules where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.UNITY_ContRules where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null)) union (select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.MSCRUS_ContRules where SELSKAB not in (select distinct SELSKAB from stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or til_dato  < (SELECT  CONVERT(datetime, (SELECT c_val FROM stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) or fra_dato > CONVERT(datetime, ('31.12.9999'), 104) and ReasonDeleted not in (2,3) and (cdcOperation != 'D ' or cdcOperation is null) union select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.UNITY_ContRules where SELSKAB not in (select distinct SELSKAB from stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or til_dato  < (SELECT  CONVERT(datetime, (SELECT c_val FROM stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) or fra_dato > CONVERT(datetime, ('31.12.9999'), 104) and ReasonDeleted not in (2,3) and (cdcOperation != 'D ' or cdcOperation is null)))q
containerDemurrageRules.satStatusCondition.CountRows = select count (*) c from ((select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.MSCRUS_ContRules where IsDeleted = 0 union select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.UNITY_ContRules where IsDeleted = 0 ) union (select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.MSCRUS_ContRules where SELSKAB not in (select distinct SELSKAB from stg.MSCRUS_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or til_dato  < (SELECT  CONVERT(datetime, (SELECT c_val FROM stg.MSCRUS_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) or fra_dato > CONVERT(datetime, ('31.12.9999'), 104) and ReasonDeleted not in (2,3) union select distinct SEQ_NO, SELSKAB,SrcSystemId, REF_NR, FRI_DAGE, HELLIGDAGE1, HELLIGDAGE2, INCL_FRI_DAGE, START_DAGE, VOR_REF_PLAIN, YDE_NR from stg.UNITY_ContRules where SELSKAB not in (select distinct SELSKAB from stg.UNITY_EdiKonv where AGENT = 'MSC' and FELT = 'ID' and FRA = 'DWH_LOAD_SELSKAB' and TIL = 'Y' and isDeleted = 0) or til_dato  < (SELECT  CONVERT(datetime, (SELECT c_val FROM stg.UNITY_utsConstants WHERE c_name = 'DWH_START_DATE' and  partitionId =0 and isDeleted =0), 104)) or fra_dato > CONVERT(datetime, ('31.12.9999'), 104) and ReasonDeleted not in (2,3)))q

containerStatusEventsGVA.sat.CountRows = select count(*) c  from sat.satContainerStatusEventsGVA
containerStatusEventsGVA.satStatus.CountRows = select count(*) c  from sat.satContainerStatusEventsGVAStatus
containerStatusEventsGVA.satCondition.CountRows = select count (*) c from (select distinct REP_ID, SELSKAB, SrcSystemId, BL_NR, BOOK_NR, CONT_NR, DEST_NAME, EVENT_DATE, EVENT_TIME, STATUS_CODE, VESSEL_NAME, VESSEL_VOYAGE from stg.MSCRUS_CtsContEvent where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct REP_ID, SELSKAB, SrcSystemId, BL_NR, BOOK_NR, CONT_NR, DEST_NAME, EVENT_DATE, EVENT_TIME, STATUS_CODE, VESSEL_NAME, VESSEL_VOYAGE from stg.UNITY_CtsContEvent where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
containerStatusEventsGVA.satStatusCondition.CountRows = select count (*) c from (select distinct REP_ID, SELSKAB, SrcSystemId, BL_NR, BOOK_NR, CONT_NR, DEST_NAME, EVENT_DATE, EVENT_TIME, STATUS_CODE, VESSEL_NAME, VESSEL_VOYAGE from stg.MSCRUS_CtsContEvent where IsDeleted = 0 union select distinct REP_ID, SELSKAB, SrcSystemId, BL_NR, BOOK_NR, CONT_NR, DEST_NAME, EVENT_DATE, EVENT_TIME, STATUS_CODE, VESSEL_NAME, VESSEL_VOYAGE from stg.UNITY_CtsContEvent where IsDeleted = 0)q

marketShareTier4.EXCELData.CountRows = select count(*) c  from sat.satMarketShareTier4 where SrcSystemId=13
marketShareTier4.EXCELDataCondition.CountRows = select count (*) c from (select distinct YYYY, MM, FromRegion, FromCountry, FromLocation, ToLocation,ToRegion, ToCountry, TEU_DRY, TEU_REEFER, TEU_SL_DRY, TEU_SL_REEFER  from stg.EXCEL_CtsTier4 where IsDeleted = 0)q

marketShareTier5.sat.CountRows = select count(*) c  from sat.satMarketShareTier5
marketShareTier5.satCondition.CountRows = select count (*) c from (select distinct YYYY, MM, FromLocation, ToLocation, ShippingLine, FromRegion, FromCountry, ToRegion, ToCountry, TEU_DRY, TEU_REEFER, MSC_DRY, MSC_REEFER from stg.EXCEL_CtsTier5 where IsDeleted = 0)q

demurrageStorage.sat.CountRows = select count(*) c  from sat.satDemurrageStorage
demurrageStorage.satStatus.CountRows = select count(*) c  from sat.satDemurrageStorageStatus
demurrageStorage.satCondition.CountRows = select count (*) c from ( select distinct BOOK_NO, CODE, COMPANY, CONT_NO, DEM_ID, STATUS, SrcSystemId, AMOUNT, CLIENT_ROE, DAYS, END_DATE, END_MARK, FREE_DAYS, INVOICED_AMOUNT, REISSUE, ROE, RULE_ID, START_DATE, START_DAYS, START_MARK, STD_DAYS, STD_ROE, STD_RULE_ID, THEORETICAL_AMOUNT from stg.MSCRUS_Demurrage where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct BOOK_NO, CODE, COMPANY, CONT_NO, DEM_ID, STATUS, SrcSystemId, AMOUNT, CLIENT_ROE, DAYS, END_DATE, END_MARK, FREE_DAYS, INVOICED_AMOUNT, REISSUE, ROE, RULE_ID, START_DATE, START_DAYS, START_MARK, STD_DAYS, STD_ROE, STD_RULE_ID, THEORETICAL_AMOUNT from stg.UNITY_Demurrage where IsDeleted = 0and (cdcOperation != 'D ' or cdcOperation is null))q
demurrageStorage.satStatusCondition.CountRows = select count (*) c from ( select distinct BOOK_NO, CODE, COMPANY, CONT_NO, DEM_ID, STATUS, SrcSystemId, AMOUNT, CLIENT_ROE, DAYS, END_DATE, END_MARK, FREE_DAYS, INVOICED_AMOUNT, REISSUE, ROE, RULE_ID, START_DATE, START_DAYS, START_MARK, STD_DAYS, STD_ROE, STD_RULE_ID, THEORETICAL_AMOUNT from stg.MSCRUS_Demurrage where IsDeleted = 0 union select distinct BOOK_NO, CODE, COMPANY, CONT_NO, DEM_ID, STATUS, SrcSystemId, AMOUNT, CLIENT_ROE, DAYS, END_DATE, END_MARK, FREE_DAYS, INVOICED_AMOUNT, REISSUE, ROE, RULE_ID, START_DATE, START_DAYS, START_MARK, STD_DAYS, STD_ROE, STD_RULE_ID, THEORETICAL_AMOUNT from stg.UNITY_Demurrage where IsDeleted = 0)q

terminals.sat.CountRows = select count(*) c  from sat.satTerminals
terminals.satStatus.CountRows = select count(*) c  from sat.satTerminalsStatus
terminals.satCondition.CountRows = select count (*) c from (select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='TERM' and AGENT='MSC' and (cdcOperation != 'D ' or cdcOperation is null) union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='TERM' and AGENT='MSC' and (cdcOperation != 'D ' or cdcOperation is null))q
terminals.satStatusCondition.CountRows = select count (*) c from (select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST  from stg.MSCRUS_EdiKonv where IsDeleted = 0 and FELT='TERM' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, TEKST from stg.UNITY_EdiKonv where IsDeleted = 0 and FELT='TERM' and AGENT='MSC')q

companyDemurrageEurDefault.sat.CountRows = select count(*) c  from sat.satCompanyDemurrageEurDefault
companyDemurrageEurDefault.satCondition.CountRows = select count (*) c from (select  hubC.dwhIdHubCompany, src.TIL, src.SrcSystemId from DataVaultTest.hub.hubCompany hubC inner join (select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from  StagingAreaTest.stg.UNITY_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DEUR' and AGENT='MSC' and FRA='INVOICE_VALUTA'  union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from StagingAreaTest.stg.MSCRUS_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='DEUR' and AGENT='MSC' and FRA='INVOICE_VALUTA') src on hubC.CompanyId = src.SELSKAB and hubC.SrcSystemId = src.SrcSystemId) q

containerLocationLoc.sat.CountRows = select count(*) c  from sat.satContainerLocationLoc
containerLocationLoc.satCondition.CountRows = select count (*) c from (select  hubC.dwhIdHubContainerLocation, src.TIL, src.SrcSystemId from datavaulttest.hub.hubContainerLocation hubC inner join (select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from  StagingAreaTest.stg.UNITY_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='LOC' and AGENT='MSC' union select distinct AGENT, FELT, TIL, FRA, SELSKAB, SrcSystemId, cdcTimestamp from StagingAreaTest.stg.MSCRUS_EdiKonv where isDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) and FELT='LOC' and AGENT='MSC' ) src on hubC.containerLocationCode = src.FRA and hubC.accessCompanyId = src.SELSKAB and hubC.SrcSystemId = src.SrcSystemId) q

sourceSystemUsers.sat.CountRows = select count(*) c  from sat.satSourceSystemUsers
sourceSystemUsers.satStatus.CountRows = select count(*) c  from sat.satSourceSystemUsersStatus
sourceSystemUsers.satCondition.CountRows = select count (*) c from (select distinct ART, KODE, LOBE_NR, SELSKAB, SrcSystemId, TEKST_1, TEKST_2  from stg.MSCRUS_Henvis where IsDeleted = 0 and ART='VO' and LOBE_NR=1 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct ART, KODE, LOBE_NR, SELSKAB, SrcSystemId, TEKST_1, TEKST_2 from stg.UNITY_Henvis where IsDeleted = 0 and ART='VO' and LOBE_NR=1 and (cdcOperation != 'D ' or cdcOperation is null))q
sourceSystemUsers.satStatusCondition.CountRows = select count (*) c from (select distinct ART, KODE, LOBE_NR, SELSKAB, SrcSystemId, TEKST_1, TEKST_2  from stg.MSCRUS_Henvis where IsDeleted = 0 and ART='VO' and LOBE_NR=1 union select distinct ART, KODE, LOBE_NR, SELSKAB, SrcSystemId, TEKST_1, TEKST_2 from stg.UNITY_Henvis where IsDeleted = 0 and ART='VO' and LOBE_NR=1)q

branch.sat.CountRows = select count(*) c  from sat.satBranch
branch.satStatus.CountRows = select count(*) c  from sat.satBranchStatus
branch.satCondition.CountRows = select count (*) c from (select distinct NR, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, NAVN, USE_IN_CONTROL_OFFICE from stg.MSCRUS_Kontor where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct NR, SELSKAB, SrcSystemId,ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, NAVN, USE_IN_CONTROL_OFFICE from stg.UNITY_Kontor where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
branch.satStatusCondition.CountRows = select count (*) c from (select distinct NR, SELSKAB, SrcSystemId, ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, NAVN, USE_IN_CONTROL_OFFICE from stg.MSCRUS_Kontor where IsDeleted = 0 union select distinct NR, SELSKAB, SrcSystemId,ADRESSE1, ADRESSE2, ADRESSE3, BYNAVN, NAVN, USE_IN_CONTROL_OFFICE from stg.UNITY_Kontor where IsDeleted = 0)q

serviceNames.sat.CountRows = select count(*) c  from sat.satServiceNames
serviceNames.satStatus.CountRows = select count(*) c  from sat.satServiceNamesStatus
serviceNames.satCondition.CountRows = select count (*) c from ( select distinct ART, NR, SELSKAB, SrcSystemId, NAVN1, VALID_FROM_DATE, VALID_TILL_DATE from stg.MSCRUS_StedBar where IsDeleted = 0 and ART='ST' and (cdcOperation != 'D ' or cdcOperation is null) union select distinct ART, NR, SELSKAB, SrcSystemId, NAVN1, VALID_FROM_DATE, VALID_TILL_DATE from stg.UNITY_StedBar where IsDeleted = 0 and ART='ST' and (cdcOperation != 'D ' or cdcOperation is null))q
serviceNames.satStatusCondition.CountRows = select count (*) c from (select distinct ART, NR, SELSKAB, SrcSystemId, NAVN1, VALID_FROM_DATE, VALID_TILL_DATE from stg.MSCRUS_StedBar where IsDeleted = 0 and ART='ST' union select distinct ART, NR, SELSKAB, SrcSystemId, NAVN1, VALID_FROM_DATE, VALID_TILL_DATE from stg.UNITY_StedBar where IsDeleted = 0 and ART='ST')q

containerVgm.sat.CountRows = select count(*) c  from sat.satContainerVgm
containerVgm.satStatus.CountRows = select count(*) c  from sat.satContainerVgmStatus
containerVgm.satCondition.CountRows = select count (*) c from (select distinct ID, SELSKAB, SrcSystemId, BOOK_NR, CONT_NR, VGM_SOURCE, VGM_STATUS, VGM_UNIT, VGM_WEIGHT, CdcTimestamp from stg.MSCRUS_Vgm where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct ID, SELSKAB, SrcSystemId, BOOK_NR, CONT_NR, VGM_SOURCE, VGM_STATUS, VGM_UNIT, VGM_WEIGHT, CdcTimestamp from stg.UNITY_Vgm where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
containerVgm.satStatusCondition.CountRows = select count (*) c from (select distinct ID, SELSKAB, SrcSystemId, BOOK_NR, CONT_NR, VGM_SOURCE, VGM_STATUS, VGM_UNIT, VGM_WEIGHT, CdcTimestamp from stg.MSCRUS_Vgm where IsDeleted = 0 union select distinct ID, SELSKAB, SrcSystemId, BOOK_NR, CONT_NR, VGM_SOURCE, VGM_STATUS, VGM_UNIT, VGM_WEIGHT, CdcTimestamp from stg.UNITY_Vgm where IsDeleted = 0)q

vgmCode.sat.CountRows = select count(*) c  from sat.satVgmCode
vgmCode.satStatus.CountRows = select count(*) c  from sat.satVgmCodeStatus
vgmCode.satCondition.CountRows = select count (*) c from (select distinct APPLICABLE, CODE_ID, SrcSystemId, CODE_NAME, PRIORITY from stg.MSCRUS_VgmCodes where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct APPLICABLE, CODE_ID, SrcSystemId, CODE_NAME, PRIORITY from stg.UNITY_VgmCodes where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
vgmCode.satStatusCondition.CountRows = select count (*) c from (select distinct APPLICABLE, CODE_ID, SrcSystemId, CODE_NAME, PRIORITY from stg.MSCRUS_VgmCodes where IsDeleted = 0 union select distinct APPLICABLE, CODE_ID, SrcSystemId, CODE_NAME, PRIORITY from stg.UNITY_VgmCodes where IsDeleted = 0)q

expectedImportGVA.sat.CountRows = select count(*) c  from sat.satExpectedImportGVA
expectedImportGVA.satCondition.CountRows = select count (*) c from (select distinct BLnumber, ContainerNumber, OriginRegion, VesselService, ContainerSizeType, DepartureVesselVoyage, SailingDate, Week, POLcountry, PortOfLoad, LastTSport, ETD, Service, VesselVoyage, PODcountry, PortOfDischarge, FinalCountry, FinalLocation, SubdivisionCode, ETA  from stg.EXCEL_GvaDischargeList where IsDeleted = 0)q

loopSearch.sat.CountRows = select count(*) c  from sat.satLoopSearch
loopSearch.satCondition.CountRows = select count (*) c from (select lin.dwhIdlnkLoopSearch, hubs.SerialPortNumber, hubs.PortName, hubs.TS_Port, hubs.VALID_FROM from lin.lnkLoopSearch lin full join (select srcHub1.dwhIdHubLoopSearchLiveScheduleName, isnull(hub2.dwhIdHubLoopSearchLoopLeg, -1) as dwhIdHubLoopSearchLoopLeg, srcHub1.CountryCode, srcHub1.PortCode, srcHub1.SerialPortNumber, srcHub1.PortName, srcHub1.TS_Port, srcHub1.VALID_FROM from  hub.hubLoopSearchLoopLeg hub2 right join (select hub1.dwhIdHubLoopSearchLiveScheduleName, src.LoopLeg, src.CountryCode, src.PortCode, src.SerialPortNumber, src.PortName, src.TS_Port, src.VALID_FROM from hub.hubLoopSearchLiveScheduleName hub1 join (select  LiveScheduleName,  LoopLeg, CountryCode, PortCode, SerialPortNumber, PortName, TS_Port, VALID_FROM from StagingAreaTest.stg.EXCEL_LoopSearch where IsDeleted = 0) src on hub1.liveScheduleName = src.LIVESCHEDULENAME) srcHub1 on srcHub1.LOOPLEG= hub2.loopLeg) hubs on hubs.dwhIdHubLoopSearchLiveScheduleName = lin.dwhIdHubLoopSearchLiveScheduleName and hubs.dwhIdHubLoopSearchLoopLeg= lin.dwhIdHubLoopSearchLoopLeg and hubs.COUNTRYCODE = lin.countryCode and hubs.PORTCODE =  lin.locationCode)q

feederCosts.sat.CountRows = select count(*) c  from sat.satFeederCosts
feederCosts.satCondition.CountRows = select count (*) c from (select distinct PortCode, SourceSheet, _20ftsCtrs, _40ftsCtrs from stg.EXCEL_TrpCosts where IsDeleted = 0)q

femeFeederCosts.sat.CountRows = select count(*) c  from sat.satFemeFeederCosts
femeFeederCosts.satCondition.CountRows = select count (*) c from (select distinct PortCode, TS_CODE, SourceSheet, _20ftsCtrs, _40ftsCtrs  from stg.EXCEL_FemeTrpCosts where IsDeleted = 0)q

service.sat.CountRows = select count(*) c  from sat.satService
service.satStatus.CountRows = select count(*) c  from sat.satServiceStatus
service.satCondition.CountRows = select count (*) c from (select distinct AFDELING, SELSKAB, SrcSystemId, SWITCH4 from stg.MSCRUS_Service where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null) union select distinct AFDELING, SELSKAB, SrcSystemId, SWITCH4 from stg.UNITY_Service where IsDeleted = 0 and (cdcOperation != 'D ' or cdcOperation is null))q
service.satStatusCondition.CountRows = select count (*) c from (select distinct AFDELING, SELSKAB, SrcSystemId, SWITCH4 from stg.MSCRUS_Service where IsDeleted = 0 union select distinct AFDELING, SELSKAB, SrcSystemId, SWITCH4 from stg.UNITY_Service where IsDeleted = 0)q

iBox.sat.CountRows = select count(*) c  from sat.satIboxData
iBox.satCondition.CountRows = select count (*) c from (select distinct BL_NUMBER, PORT_LOAD_NAME, TRADE_NAME, TS_PORT2_NAME, SPEC_CONTRACT_REF, FEEDER, REEFER, PLACE_OF_DELIVERY_NAME, WEEK, FEEDER_DATE, OCEAN_VESSEL, TRADE, PLR_NAME, MONTH, PORT_DISCH_NAME, CARGO_DESCR, YEAR, IS_PART_LOAD, COUNTRY_NAME, CONT_FEET, TS_PORT1_NAME, IS_IMO, C_40, C_TEU, C_20 from stg.EXCEL_Ibox where IsDeleted = 0)q

