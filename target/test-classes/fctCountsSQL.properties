system.default.RowsForMatch = 8
system.PercentOfRows = 1

common.sql.byRownum = select * from (SELECT ROW_NUMBER() OVER (Order by
common.sql.forCount = SELECT COUNT (*)c

fctBookingCargo.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingCargo, validFrom  from fct.factBookingCargo)q
fctBookingCargo.dwh.CountRows = SELECT count (1) c FROM(SELECT DISTINCT validFrom, dwhIdHubBookingCargo FROM sat.satBookingCargo UNION SELECT DISTINCT validFrom, dwhIdHubBookingCargo FROM sat.satBookingCargoStatus  UNION  SELECT validFrom, dwhIdHubBookingCargo FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk RIGHT JOIN (SELECT dwhIdHubBookingCargo FROM hub.hubBookingCargo) hub ON hub.dwhIdHubBookingCargo = satLnk.dwhIdHubBookingCargo  ) w WHERE dwhIdHubBooking IS NOT NULL UNION SELECT validFrom, dwhIdHubBookingCargo FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubContainerType FROM sat.satLnkBookingCargoContainerType satLnk RIGHT JOIN (SELECT dwhIdHubBookingCargo FROM hub.hubBookingCargo) hub ON hub.dwhIdHubBookingCargo = satLnk.dwhIdHubBookingCargo) w WHERE dwhIdHubContainerType IS NOT NULL  UNION  SELECT validFrom, dwhIdHubBookingCargo FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubFullEmpty FROM sat.satLnkBookingCargoFullEmpty satLnk RIGHT JOIN (SELECT dwhIdHubBookingCargo FROM hub.hubBookingCargo) hub ON hub.dwhIdHubBookingCargo = satLnk.dwhIdHubBookingCargo) w WHERE dwhIdHubFullEmpty IS NOT NULL)q
fctBookingCargo.dataInDV.commonPart = FROM (SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT  hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT validFrom, dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct  sat.validFrom, hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo )allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo UNION SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT  hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT satStatus.validFrom, hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo UNION  SELECT * FROM (SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT satLnk1.validFrom,  hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT  hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo ) a WHERE dwhIdHubBooking IS NOT NULL UNION SELECT * FROM (SELECT distinct allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT  satLnk2.validFrom, allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT   hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT  hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo ) a WHERE dwhIdHubContainerType IS NOT NULL  UNION SELECT * FROM (SELECT distinct satLnk3.validFrom, allSatLnk2.*, satLnk3.dwhIdHubFullEmpty  FROM sat.satLnkBookingCargoFullEmpty satLnk3 RIGHT JOIN (SELECT   allSatLnk1.*, satLnk2.dwhIdHubContainerType  FROM sat.satLnkBookingCargoContainerType satLnk2 RIGHT JOIN (SELECT   hubSatStatus.*, satLnk1.dwhIdHubBooking FROM sat.satLnkBookingBookingCargo satLnk1 RIGHT JOIN (SELECT  hubSat.*,  satStatus.status AS dmStatus from sat.satBookingCargoStatus satStatus inner join (SELECT  dwhIdHubBookingCargo, CASE WHEN containerTypeCode =2 THEN 1 WHEN containerTypeCode =4 THEN 2 ELSE 0 end teus,  containerCount, accessCompanyId, srcSystemId FROM (select distinct   hub.*, LTRIM(SUBSTRING (sat.containerTypeCode, 1,1)) AS containerTypeCode, sat.containerCount from sat.satBookingCargo sat inner join (select  dwhIdHubBookingCargo, srcSystemId, accessCompanyId from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) substrContTypeCode) hubSat ON   hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus ON hubSatStatus.dwhIdHubBookingCargo = satLnk1.dwhIdHubBookingCargo) allSatLnk1 ON allSatLnk1.dwhIdHubBookingCargo = satLnk2.dwhIdHubBookingCargo) allSatLnk2 ON allSatLnk2.dwhIdHubBookingCargo = satLnk3.dwhIdHubBookingCargo ) a WHERE dwhIdHubFullEmpty IS NOT null) w
fctBookingCargo.dataInDM.RowByKeys = SELECT  dwhIdHubBooking, dwhIdHubBookingCargo, dwhIdHubContainerType, dwhIdHubFullEmpty, teus, containerCount, srcSystemId, accessCompanyId, dmStatus, validFrom from  fct.factBookingCargo

factBookingChargeLines.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingChargeLines, validFrom  from fct.factBookingChargeLines)q
factBookingChargeLines.dwh.CountRows = SELECT count (1) c FROM(SELECT validFrom, dwhIdHubBookingChargeLines FROM sat.satBookingChargeLines UNION SELECT validFrom, dwhIdHubBookingChargeLines FROM sat.satBookingChargeLinesStatus UNION SELECT validFrom, dwhIdHubBookingChargeLines FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingChargeLines satLnk RIGHT JOIN (SELECT dwhIdHubBookingChargeLines FROM hub.hubBookingChargeLines bcl) hub ON hub.dwhIdHubBookingChargeLines = satLnk.dwhIdHubBookingChargeLines) w WHERE dwhIdHubBooking IS NOT null)q
factBookingChargeLines.dataInDV.commonPart = FROM (SELECT hubSatStatus.*, satlnk.dwhIdHubBooking FROM   sat.satLnkBookingBookingChargeLines satlnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargeLinesStatus satStatus INNER JOIN ( SELECT sat.validFrom, hub.*, sat.paymentTermCode, sat.chargeGroup, sat.currencyRoe, sat.currency, sat.amount, sat.contNr, sat.chargeNr, sat.chargeName, sat.price, sat.count, sat.units FROM sat.satBookingChargeLines sat INNER JOIN (SELECT dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId FROM hub.hubBookingChargeLines) hub ON hub.dwhIdHubBookingChargeLines = sat.dwhIdHubBookingChargeLines) hubSat ON hubSat.dwhIdHubBookingChargeLines = satStatus.dwhIdHubBookingChargeLines) hubSatStatus ON hubSatStatus.dwhIdHubBookingChargeLines = satlnk.dwhIdHubBookingChargeLines UNION SELECT hubSatStatus.*, satlnk.dwhIdHubBooking FROM   sat.satLnkBookingBookingChargeLines satlnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargeLinesStatus satStatus INNER JOIN (SELECT  hub.*, sat.paymentTermCode, sat.chargeGroup, sat.currencyRoe, sat.currency, sat.amount, sat.contNr, sat.chargeNr, sat.chargeName, sat.price, sat.count, sat.units FROM sat.satBookingChargeLines sat INNER JOIN (SELECT dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId FROM hub.hubBookingChargeLines) hub ON hub.dwhIdHubBookingChargeLines = sat.dwhIdHubBookingChargeLines) hubSat ON hubSat.dwhIdHubBookingChargeLines = satStatus.dwhIdHubBookingChargeLines) hubSatStatus ON hubSatStatus.dwhIdHubBookingChargeLines = satlnk.dwhIdHubBookingChargeLines UNION SELECT * FROM (SELECT satlnk.validFrom, hubSatStatus.*, satlnk.dwhIdHubBooking FROM   sat.satLnkBookingBookingChargeLines satlnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargeLinesStatus satStatus INNER JOIN (SELECT  hub.*, sat.paymentTermCode, sat.chargeGroup, sat.currencyRoe, sat.currency, sat.amount, sat.contNr, sat.chargeNr, sat.chargeName, sat.price, sat.count, sat.units FROM sat.satBookingChargeLines sat INNER JOIN (SELECT dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId FROM hub.hubBookingChargeLines) hub ON hub.dwhIdHubBookingChargeLines = sat.dwhIdHubBookingChargeLines) hubSat ON hubSat.dwhIdHubBookingChargeLines = satStatus.dwhIdHubBookingChargeLines) hubSatStatus ON hubSatStatus.dwhIdHubBookingChargeLines = satlnk.dwhIdHubBookingChargeLines) a WHERE dwhIdHubBooking IS NOT null)w
factBookingChargeLines.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubBookingChargeLines, bookingNumber, positionNr, lineNr, accessCompanyId, srcSystemId, paymentTermCode, chargeGroup, currencyRoe, currency, amount, contNr, chargeNr, chargeName, price, count, units, dmStatus, dwhIdHubBooking from  fct.factBookingChargeLines

factBookingCharges.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingCharges, validFrom  from fct.factBookingCharges)q
factBookingCharges.dwh.CountRows = SELECT count (1) c FROM(SELECT validFrom, dwhIdHubBookingCharges FROM sat.satBookingCharges UNION SELECT validFrom, dwhIdHubBookingCharges FROM sat.satBookingChargesStatus UNION SELECT validFrom, dwhIdHubBookingCharges FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN (SELECT dwhIdHubBookingCharges FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges) w WHERE dwhIdHubBooking IS NOT null)q
factBookingCharges.dataInDV.commonPart = FROM(SELECT DISTINCT hubSatStatus.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargesStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, sat.customerCode, sat.invoiceType, sat.invoiceRelationType, sat.invoiceStatus FROM sat.satBookingCharges  sat INNER JOIN (SELECT dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = sat.dwhIdHubBookingCharges) hubSat ON hubSat.dwhIdHubBookingCharges = satStatus.dwhIdHubBookingCharges) hubSatStatus ON hubSatStatus.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges  UNION SELECT DISTINCT hubSatStatus.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargesStatus satStatus INNER JOIN (SELECT  hub.*, sat.customerCode, sat.invoiceType, sat.invoiceRelationType, sat.invoiceStatus FROM sat.satBookingCharges  sat INNER JOIN (SELECT dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = sat.dwhIdHubBookingCharges) hubSat ON hubSat.dwhIdHubBookingCharges = satStatus.dwhIdHubBookingCharges) hubSatStatus ON hubSatStatus.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges UNION SELECT * FROM (SELECT DISTINCT satLnk.validFrom, hubSatStatus.*, satLnk.dwhIdHubBooking FROM sat.satLnkBookingBookingCharges satLnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingChargesStatus satStatus INNER JOIN (SELECT  hub.*, sat.customerCode, sat.invoiceType, sat.invoiceRelationType, sat.invoiceStatus FROM sat.satBookingCharges  sat INNER JOIN (SELECT dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId FROM hub.hubBookingCharges) hub ON hub.dwhIdHubBookingCharges = sat.dwhIdHubBookingCharges) hubSat ON hubSat.dwhIdHubBookingCharges = satStatus.dwhIdHubBookingCharges) hubSatStatus ON hubSatStatus.dwhIdHubBookingCharges = satLnk.dwhIdHubBookingCharges) a WHERE  dwhIdHubBooking IS NOT NULL )w
factBookingCharges.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubBookingCharges,  bookingNr, positionNr, accessCompanyId, srcSystemId,customerCode, invoiceType, invoiceRelationType, invoiceStatus, dmStatus, dwhIdHubBooking from  fct.factBookingCharges

factBookingEvents.fct.CountRows = select COUNT (*) c from (select dwhIdHubBookingEvents, validFrom  from fct.factBookingEvents)q
factBookingEvents.dwh.CountRows = SELECT count (1) c FROM(SELECT validFrom, dwhIdhubBookingEvents FROM sat.satBookingEvents UNION SELECT validFrom, dwhIdhubBookingEvents FROM sat.satBookingEventsStatus UNION SELECT validFrom, dwhIdhubBookingEvents FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdhubBooking FROM sat.satLnkBookingBookingEvents satLnk RIGHT JOIN (SELECT dwhIdhubBookingEvents FROM hub.hubBookingEvents ) hub ON hub.dwhIdhubBookingEvents = satLnk.dwhIdhubBookingEvents) w WHERE dwhIdHubBooking IS NOT null)q
factBookingEvents.dataInDV.commonPart = FROM (SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdHubBooking FROM sat.satLnkBookingBookingEvents satlnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingEventsStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, sat.serviceCode, sat.bookingNr, sat.eventCode, sat.eventTime, sat.eventUser, sat.remark, sat.remark2, sat.remark3, sat.eventStatus, sat.fileLinerNr FROM sat.satBookingEvents sat INNER JOIN (SELECT dwhIdHubBookingEvents, bookingEventId, accessCompanyId, srcSystemId FROM hub.hubBookingEvents) hub ON hub.dwhIdHubBookingEvents = sat.dwhIdHubBookingEvents) hubSat ON hubSat.dwhIdHubBookingEvents = satStatus.dwhIdHubBookingEvents) hubSatStatus ON hubSatStatus.dwhIdHubBookingEvents = satlnk.dwhIdHubBookingEvents UNION SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdHubBooking FROM sat.satLnkBookingBookingEvents satlnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingEventsStatus satStatus INNER JOIN (SELECT  hub.*, sat.serviceCode, sat.bookingNr, sat.eventCode, sat.eventTime, sat.eventUser, sat.remark, sat.remark2, sat.remark3, sat.eventStatus, sat.fileLinerNr FROM sat.satBookingEvents sat INNER JOIN (SELECT dwhIdHubBookingEvents, bookingEventId, accessCompanyId, srcSystemId FROM hub.hubBookingEvents) hub ON hub.dwhIdHubBookingEvents = sat.dwhIdHubBookingEvents) hubSat ON hubSat.dwhIdHubBookingEvents = satStatus.dwhIdHubBookingEvents) hubSatStatus ON hubSatStatus.dwhIdHubBookingEvents = satlnk.dwhIdHubBookingEvents union SELECT * FROM (SELECT DISTINCT satlnk.validFrom, hubSatStatus.*, satlnk.dwhIdhubBooking FROM sat.satLnkBookingBookingEvents satlnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satBookingEventsStatus satStatus INNER JOIN (SELECT  hub.*, sat.serviceCode, sat.bookingNr, sat.eventCode, sat.eventTime, sat.eventUser, sat.remark, sat.remark2, sat.remark3, sat.eventStatus, sat.fileLinerNr FROM sat.satBookingEvents sat INNER JOIN (SELECT dwhIdhubBookingEvents, bookingEventId, accessCompanyId, srcSystemId FROM hub.hubBookingEvents) hub ON hub.dwhIdhubBookingEvents = sat.dwhIdhubBookingEvents) hubSat ON hubSat.dwhIdhubBookingEvents = satStatus.dwhIdhubBookingEvents) hubSatStatus ON hubSatStatus.dwhIdhubBookingEvents = satlnk.dwhIdhubBookingEvents )a WHERE dwhIdhubBooking IS NOT NULL)w
factBookingEvents.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubBookingEvents, bookingEventId, accessCompanyId, srcSystemId, serviceCode, bookingNr, eventCode, eventTime, eventUser, remark, remark2, remark3, eventStatus, fileLinerNr, dmStatus, dwhIdHubBooking from  fct.factBookingEvents

factContainerMoves.fct.CountRows = select COUNT (*) c from (select dwhIdHubContainerMoves, validFrom  from fct.factContainerMoves)q
factContainerMoves.dwh.CountRows = SELECT count (1) c FROM(SELECT DISTINCT validFrom, dwhIdHubContainerMoves FROM sat.satContainerMoves UNION SELECT DISTINCT validFrom, dwhIdHubContainerMoves FROM sat.satContainerMovesStatus UNION SELECT DISTINCT validFrom, dwhIdHubContainerMoves FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubContainerMoveTypes FROM sat.satLnkContainerMovesContainerMoveTypes satLnk RIGHT JOIN (SELECT dwhIdHubContainerMoves FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = satLnk.dwhIdHubContainerMoves) w WHERE dwhIdHubContainerMoveTypes IS NOT NULL UNION SELECT DISTINCT validFrom, dwhIdHubContainerMoves FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubContainerLocation FROM sat.satLnkContainerMovesContainerLocation satLnk RIGHT JOIN (SELECT dwhIdHubContainerMoves FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = satLnk.dwhIdHubContainerMoves) w WHERE dwhIdHubContainerLocation IS NOT NULL UNION SELECT DISTINCT validFrom, dwhIdHubContainerMoves FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubBookingCargo FROM sat.satLnkBookingCargoContainerMoves satLnk RIGHT JOIN (SELECT dwhIdHubContainerMoves FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = satLnk.dwhIdHubContainerMoves) w WHERE dwhIdHubBookingCargo IS NOT NULL)q
factContainerMoves.dataInDV.commonPart = FROM (SELECT DISTINCT all3.*, lnk.dwhIdHubCompany FROM lin.lnkContainerMovesCompany lnk RIGHT JOIN(SELECT all2.*, satLnk3.dwhIdHubBookingCargo FROM sat.satLnkBookingCargoContainerMoves satLnk3 RIGHT JOIN(SELECT all1.*, satLnk2.dwhIdHubContainerLocation FROM sat.satLnkContainerMovesContainerLocation satLnk2 RIGHT JOIN(SELECT hubSatStatus.*, satLnk1.dwhIdHubContainerMoveTypes FROM sat.satLnkContainerMovesContainerMoveTypes satLnk1 RIGHT JOIN (SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satContainerMovesStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, bookingNr, damaged, moveDate, moveCode, depotLocation, extendedLocation, reportToGvaModule, reportedToGvaDate, reportToGvaNr, reportStatus, moveTime, remarks, remarkCode, containerNr, createdBy, creationDate, status, destination, moveType, moveGroup, line, containerType, containerSize FROM sat.satContainerMoves  sat INNER JOIN (SELECT dwhIdHubContainerMoves, moveId, accessCompanyId, srcSystemId FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = sat.dwhIdHubContainerMoves) hubSat ON hubSat.dwhIdHubContainerMoves = satStatus.dwhIdHubContainerMoves) hubSatStatus ON hubSatStatus.dwhIdHubContainerMoves = satLnk1.dwhIdHubContainerMoves) all1 ON all1.dwhIdHubContainerMoves = satLnk2.dwhIdHubContainerMoves) all2 ON all2.dwhIdHubContainerMoves = satLnk3.dwhIdHubContainerMoves) all3 ON all3.dwhIdHubContainerMoves = lnk.dwhIdHubContainerMoves UNION SELECT DISTINCT all3.*, lnk.dwhIdHubCompany FROM lin.lnkContainerMovesCompany lnk RIGHT JOIN(SELECT all2.*, satLnk3.dwhIdHubBookingCargo FROM sat.satLnkBookingCargoContainerMoves satLnk3 RIGHT JOIN(SELECT all1.*, satLnk2.dwhIdHubContainerLocation FROM sat.satLnkContainerMovesContainerLocation satLnk2 RIGHT JOIN(SELECT hubSatStatus.*, satLnk1.dwhIdHubContainerMoveTypes FROM sat.satLnkContainerMovesContainerMoveTypes satLnk1 RIGHT JOIN (SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satContainerMovesStatus satStatus INNER JOIN (SELECT hub.*, bookingNr, damaged, moveDate, moveCode, depotLocation, extendedLocation, reportToGvaModule, reportedToGvaDate, reportToGvaNr, reportStatus, moveTime, remarks, remarkCode, containerNr, createdBy, creationDate, status, destination, moveType, moveGroup, line, containerType, containerSize FROM sat.satContainerMoves  sat INNER JOIN (SELECT dwhIdHubContainerMoves, moveId, accessCompanyId, srcSystemId FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = sat.dwhIdHubContainerMoves) hubSat ON hubSat.dwhIdHubContainerMoves = satStatus.dwhIdHubContainerMoves) hubSatStatus ON hubSatStatus.dwhIdHubContainerMoves = satLnk1.dwhIdHubContainerMoves) all1 ON all1.dwhIdHubContainerMoves = satLnk2.dwhIdHubContainerMoves) all2 ON all2.dwhIdHubContainerMoves = satLnk3.dwhIdHubContainerMoves) all3 ON all3.dwhIdHubContainerMoves = lnk.dwhIdHubContainerMoves UNION SELECT * FROM (SELECT DISTINCT all3.*, lnk.dwhIdHubCompany FROM lin.lnkContainerMovesCompany lnk RIGHT JOIN(SELECT all2.*, satLnk3.dwhIdHubBookingCargo FROM sat.satLnkBookingCargoContainerMoves satLnk3 RIGHT JOIN(SELECT all1.*, satLnk2.dwhIdHubContainerLocation FROM sat.satLnkContainerMovesContainerLocation satLnk2 RIGHT JOIN(SELECT satLnk1.validFrom, hubSatStatus.*, satLnk1.dwhIdHubContainerMoveTypes FROM sat.satLnkContainerMovesContainerMoveTypes satLnk1 RIGHT JOIN (SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satContainerMovesStatus satStatus INNER JOIN (SELECT hub.*, bookingNr, damaged, moveDate, moveCode, depotLocation, extendedLocation, reportToGvaModule, reportedToGvaDate, reportToGvaNr, reportStatus, moveTime, remarks, remarkCode, containerNr, createdBy, creationDate, status, destination, moveType, moveGroup, line, containerType, containerSize FROM sat.satContainerMoves  sat INNER JOIN (SELECT dwhIdHubContainerMoves, moveId, accessCompanyId, srcSystemId FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = sat.dwhIdHubContainerMoves) hubSat ON hubSat.dwhIdHubContainerMoves = satStatus.dwhIdHubContainerMoves) hubSatStatus ON hubSatStatus.dwhIdHubContainerMoves = satLnk1.dwhIdHubContainerMoves) all1 ON all1.dwhIdHubContainerMoves = satLnk2.dwhIdHubContainerMoves) all2 ON all2.dwhIdHubContainerMoves = satLnk3.dwhIdHubContainerMoves) all3 ON all3.dwhIdHubContainerMoves = lnk.dwhIdHubContainerMoves) a WHERE dwhIdHubContainerMoveTypes IS NOT NULL UNION SELECT * FROM (SELECT DISTINCT all3.*, lnk.dwhIdHubCompany FROM lin.lnkContainerMovesCompany lnk RIGHT JOIN(SELECT all2.*, satLnk3.dwhIdHubBookingCargo FROM sat.satLnkBookingCargoContainerMoves satLnk3 RIGHT JOIN(SELECT satLnk2.validFrom, all1.*, satLnk2.dwhIdHubContainerLocation FROM sat.satLnkContainerMovesContainerLocation satLnk2 RIGHT JOIN(SELECT  hubSatStatus.*, satLnk1.dwhIdHubContainerMoveTypes FROM sat.satLnkContainerMovesContainerMoveTypes satLnk1 RIGHT JOIN (SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satContainerMovesStatus satStatus INNER JOIN (SELECT hub.*, bookingNr, damaged, moveDate, moveCode, depotLocation, extendedLocation, reportToGvaModule, reportedToGvaDate, reportToGvaNr, reportStatus, moveTime, remarks, remarkCode, containerNr, createdBy, creationDate, status, destination, moveType, moveGroup, line, containerType, containerSize FROM sat.satContainerMoves  sat INNER JOIN (SELECT dwhIdHubContainerMoves, moveId, accessCompanyId, srcSystemId FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = sat.dwhIdHubContainerMoves) hubSat ON hubSat.dwhIdHubContainerMoves = satStatus.dwhIdHubContainerMoves) hubSatStatus ON hubSatStatus.dwhIdHubContainerMoves = satLnk1.dwhIdHubContainerMoves) all1 ON all1.dwhIdHubContainerMoves = satLnk2.dwhIdHubContainerMoves) all2 ON all2.dwhIdHubContainerMoves = satLnk3.dwhIdHubContainerMoves) all3 ON all3.dwhIdHubContainerMoves = lnk.dwhIdHubContainerMoves) a WHERE dwhIdHubContainerLocation IS NOT NULL UNION SELECT * FROM (SELECT DISTINCT all3.*, lnk.dwhIdHubCompany FROM lin.lnkContainerMovesCompany lnk RIGHT JOIN(SELECT satLnk3.validFrom, all2.*, satLnk3.dwhIdHubBookingCargo FROM sat.satLnkBookingCargoContainerMoves satLnk3 RIGHT JOIN(SELECT  all1.*, satLnk2.dwhIdHubContainerLocation FROM sat.satLnkContainerMovesContainerLocation satLnk2 RIGHT JOIN (SELECT  hubSatStatus.*, satLnk1.dwhIdHubContainerMoveTypes FROM sat.satLnkContainerMovesContainerMoveTypes satLnk1 RIGHT JOIN (SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satContainerMovesStatus satStatus INNER JOIN (SELECT hub.*, bookingNr, damaged, moveDate, moveCode, depotLocation, extendedLocation, reportToGvaModule, reportedToGvaDate, reportToGvaNr, reportStatus, moveTime, remarks, remarkCode, containerNr, createdBy, creationDate, status, destination, moveType, moveGroup, line, containerType, containerSize FROM sat.satContainerMoves  sat INNER JOIN (SELECT dwhIdHubContainerMoves, moveId, accessCompanyId, srcSystemId FROM hub.hubContainerMoves) hub ON hub.dwhIdHubContainerMoves = sat.dwhIdHubContainerMoves) hubSat ON hubSat.dwhIdHubContainerMoves = satStatus.dwhIdHubContainerMoves) hubSatStatus ON hubSatStatus.dwhIdHubContainerMoves = satLnk1.dwhIdHubContainerMoves) all1 ON all1.dwhIdHubContainerMoves = satLnk2.dwhIdHubContainerMoves) all2 ON all2.dwhIdHubContainerMoves = satLnk3.dwhIdHubContainerMoves) all3 ON all3.dwhIdHubContainerMoves = lnk.dwhIdHubContainerMoves) a WHERE dwhIdHubBookingCargo IS NOT NULL)w
factContainerMoves.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubContainerMoves, moveId, accessCompanyId, srcSystemId, bookingNr, damaged, moveDate, moveCode, depotLocation, extendedLocation, reportToGvaModule, reportedToGvaDate, reportToGvaNr, reportStatus, moveTime, remarks, remarkCode, containerNr, createdBy, creationDate, status, destination, moveType, moveGroup, line, containerType, containerSize, dmStatus, dwhIdHubContainerMoveTypes, dwhIdHubContainerLocation, dwhIdHubBookingCargo, dwhIdHubCompany from  fct.factContainerMoves

fctDemurrageStorageMscRus.fct.CountRows = select COUNT (*) c from (select dwhIdFctDemurrageStorageMscRus as dwhIdFctDemurrageStorage  from fct.factDemurrageStorageMscRus)q
fctDemurrageStorageMscRus.dataInDV.commonPart = FROM (SELECT dwhIdFctDemurrageStorage, dwhIdHubBookingCargo, dwhIdHubCompany, dwhIdHubContainerDemurrageRulesSTD, dwhIdHubContainerDemurrageRulesFACT, dwhIdHubCurrencyDemurrCurrency, dwhIdHubCurrencyClientCurrency, dwhIdHubCurrencyStdCurrency, dwhIdHubCustomers, dwhIdhubInvoice, accessCompanyId, bookingNumber, containerNr, demurrageStorageCode, demurrageId, demurrageStorageStatus, amount, invoicedAmount, theoreticalAmount, reissue, clientRoe, roe, stdCurrencyRoe, daysNumber, startDate, endDate, startMark, endMark, startDays, freeDays, stdDays, ruleId, stdRuleId, orderNr, clientCurrency, demurrCurrency, stdCurrency, startMoveCode, endMoveCode, client, 1  AS dmStatus, (SELECT  CONVERT(datetime, '2000-01-01', 104)) as validFrom, (SELECT  CONVERT(datetime, '2999-01-01', 104)) as validTo  FROM fct.fctDemurrageStorageMscRus )w
fctDemurrageStorageMscRus.dataInDM.RowByKeys = SELECT dwhIdFctDemurrageStorageMscRus, dwhIdHubBookingCargo, dwhIdHubCompany, dwhIdHubContainerDemurrageRulesSTD, dwhIdHubContainerDemurrageRulesFACT, dwhIdHubCurrencyDemurrCurrency, dwhIdHubCurrencyClientCurrency, dwhIdHubCurrencyStdCurrency, dwhIdHubCustomers, dwhIdhubInvoice, accessCompanyId, bookingNumber, containerNr, demurrageStorageCode, demurrageId, demurrageStorageStatus, amount, invoicedAmount, theoreticalAmount, reissue, clientRoe, roe, stdCurrencyRoe, daysNumber, startDate, endDate, startMark, endMark, startDays, freeDays, stdDays, ruleId, stdRuleId, orderNr, clientCurrency, demurrCurrency, stdCurrency, startMoveCode, endMoveCode, client,  dmStatus, validFrom, validTo  FROM fct.factDemurrageStorageMscRus

fctDemurrageStorageUnity.fct.CountRows = select COUNT (*) c from (select dwhIdFctDemurrageStorageUnity as dwhIdFctDemurrageStorage  from fct.factDemurrageStorageUnity)q
fctDemurrageStorageUnity.dataInDV.commonPart = FROM (SELECT dwhIdFctDemurrageStorage, dwhIdHubBookingCargo, dwhIdHubCompany, dwhIdHubContainerDemurrageRulesSTD, dwhIdHubContainerDemurrageRulesFACT, dwhIdHubCurrencyDemurrCurrency, dwhIdHubCurrencyClientCurrency, dwhIdHubCurrencyStdCurrency, dwhIdHubCustomers, dwhIdhubInvoice, accessCompanyId, bookingNumber, containerNr, demurrageStorageCode, demurrageId, demurrageStorageStatus, amount, invoicedAmount, theoreticalAmount, reissue, clientRoe, roe, stdCurrencyRoe, daysNumber, startDate, endDate, startMark, endMark, startDays, freeDays, stdDays, ruleId, stdRuleId, orderNr, clientCurrency, demurrCurrency, stdCurrency, startMoveCode, endMoveCode, client,  1  AS dmStatus, (SELECT  CONVERT(datetime, '2000-01-01', 104)) as validFrom, (SELECT  CONVERT(datetime, '2999-01-01', 104)) as validTo  FROM fct.fctDemurrageStorageUnity )w
fctDemurrageStorageUnity.dataInDM.RowByKeys = SELECT dwhIdFctDemurrageStorageUnity, dwhIdHubBookingCargo, dwhIdHubCompany, dwhIdHubContainerDemurrageRulesSTD, dwhIdHubContainerDemurrageRulesFACT, dwhIdHubCurrencyDemurrCurrency, dwhIdHubCurrencyClientCurrency, dwhIdHubCurrencyStdCurrency, dwhIdHubCustomers, dwhIdhubInvoice, accessCompanyId, bookingNumber, containerNr, demurrageStorageCode, demurrageId, demurrageStorageStatus, amount, invoicedAmount, theoreticalAmount, reissue, clientRoe, roe, stdCurrencyRoe, daysNumber, startDate, endDate, startMark, endMark, startDays, freeDays, stdDays, ruleId, stdRuleId, orderNr, clientCurrency, demurrCurrency, stdCurrency, startMoveCode, endMoveCode, client, dmStatus, validFrom, validTo  FROM fct.factDemurrageStorageUnity

factFileRoe.fct.CountRows = select COUNT (*) c from (select dwhIdhubFileROE, validFrom  from fct.factFileRoe)q
factFileRoe.dwh.CountRows = SELECT count (1) c FROM(SELECT validFrom, dwhIdhubFileROE FROM sat.satFileROE UNION SELECT validFrom, dwhIdhubFileROE FROM sat.satFileROEStatus UNION SELECT validFrom, dwhIdhubFileROE FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubFileLiner FROM sat.satLnkFileLinerFileROE satLnk RIGHT JOIN (SELECT dwhIdhubFileROE FROM hub.hubFileROE) hub ON hub.dwhIdhubFileROE = satLnk.dwhIdhubFileROE) w WHERE dwhIdHubFileLiner IS NOT null)q
factFileRoe.dataInDV.commonPart = FROM(SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdHubFileLiner FROM  sat.satLnkFileLinerFileROE satlnk RIGHT JOIN (SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satFileROEStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, sat.rate FROM sat.satFileROE sat INNER JOIN (SELECT dwhIdhubFileROE, fileLinerNr, serviceCode, currencyCode,accessCompanyId, srcSystemId FROM hub.hubFileROE) hub ON hub.dwhIdhubFileROE = sat.dwhIdhubFileROE) hubSat ON hubSat.dwhIdhubFileROE = satStatus.dwhIdhubFileROE) hubSatStatus ON hubSatStatus.dwhIdhubFileROE = satlnk.dwhIdhubFileROE UNION SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdHubFileLiner FROM  sat.satLnkFileLinerFileROE satlnk RIGHT JOIN (SELECT  satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satFileROEStatus satStatus INNER JOIN (SELECT hub.*, sat.rate FROM sat.satFileROE sat INNER JOIN (SELECT dwhIdhubFileROE, fileLinerNr, serviceCode, currencyCode,accessCompanyId, srcSystemId FROM hub.hubFileROE) hub ON hub.dwhIdhubFileROE = sat.dwhIdhubFileROE) hubSat ON hubSat.dwhIdhubFileROE = satStatus.dwhIdhubFileROE) hubSatStatus ON hubSatStatus.dwhIdhubFileROE = satlnk.dwhIdhubFileROE UNION SELECT * FROM(SELECT DISTINCT satlnk.validFrom, hubSatStatus.*, satlnk.dwhIdHubFileLiner FROM  sat.satLnkFileLinerFileROE satlnk RIGHT JOIN (SELECT   hubSat.*, satStatus.status AS dmStatus FROM sat.satFileROEStatus satStatus INNER JOIN (SELECT hub.*, sat.rate FROM sat.satFileROE sat INNER JOIN (SELECT dwhIdhubFileROE, fileLinerNr, serviceCode, currencyCode,accessCompanyId, srcSystemId FROM hub.hubFileROE) hub ON hub.dwhIdhubFileROE = sat.dwhIdhubFileROE) hubSat ON hubSat.dwhIdhubFileROE = satStatus.dwhIdhubFileROE) hubSatStatus ON hubSatStatus.dwhIdhubFileROE = satlnk.dwhIdhubFileROE) a WHERE dwhIdHubFileLiner IS NOT NULL )w
factFileRoe.dataInDM.RowByKeys = SELECT validFrom,  dwhIdhubFileROE, fileLinerNr, serviceCode, currencyCode,accessCompanyId, srcSystemId, rate, dwhIdHubFileLiner,  dmStatus from  fct.factFileRoe

factInvoiceLines.fct.CountRows = select COUNT (*) c from (select dwhIdhubInvoiceLines, validFrom  from fct.factInvoiceLines)q
factInvoiceLines.dwh.CountRows = SELECT count (1) c FROM(SELECT validFrom, dwhIdhubInvoiceLines FROM sat.satInvoiceLines UNION SELECT validFrom, dwhIdhubInvoiceLines FROM sat.satInvoiceLinesStatus UNION SELECT validFrom, dwhIdhubInvoiceLines FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubInvoice FROM sat.satLnkInvoiceInvoiceLines satLnk RIGHT JOIN (SELECT dwhIdhubInvoiceLines FROM hub.hubInvoiceLines) hub ON hub.dwhIdhubInvoiceLines = satLnk.dwhIdhubInvoiceLines) w WHERE dwhIdHubInvoice IS NOT null)q
factInvoiceLines.dataInDV.commonPart = FROM(SELECT DISTINCT hubSatStatus.*, lnk.dwhIdhubInvoice FROM sat.satlnkInvoiceInvoiceLines lnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satInvoiceLinesStatus  satStatus INNER JOIN (SELECT sat.validFrom, hub.*, activity, containerNr, invoiceCurrency, roe, invoicedAmount, containerType, chargeName, chargeNr, units,unitCount, price FROM sat.satInvoiceLines sat INNER JOIN(SELECT dwhIdhubInvoiceLines, invoiceLineNr,orderNr, accessCompanyId, srcSystemId FROM  hub.hubInvoiceLines) hub ON hub.dwhIdhubInvoiceLines = sat.dwhIdhubInvoiceLines) hubSat ON hubSat.dwhIdhubInvoiceLines = satStatus.dwhIdhubInvoiceLines) hubSatStatus ON hubSatStatus.dwhIdhubInvoiceLines = lnk.dwhIdhubInvoiceLines UNION SELECT DISTINCT hubSatStatus.*, lnk.dwhIdhubInvoice FROM sat.satlnkInvoiceInvoiceLines lnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satInvoiceLinesStatus satStatus INNER JOIN (SELECT  hub.*, activity, containerNr, invoiceCurrency, roe, invoicedAmount, containerType, chargeName, chargeNr, units,unitCount ,price FROM sat.satInvoiceLines sat INNER JOIN(SELECT dwhIdhubInvoiceLines, invoiceLineNr,orderNr, accessCompanyId, srcSystemId FROM  hub.hubInvoiceLines) hub ON hub.dwhIdhubInvoiceLines = sat.dwhIdhubInvoiceLines) hubSat ON hubSat.dwhIdhubInvoiceLines = satStatus.dwhIdhubInvoiceLines) hubSatStatus ON hubSatStatus.dwhIdhubInvoiceLines = lnk.dwhIdhubInvoiceLines UNION  SELECT * FROM (SELECT DISTINCT lnk.validFrom, hubSatStatus.*, lnk.dwhIdhubInvoice FROM sat.satlnkInvoiceInvoiceLines lnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satInvoiceLinesStatus  satStatus INNER JOIN (SELECT  hub.*, activity, containerNr, invoiceCurrency, roe, invoicedAmount, containerType, chargeName, chargeNr, units,unitCount ,price FROM sat.satInvoiceLines sat INNER JOIN(SELECT dwhIdhubInvoiceLines, invoiceLineNr,orderNr, accessCompanyId, srcSystemId FROM  hub.hubInvoiceLines) hub ON hub.dwhIdhubInvoiceLines = sat.dwhIdhubInvoiceLines) hubSat ON hubSat.dwhIdhubInvoiceLines = satStatus.dwhIdhubInvoiceLines) hubSatStatus ON hubSatStatus.dwhIdhubInvoiceLines = lnk.dwhIdhubInvoiceLines) a WHERE dwhIdhubInvoice IS NOT NULL)w
factInvoiceLines.dataInDM.RowByKeys = SELECT validFrom, dwhIdhubInvoiceLines, invoiceLineNr,orderNr, accessCompanyId, srcSystemId, activity, containerNr, invoiceCurrency, roe, invoicedAmount, containerType, chargeName, chargeNr, units,unitCount ,price,   dmStatus, dwhIdhubInvoice from  fct.factInvoiceLines

factInvoicePosting.fct.CountRows = select COUNT (*) c from (select dwhIdHubInvoicePosting, validFrom  from fct.factInvoicePosting)q
factInvoicePosting.dwh.CountRows =  SELECT  count (1) c FROM(SELECT validFrom, dwhIdhubInvoicePosting FROM sat.satInvoicePosting UNION SELECT validFrom, dwhIdhubInvoicePosting FROM sat.satInvoicePostingStatus UNION SELECT validFrom, dwhIdhubInvoicePosting FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdhubCurrency FROM sat.satLnkInvoicePostingCurrency satLnk RIGHT JOIN (SELECT dwhIdhubInvoicePosting FROM hub.hubInvoicePosting) hub ON hub.dwhIdhubInvoicePosting = satLnk.dwhIdhubInvoicePosting) w WHERE dwhIdhubCurrency IS NOT null)q
factInvoicePosting.dataInDV.commonPart = FROM(SELECT DISTINCT hubSatStatus.*, satLnk.dwhIdHubCurrency FROM  sat.satLnkInvoicePostingCurrency satLnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satInvoicePostingStatus  satStatus INNER JOIN (SELECT sat.validFrom, hub.*, invoiceAmountHomeCurr, invoiceAmountOrigCurr, itemNr, invoiceOrigCurr, paymentReference, postingDate, orderNr, dueDate, uniqueIdentValue, relatedInvoiceNr, remainingAmountHomeCurr, remainingAmountOrigCurr, diaryNum, paymentDate, paymentMethod, paymentTerms, createdBy, roe, sapDocumentNr, sourceModule, text FROM sat.satInvoicePosting sat INNER JOIN (SELECT dwhIdHubInvoicePosting, accessCompanyId, srcSystemId FROM hub.hubInvoicePosting) hub ON hub.dwhIdHubInvoicePosting= sat.dwhIdHubInvoicePosting) hubSat ON hubSat.dwhIdHubInvoicePosting= satStatus.dwhIdHubInvoicePosting) hubSatStatus ON hubSatStatus.dwhIdHubInvoicePosting= satLnk.dwhIdHubInvoicePosting UNION SELECT DISTINCT hubSatStatus.*, satLnk.dwhIdHubCurrency FROM  sat.satLnkInvoicePostingCurrency satLnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satInvoicePostingStatus  satStatus INNER JOIN (SELECT  hub.*, invoiceAmountHomeCurr, invoiceAmountOrigCurr, itemNr, invoiceOrigCurr, paymentReference, postingDate, orderNr, dueDate, uniqueIdentValue, relatedInvoiceNr, remainingAmountHomeCurr, remainingAmountOrigCurr, diaryNum, paymentDate, paymentMethod, paymentTerms, createdBy, roe, sapDocumentNr, sourceModule, text FROM sat.satInvoicePosting sat INNER JOIN (SELECT dwhIdHubInvoicePosting, accessCompanyId, srcSystemId FROM hub.hubInvoicePosting) hub ON hub.dwhIdHubInvoicePosting= sat.dwhIdHubInvoicePosting) hubSat ON hubSat.dwhIdHubInvoicePosting= satStatus.dwhIdHubInvoicePosting) hubSatStatus ON hubSatStatus.dwhIdHubInvoicePosting= satLnk.dwhIdHubInvoicePosting UNION SELECT * FROM (SELECT DISTINCT satLnk.validFrom, hubSatStatus.*, satLnk.dwhIdHubCurrency FROM  sat.satLnkInvoicePostingCurrency satLnk RIGHT JOIN(SELECT  hubSat.*, satStatus.status AS dmStatus FROM sat.satInvoicePostingStatus  satStatus INNER JOIN (SELECT  hub.*, invoiceAmountHomeCurr, invoiceAmountOrigCurr, itemNr, invoiceOrigCurr, paymentReference, postingDate, orderNr, dueDate, uniqueIdentValue, relatedInvoiceNr, remainingAmountHomeCurr, remainingAmountOrigCurr, diaryNum, paymentDate, paymentMethod, paymentTerms, createdBy, roe, sapDocumentNr, sourceModule, text FROM sat.satInvoicePosting sat INNER JOIN (SELECT dwhIdHubInvoicePosting, accessCompanyId, srcSystemId FROM hub.hubInvoicePosting) hub ON hub.dwhIdHubInvoicePosting= sat.dwhIdHubInvoicePosting) hubSat ON hubSat.dwhIdHubInvoicePosting= satStatus.dwhIdHubInvoicePosting) hubSatStatus ON hubSatStatus.dwhIdHubInvoicePosting= satLnk.dwhIdHubInvoicePosting)a WHERE dwhIdHubCurrency IS NOT NULL)w
factInvoicePosting.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubInvoicePosting, accessCompanyId, srcSystemId, invoiceAmountHomeCurr, invoiceAmountOrigCurr, itemNr, invoiceOrigCurr, paymentReference, postingDate, orderNr, dueDate, uniqueIdentValue, relatedInvoiceNr, remainingAmountHomeCurr, remainingAmountOrigCurr, diaryNum, paymentDate, paymentMethod, paymentTerms, createdBy, roe, sapDocumentNr, sourceModule, text,  dmStatus, dwhIdHubCurrency from  fct.factInvoicePosting

factPayments.fct.CountRows = select COUNT (*) c from (select dwhIdHubPayments, validFrom  from fct.factPayments)q
factPayments.dwh.CountRows =SELECT COUNT (1) c FROM(SELECT validFrom, dwhIdHubPayments FROM sat.satPayments UNION SELECT validFrom, dwhIdHubPayments FROM sat.satPaymentsStatus UNION SELECT validFrom, dwhIdHubPayments FROM (SELECT DISTINCT satLnk.validFrom, hub.*, satLnk.dwhIdHubInvoicePosting FROM sat.satLnkPaymentsInvoicePosting satLnk RIGHT JOIN (SELECT dwhIdHubPayments FROM hub.hubPayments) hub ON hub.dwhIdHubPayments = satLnk.dwhIdHubPayments) w WHERE dwhIdHubInvoicePosting IS NOT null)q
factPayments.dataInDV.commonPart = FROM(SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdHubInvoicePosting FROM sat.satLnkPaymentsInvoicePosting satlnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satPaymentsStatus satStatus INNER JOIN (SELECT sat.validFrom, hub.*, itemNr, invoiceAmountHomeCurr, invoiceAmountOrigCurr, invoiceOrigCurr, paymentDate, text, diaryNum, createdBy FROM sat.satPayments sat INNER JOIN (SELECT dwhIdHubPayments, invoiceNr, invoiceType, debitCredit, customerCode, sequenceNr, accessCompanyId, srcSystemId  FROM hub.hubPayments) hub  ON hub.dwhIdHubPayments = sat.dwhIdHubPayments) hubSat  ON hubSat.dwhIdHubPayments = satStatus.dwhIdHubPayments) hubSatStatus  ON hubSatStatus.dwhIdHubPayments = satlnk.dwhIdHubPayments  UNION  SELECT DISTINCT hubSatStatus.*, satlnk.dwhIdHubInvoicePosting FROM sat.satLnkPaymentsInvoicePosting satlnk RIGHT JOIN(SELECT satStatus.validFrom, hubSat.*, satStatus.status AS dmStatus FROM sat.satPaymentsStatus satStatus INNER JOIN (SELECT  hub.*, itemNr, invoiceAmountHomeCurr, invoiceAmountOrigCurr, invoiceOrigCurr, paymentDate, text, diaryNum, createdBy FROM sat.satPayments sat INNER JOIN (SELECT dwhIdHubPayments, invoiceNr, invoiceType, debitCredit, customerCode, sequenceNr, accessCompanyId, srcSystemId  FROM hub.hubPayments) hub  ON hub.dwhIdHubPayments = sat.dwhIdHubPayments) hubSat  ON hubSat.dwhIdHubPayments = satStatus.dwhIdHubPayments) hubSatStatus  ON hubSatStatus.dwhIdHubPayments = satlnk.dwhIdHubPayments UNION SELECT * FROM (SELECT DISTINCT  satlnk.validFrom, hubSatStatus.*, satlnk.dwhIdHubInvoicePosting FROM sat.satLnkPaymentsInvoicePosting satlnk RIGHT JOIN(SELECT hubSat.*, satStatus.status AS dmStatus FROM sat.satPaymentsStatus satStatus INNER JOIN (SELECT  hub.*, itemNr, invoiceAmountHomeCurr, invoiceAmountOrigCurr, invoiceOrigCurr, paymentDate, text, diaryNum, createdBy FROM sat.satPayments sat INNER JOIN (SELECT dwhIdHubPayments, invoiceNr, invoiceType, debitCredit, customerCode, sequenceNr, accessCompanyId, srcSystemId  FROM hub.hubPayments) hub  ON hub.dwhIdHubPayments = sat.dwhIdHubPayments) hubSat  ON hubSat.dwhIdHubPayments = satStatus.dwhIdHubPayments) hubSatStatus  ON hubSatStatus.dwhIdHubPayments = satlnk.dwhIdHubPayments) a WHERE dwhIdHubInvoicePosting IS NOT NULL)w
factPayments.dataInDM.RowByKeys = SELECT validFrom, dwhIdHubPayments, invoiceNr, invoiceType, debitCredit, customerCode, sequenceNr, accessCompanyId, srcSystemId, itemNr, invoiceAmountHomeCurr, invoiceAmountOrigCurr, invoiceOrigCurr, paymentDate, text, diaryNum, createdBy,  dmStatus, dwhIdHubInvoicePosting from  fct.factPayments

factValidCompany.fct.CountRows = select COUNT (*) c from (select companyId, validFromBusiness, validToBusiness from fct.factValidCompany)q
factValidCompany.dataInDV.commonPart = FROM(SELECT DISTINCT companyId, validFromBusiness, validToBusiness FROM fct.fctValidCompany)w
factValidCompany.dataInDM.RowByKeys = SELECT  companyId, validFromBusiness, validToBusiness from  fct.factValidCompany





