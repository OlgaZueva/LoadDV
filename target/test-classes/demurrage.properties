demurrage.linkTableMSCRUS.create = if object_id('etl.DemurragefctMSCRUSTestTable_OZ','U') is null create table etl.DemurragefctMSCRUSTestTable_OZ (accessCompanyId SMALLINT, bookingNumber BIGINT, containerNr NVARCHAR(15), demurrageStorageCode NVARCHAR(10), demurrageId INT, demurrageStorageStatus NVARCHAR(10), amount DECIMAL(12,2), invoicedAmount DECIMAL(12,2),  theoreticalAmount DECIMAL(12,2), reissue NVARCHAR(10), clientRoe DECIMAL(18,6), roe DECIMAL(18,6), stdCurrencyRoe DECIMAL(18,6), daysNumber SMALLINT, startDate DATETIME, endDate DATETIME,   startMark NVARCHAR(10), endMark NVARCHAR(10), startDays SMALLINT, freeDays SMALLINT, stdDays SMALLINT, ruleId int, stdRuleId int, orderNr int, clientCurrency NVARCHAR(6),  demurrCurrency NVARCHAR(6), stdCurrency NVARCHAR(6), startMoveCode NVARCHAR(20), endMoveCode NVARCHAR(20), client DECIMAL(10), dwhIdHubBookingCargo BIGINT, dwhIdHubCompany BIGINT, dwhIdHubContainerDemurrageRulesSTD BIGINT, dwhIdHubContainerDemurrageRulesFACT BIGINT, dwhIdHubCurrencyDemurrCurrency BIGINT, dwhIdHubCurrencyClientCurrency BIGINT, dwhIdHubCurrencyStdCurrency BIGINT, dwhIdHubCustomers BIGINT, dwhIdhubInvoice BIGINT, srcSystemId SMALLINT, validFrom DATETIME)
demurrage.linkTableMSCRUS.truncate = TRUNCATE TABLE etl.DemurragefctMSCRUSTestTable_OZ
demurrage.linkTableUNITY.create = if object_id('etl.DemurragefctUNITYTestTable_OZ','U') is null create table etl.DemurragefctUNITYTestTable_OZ (accessCompanyId SMALLINT, bookingNumber BIGINT, containerNr NVARCHAR(15), demurrageStorageCode NVARCHAR(10), demurrageId INT, demurrageStorageStatus NVARCHAR(10), amount DECIMAL(12,2), invoicedAmount DECIMAL(12,2),  theoreticalAmount DECIMAL(12,2), reissue NVARCHAR(10), clientRoe DECIMAL(18,6), roe DECIMAL(18,6), stdCurrencyRoe DECIMAL(18,6), daysNumber SMALLINT, startDate DATETIME, endDate DATETIME,   startMark NVARCHAR(10), endMark NVARCHAR(10), startDays SMALLINT, freeDays SMALLINT, stdDays SMALLINT, ruleId int, stdRuleId int, orderNr int, clientCurrency NVARCHAR(6),  demurrCurrency NVARCHAR(6), stdCurrency NVARCHAR(6), startMoveCode NVARCHAR(20), endMoveCode NVARCHAR(20), client DECIMAL(10), dwhIdHubBookingCargo BIGINT, dwhIdHubCompany BIGINT, dwhIdHubContainerDemurrageRulesSTD BIGINT, dwhIdHubContainerDemurrageRulesFACT BIGINT, dwhIdHubCurrencyDemurrCurrency BIGINT, dwhIdHubCurrencyClientCurrency BIGINT, dwhIdHubCurrencyStdCurrency BIGINT, dwhIdHubCustomers BIGINT, dwhIdhubInvoice BIGINT, srcSystemId SMALLINT, validFrom DATETIME)
demurrage.linkTableUNITY.truncate = TRUNCATE TABLE etl.DemurragefctUNITYTestTable_OZ



demurrage.fctMSCRUS.insert = INSERT etl.DemurragefctMSCRUSTestTable_OZ (accessCompanyId,  bookingNumber, containerNr, demurrageStorageCode, demurrageId, demurrageStorageStatus , amount , invoicedAmount , theoreticalAmount, reissue, clientRoe, roe, stdCurrencyRoe , daysNumber , startDate , endDate , startMark, endMark , startDays , freeDays, stdDays , ruleId, stdRuleId , orderNr , clientCurrency , demurrCurrency , stdCurrency , startMoveCode, endMoveCode, client, dwhIdHubBookingCargo , dwhIdHubCompany , dwhIdHubContainerDemurrageRulesSTD , dwhIdHubContainerDemurrageRulesFACT , dwhIdHubCurrencyDemurrCurrency , dwhIdHubCurrencyClientCurrency , dwhIdHubCurrencyStdCurrency , dwhIdHubCustomers, dwhIdhubInvoice , srcSystemId , validFrom) VALUES(
demurrage.fctUNITY.insert = INSERT etl.DemurragefctUNITYTestTable_OZ (accessCompanyId,  bookingNumber, containerNr, demurrageStorageCode, demurrageId, demurrageStorageStatus , amount , invoicedAmount , theoreticalAmount, reissue, clientRoe, roe, stdCurrencyRoe , daysNumber , startDate , endDate , startMark, endMark , startDays , freeDays, stdDays , ruleId, stdRuleId , orderNr , clientCurrency , demurrCurrency , stdCurrency , startMoveCode, endMoveCode, client, dwhIdHubBookingCargo , dwhIdHubCompany , dwhIdHubContainerDemurrageRulesSTD , dwhIdHubContainerDemurrageRulesFACT , dwhIdHubCurrencyDemurrCurrency , dwhIdHubCurrencyClientCurrency , dwhIdHubCurrencyStdCurrency , dwhIdHubCustomers, dwhIdhubInvoice , srcSystemId , validFrom) VALUES(
demurrage.reissue.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET reissue = null where reissue ='null'
demurrage.startMark.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET startMark = null where startMark ='null'
demurrage.endMark.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET endMark = null where endMark ='null'
demurrage.clientCurrency.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET clientCurrency = null where clientCurrency ='null'
demurrage.demurrCurrency.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET demurrCurrency = null where demurrCurrency ='null'
demurrage.stdCurrency.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET stdCurrency = null where stdCurrency ='null'
demurrage.reissueUNITY.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET reissue = null where reissue ='null'
demurrage.startMarkUNITY.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET startMark = null where startMark ='null'
demurrage.endMarkUNTIY.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET endMark = null where endMark ='null'
demurrage.clientCurrencyUNITY.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET clientCurrency = null where clientCurrency ='null'
demurrage.demurrCurrencyUNITY.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET demurrCurrency = null where demurrCurrency ='null'
demurrage.stdCurrencyUNITY.update = UPDATE etl.DemurragefctMSCRUSTestTable_OZ SET stdCurrency = null where stdCurrency ='null'


demurrage.allData.MSCRUS.select = SELECT COMPANY, BOOK_NO, CONT_NO, CODE, DEM_ID, STATUS, AMOUNT,CLIENT, CLIENT_CURR, CLIENT_ROE, CURRENCY, DAYS, END_DATE, END_MARK, END_MOVE, FREE_DAYS, INVOICED_AMOUNT, ORDRE_NO, REISSUE, ROE, RULE_ID, START_DATE, START_DAYS, START_MARK, START_MOVE, STD_CURRENCY, STD_DAYS, STD_ROE, STD_RULE_ID, THEORETICAL_AMOUNT,srcSystemId, CdcTimestamp FROM StagingAreaTest.stg.MSCRUS_Demurrage
demurrage.allData.UNITY.select = SELECT COMPANY, BOOK_NO, CONT_NO, CODE, DEM_ID, STATUS, AMOUNT,CLIENT, CLIENT_CURR, CLIENT_ROE, CURRENCY, DAYS, END_DATE, END_MARK, END_MOVE, FREE_DAYS, INVOICED_AMOUNT, ORDRE_NO, REISSUE, ROE, RULE_ID, START_DATE, START_DAYS, START_MARK, START_MOVE, STD_CURRENCY, STD_DAYS, STD_ROE, STD_RULE_ID, THEORETICAL_AMOUNT,srcSystemId, CdcTimestamp FROM StagingAreaTest.stg.UNITY_Demurrage
dwhIdHubCompany.id.select = SELECT distinct dwhIdHubCompany FROM hub.hubCompany WHERE companyId =
companyId.value.select = hub.accessCompanyId =
srcSystemId.value.select = srcSystemId =
dwhIdHubBookingCargo.id.select.part1 = select TOP(1) hub.dwhIdHubBookingCargo, hub.cargoLineNr FROM hub.hubBookingCargo hub INNER JOIN (SELECT dwhIdHubBookingCargo FROM sat.satBookingCargo WHERE containerNr ='
dwhIdHubBookingCargo.id.select.part2 = '  AND containerCount is not null) sat ON hub.dwhIdHubBookingCargo =  sat.dwhIdHubBookingCargo AND hub.accessCompanyId =
dwhIdHubBookingCargo.id.select.part3 = hub.bookingNumber =
dwhIdHubBookingCargo.id.select.part4 = ORDER BY  hub.cargoLineNr
dwhIdHubContainerDemurrageRules.id.select = SELECT hub.dwhIdHubContainerDemurrageRules FROM hub.hubContainerDemurrageRules hub WHERE hub.sequenceNumber =
dwhIdHubCurrency.id.select = SELECT  hub.dwhIdHubCurrency FROM hub.hubCurrency hub WHERE hub.currencyCode ='
dwhIdHubCustomers.id.select = SELECT  hub.dwhIdHubCustomers FROM hub.hubCustomers hub WHERE hub.customerType = 'K' AND hub.customerNr =
dwhIdhubInvoice.id.select = SELECT  hub.dwhIdHubInvoice FROM hub.hubInvoice hub WHERE  hub.orderNr =





