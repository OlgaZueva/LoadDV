cleanedCustomersNamesTable.create = create table etl.CleanedCustomersNamesTable_OZ (dwhIdHubCustomer int, customerName nvarchar (100), tnsNumber nvarchar(30))
dictExcludedSymbols.create = create table etl.DictExcludedSymbols_OZ (name nvarchar (100))
dictEmptyCustomer.create = create table etl.DictEmptyCustomer_OZ (name nvarchar (100))
dictExceptionalCustomer_OZ.create = create table etl.DictExceptionalCustomer_OZ (name nvarchar (100))
dictMasterCustomerName.create = create table etl.DictMasterCustomerName_OZ (name nvarchar (100))
dictLocations.create = create table etl.DictLocations_OZ (name nvarchar (100), code nvarchar(30))


cleanedCustomersNamesTable.truncate = truncate table etl.CleanedCustomersNamesTable_OZ
dictExcludedSymbols.truncate = truncate table etl.DictExcludedSymbols_OZ
dictEmptyCustomerTable.truncate = truncate table etl.DictEmptyCustomer_OZ
dictExceptionalCustomer.truncate = truncate table etl.DictExceptionalCustomer_OZ
dictMasterCustomerName.truncate = truncate table etl.DictMasterCustomerName_OZ
dictLocations.truncate = truncate table etl.DictLocations_OZ

cleanedCustomersNamesTable.insert = insert into etl.CleanedCustomersNamesTable_OZ (dwhIdHubCustomer, customerName, tnsNumber) values (
dictExcludedSymbols.insert = insert into etl.dictExcludedSymbols_OZ (name) values (
dictEmptyCustomerTable.insert = insert into etl.DictEmptyCustomer_OZ (name) values (
dictExceptionalCustomer.insert = insert into etl.dictExceptionalCustomer_OZ (name) values (
dictMasterCustomerName.insert = insert into etl.DictMasterCustomerName_OZ (name, code) values (
dictLocations.insert = insert into etl.DictLocations_OZ (name, code) values (

dictExcludedSymbols.MDS.select = select name from mdm.dictExcludedSymbols_v
dictExcludedSymbols.DWH.select = select name from etl.dictExcludedSymbols_OZ
dictEmptyCustomer.select = select name from mdm.dictEmptyCustomer_v
dictExceptionalCustomer.select = select name from mdm.dictExceptionalCustomer_v
dictMasterCustomerName.select = select name, code from mdm.DictMasterCustomerName_v
dictLocations.select = select name, code from mdm.dictLocations_v
satCustomers.names.select = select dwhIdHubCustomers, UPPER(customerName) as customerName, TMScustomerNr from sat.satCustomers

locations.DWH.count = select count (*) c from (select distinct hubLoc.locationCode from hub.hubLocations hubLoc inner join (select dwhIdHubLocations, locationName from sat.satLocations where hasManifests = 'Y') sat on sat.dwhIdHubLocations = hubLoc.dwhIdHubLocations)q
locations.MDS.count = select count (*) c from mdm.dictLocations_v

TMScustomerNr.isNotNull.select = select dwhIdHubCustomers, UPPER(customerName) as customerName, TMScustomerNr from sat.satCustomers where TMScustomerNr is not null

statCustomer.exportBooking.exceptionalCustomers.counts = select count (*) c from (select custName.dwhIdHubBooking, custName.dwhIdHubCustomers, custName.customerName from etl.DictExceptionalCustomer_OZ dictExceptCust inner join (select custByRole.dwhIdHubBooking, custByRole.dwhIdHubCustomers, satC.customerName from sat.satCustomers satC inner join (select satB.dwhIdHubBooking, lBC.dwhidHubCustomers from lin.lnkBookingCustomers lBC inner join ( select dwhIdHubBooking from sat.satBooking where importExportCode ='E' ) satB on lBC.dwhIdHubBooking = satB.dwhIdHubBooking  and dwhidHubCustomers != -1  and dwhIdHubCustomerParty = (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyname ='StatCustomer')) custByRole on custByRole.dwhIdHubCustomers = satC.dwhIdHubCustomers) custName on custName.customerName =  UPPER(dictExceptCust.name) COLLATE SQL_Latin1_General_CP1_CS_AS)q