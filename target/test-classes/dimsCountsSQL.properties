system.default.RowsForMatch = 8
system.PercentOfRows = 0.0005

customers.dwh.CountRows = select count (*) c from (select distinct dwhIdHubCustomers, validFrom from sat.satCustomers union select distinct dwhIdHubCustomers, validFrom from sat.satCustomersStatus) q
customers.dim.CountRows = select COUNT (*) c from (select dwhIdHubCustomers, validFrom  from [dim].[dimCustomers])q
customers.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSat.dwhIdHubCustomers) AS RowNumber, hubSat.dwhIdHubCustomers, hubSat.customerNr, hubSat.number, hubSat.bookingNumber, hubSat.blNumber, hubSat.customerType, hubSat.refType, hubSat.customerName, hubSat.shortName, hubSat.TMScustomerNr, hubSat.address1, hubSat.address2, hubSat.address3, hubSat.email, hubSat.fax, hubSat.phone, hubSat.countryCode, hubSat.cityCode, hubSat.cityName, hubSat.dwhIdMasterClient,  hubSat.cleanCustomerName, hubSat.clientReference, hubSat.accountManagerCode1, hubSat.accountManagerCode2, hubSat.accessCompanyId, hubSat.srcSystemId, satStatus.status, satStatus.validFrom  from sat.satCustomersStatus satStatus inner join (select distinct hub.dwhIdHubCustomers, hub.customerNr, hub.number, hub.bookingNumber, hub.blNumber, hub.customerType, hub.refType, sat.customerName, sat.shortName, sat.TMScustomerNr, sat.address1, sat.address2, sat.address3, sat.email, sat.fax, sat.phone, sat.countryCode, sat.cityCode, sat.cityName, sat.dwhIdMasterClient, sat.cleanCustomerName, sat.clientReference, sat.accountManagerCode1, sat.accountManagerCode2, hub.accessCompanyId, hub.srcSystemId from sat.satCustomers sat inner join (select dwhIdHubCustomers, customerNr, number, bookingNumber, blNumber, customerType, refType, accessCompanyId, srcSystemId from hub.hubCustomers) hub on hub.dwhIdHubCustomers = sat.dwhIdHubCustomers) hubSat on hubSat.dwhIdHubCustomers = satStatus.dwhIdHubCustomers) q where RowNumber =
customers.dataInDM.RowByKeys = select dwhIdHubCustomers, customerNr, number, bookingNumber, blNumber, customerType, refType, customerName, shortName, TMScustomerNr, address1, address2, address3, email, fax, phone,countryCode, cityCode, cityName, dwhIdMasterClient,  cleanCustomerName, clientReference, accountManagerCode1, accountManagerCode2,accessCompanyId, srcSystemId, dmStatus as status, validFrom  from  dim.dimCustomers

fileLiner.dwh.CountRows = select count (*) c from (select distinct dwhIdHubFileLiner, validFrom from sat.satFileLiner union select distinct dwhIdHubFileLiner, validFrom from sat.satFileLinerStatus) q
fileLiner.dim.CountRows = select COUNT (*) c from (select dwhIdHubFileLiner, validFrom  from dim.dimFileLiner)q
fileLiner.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSat.dwhIdHubFileLiner) AS RowNumber, hubSat.dwhIdHubFileLiner, hubSat.serviceCode, hubSat.fileLinerNr, hubSat.accessCompanyId, hubSat.expPolDate, hubSat.impPodDate, hubSat.voyageNr, hubSat.vesselName, hubSat.temporaryFlag, hubSat.openDate, hubSat.closeDate, hubSat.callId, hubSat.sailingWeek, hubSat.proformaDate, hubSat.status,  hubSat.srcSystemId, satStatus.status as satStatus, satStatus.validFrom from sat.satFileLinerStatus satStatus inner join (select distinct hub.dwhIdHubFileLiner, hub.serviceCode, hub.fileLinerNr, hub.accessCompanyId, sat.expPolDate, sat.impPodDate, sat.voyageNr, sat.vesselName, sat.temporaryFlag, sat.openDate, sat.closeDate, sat.callId, sat.sailingWeek, sat.proformaDate, sat.status,  hub.srcSystemId from sat.satFileLiner sat inner join (select dwhIdHubFileLiner, serviceCode, fileLinerNr, accessCompanyId,  srcSystemId  from hub.hubFileLiner) hub on hub.dwhIdHubFileLiner = sat.dwhIdHubFileLiner) hubSat on hubSat.dwhIdHubFileLiner = satStatus.dwhIdHubFileLiner) q where RowNumber =
fileLiner.dataInDM.RowByKeys = select dwhIdHubFileLiner, serviceCode, fileLinerNr, accessCompanyId, expPolDate, srcSystemId , impPodDate, voyageNr, vesselName,temporaryFlag, openDate, closeDate, callId, sailingWeek, proformaDate, status, dmStatus as satStatus, validFrom from  dim.dimFileLiner

controllingOffice.dwh.CountRows = select count (*) c from (select distinct dwhIdHubControllingOffice, validFrom from sat.satControllingOffice union select distinct dwhIdHubControllingOffice, validFrom from sat.satControllingOfficeStatus union select distinct dwhIdHubControllingOffice, validFrom from sat.satControllingOfficeAuxLocation) q
controllingOffice.dim.CountRows = select COUNT (*) c from (select dwhIdHubControllingOffice, validFrom  from dim.dimControllingOffice)q
controllingOffice.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSat.dwhIdHubControllingOffice) AS RowNumber, hubSat.dwhIdHubControllingOffice, hubSat.officeId, hubSat.companyId, hubSat.companyName, hubSat.controllingOfficeFullName, hubSat.officeName, hubSat.srcSystemId, satStatus.status,  satStatus.validFrom  from sat.satControllingOfficeStatus satStatus inner join (select distinct hub.dwhIdHubControllingOffice, hub.officeId, hub.companyId, sat.companyName, sat.controllingOfficeFullName, sat.officeName, hub.srcSystemId from sat.satControllingOffice sat inner join (select dwhIdHubControllingOffice, officeId, companyId, srcSystemId  from hub.hubControllingOffice) hub on hub.dwhIdHubControllingOffice = sat.dwhIdHubControllingOffice) hubSat on hubSat.dwhIdHubControllingOffice = satStatus.dwhIdHubControllingOffice) q where RowNumber =
controllingOffice.datainDM.RowByKeys = select dwhIdHubControllingOffice, officeId, companyId, companyName, controllingOfficeFullName, officeName, srcSystemId, dmStatus as status, validFrom from  dim.dimControllingOffice

vesselRegistry.dwh.CountRows = select count (*) c from (select distinct dwhIdHubVesselRegistry, validFrom from sat.satVesselRegistry union select distinct dwhIdHubVesselRegistry, validFrom from sat.satVesselRegistryStatus) q
vesselRegistry.dim.CountRows = select COUNT (*) c from (select dwhIdHubVesselRegistry, validFrom  from dim.dimVesselRegistry)q
vesselRegistry.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSat.dwhIdHubVesselRegistry) AS RowNumber, hubSat.dwhIdHubVesselRegistry, hubSat.dictionaryType, hubSat.feederCode, hubSat.sequenceNumber, hubSat.accessCompanyId, hubSat.vesselName, hubSat.callSign, hubSat.lloydsNr, hubSat.srcSystemId, satStatus.status, satStatus.validFrom  from sat.satVesselRegistryStatus satStatus inner join (select distinct hub.dwhIdHubVesselRegistry, hub.dictionaryType, hub.feederCode, hub.sequenceNumber, hub.accessCompanyId, sat.vesselName, sat.callSign, sat.lloydsNr, hub.srcSystemId from sat.satVesselRegistry sat inner join (select dwhIdHubVesselRegistry, dictionaryType, feederCode, sequenceNumber, accessCompanyId, srcSystemId  from hub.hubVesselRegistry) hub on  hub.dwhIdHubVesselRegistry = sat.dwhIdHubVesselRegistry) hubSat on hubSat.dwhIdHubVesselRegistry = satStatus.dwhIdHubVesselRegistry) q where RowNumber =
vesselRegistry.datainDM.RowByKeys = select dwhIdHubVesselRegistry, dictionaryType, feederCode, sequenceNumber, vesselName, callSign, lloydsNr, accessCompanyId, srcSystemId, dmStatus as status, validFrom from  dim.dimVesselRegistry

bookingManifest.dwh.CountRows = select count (*) c from (select distinct dwhIdHubBookingManifest, validFrom from sat.satBookingManifest union select distinct dwhIdHubBookingManifest, validFrom from sat.satBookingManifestStatus union select distinct dwhIdHubBookingManifest, validFrom from sat.satLnkBookingBookingManifest union select distinct dwhIdHubBookingManifest, validFrom from sat.satLnkBookingBookingManifestShadowCopy) q
bookingManifest.dim.CountRows = select COUNT (*) c from (select dwhIdHubBookingManifest, validFrom  from [dim].[dimBookingManifest])q
bookingManifest.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by satLnk2.dwhIdHubBookingManifest) AS RowNumber, satLnk2.dwhIdHubBookingManifest, satlnkBBM.dwhIdHubBooking as dwhIdHubBookingWorkingCopy, satLnk2.dwhIdHubBookingShadowCopy, satLnk2.bookMftId, satLnk2.accessCompanyId, satLnk2.correctorReason, satLnk2.correctorNr, satLnk2.correctorType, satLnk2.manifestType, satLnk2.createdBy, satLnk2.creationDate, satLnk2.rolloverServiceCode, satLnk2.rolloverFileLiner, satLnk2.isSplit, satLnk2.manifestFileId, satLnk2.status, satLnk2.srcSystemId, satLnk2.satStatus, satLnk2.validFrom from sat.satLnkBookingBookingManifest satlnkBBM full join (select satLnk1.dwhIdHubBookingManifest, satLnkBBMSC.dwhIdHubBooking as dwhIdHubBookingShadowCopy,  satLnk1.bookMftId, satLnk1.accessCompanyId, satLnk1.correctorReason, satLnk1.correctorNr, satLnk1.correctorType, satLnk1.manifestType, satLnk1.createdBy, satLnk1.creationDate, satLnk1.rolloverServiceCode, satLnk1.rolloverFileLiner,  satLnk1.isSplit, satLnk1.manifestFileId, satLnk1.status, satLnk1.srcSystemId,  satLnk1.satStatus, satLnk1.validFrom from sat.satLnkBookingBookingManifestShadowCopy satLnkBBMSC full join (select hubSat.dwhIdHubBookingManifest, hubSat.bookMftId, hubSat.accessCompanyId, hubSat.correctorReason, hubSat.correctorNr, hubSat.correctorType, hubSat.manifestType, hubSat.createdBy, hubSat.creationDate, hubSat.rolloverServiceCode, hubSat.rolloverFileLiner,  hubSat.isSplit, hubSat.manifestFileId, hubSat.status, hubSat.srcSystemId, satStatus.status as satStatus, satStatus.validFrom  from sat.satBookingManifestStatus satStatus inner join (select distinct hub.dwhIdHubBookingManifest, hub.bookMftId, hub.accessCompanyId, sat.correctorReason, sat.correctorNr, sat.correctorType, sat.manifestType, sat.createdBy, sat.creationDate, sat.rolloverServiceCode, sat.rolloverFileLiner, sat.isSplit, sat.manifestFileId, sat.status, hub.srcSystemId from sat.satBookingManifest sat inner join (select dwhIdHubBookingManifest, bookMftId, accessCompanyId, srcSystemId  from hub.hubBookingManifest) hub on hub.dwhIdHubBookingManifest = sat.dwhIdHubBookingManifest) hubSat on hubSat.dwhIdHubBookingManifest = satStatus.dwhIdHubBookingManifest) satLnk1 on satLnk1.dwhIdHubBookingManifest = satLnkBBMSC.dwhIdHubBookingManifest) satLnk2 on satLnk2.dwhIdHubBookingManifest = satlnkBBM.dwhIdHubBookingManifest) q where RowNumber =
bookingManifest.dataInDM.RowByKeys = select dwhIdHubBookingManifest, dwhIdHubBookingShadowCopy, dwhIdHubBookingWorkingCopy, bookMftId, correctorReason, correctorNr, correctorType, manifestType, createdBy,creationDate, rolloverServiceCode, rolloverFileLiner, isSplit, manifestFileId, status, accessCompanyId, srcSystemId, dmStatus as satStatus, validFrom, dmStatus from dim.dimBookingManifest

country.dwh.CountRows = select count (*) c from (select distinct dwhIdHubCountry, validFrom from sat.satCountry union select distinct dwhIdHubCountry, validFrom from sat.satCountryStatus) q
country.dim.CountRows = select COUNT (*) c from (select dwhIdHubCountry, validFrom  from [dim].[dimCountry])q
country.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSat.dwhIdHubCountry) AS RowNumber, hubSat.dwhIdHubCountry, hubSat.countryCode, hubSat.dictionaryType, hubSat.sequenceNumber, hubSat.countryName, hubSat.accessCompanyId, hubSat.srcSystemId, satStatus.status, satStatus.validFrom  from sat.satCountryStatus satStatus inner join (select distinct hub.dwhIdHubCountry, hub.countryCode, hub.dictionaryType, hub.sequenceNumber, sat.countryName,  hub.accessCompanyId, hub.srcSystemId  from sat.satCountry sat inner join (select dwhIdHubCountry, countryCode, dictionaryType, sequenceNumber, accessCompanyId, srcSystemId from hub.hubCountry) hub on hub.dwhIdHubCountry = sat.dwhIdHubCountry) hubSat on hubSat.dwhIdHubCountry = satStatus.dwhIdHubCountry) q where RowNumber =
country.dataInDM.RowByKeys = select dwhIdHubCountry, countryCode, dictionaryType, sequenceNumber, countryName accessCompanyId, srcSystemId, dmStatus as status, validFrom  from  dim.dimCountry

gvaTrade.dwh.CountRows = select count (*) c from (select distinct  hub.accessCompanyId, sat.gvaTrade from hub.hubLocations hub inner join (select  dwhIdHubLocations, gvaTrade   from  sat.satLocations where gvaTrade is not null) sat on sat.dwhIdHubLocations = hub.dwhIdHubLocations)q
gvaTrade.dim.CountRows =  select COUNT (*) c from (select gvaTrade, accessCompanyId from dim.dimGvaTrade)q
gvaTrade.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by accessCompanyId) AS RowNumber, accessCompanyId, gvaTrade, '2000-01-01' as validFrom, '2100-01-01' as validTo, 0 as srcSystemId, 1 as dmStatus from (select distinct  hub.accessCompanyId, sat.gvaTrade from hub.hubLocations hub inner join (select  dwhIdHubLocations, gvaTrade from sat.satLocations) sat on sat.dwhIdHubLocations = hub.dwhIdHubLocations)w)q where RowNumber =
gvaTrade.dataInDM.RowByKeys = select gvaTrade, accessCompanyId, srcSystemId, dmStatus, validFrom, validTo from dim.dimGvaTrade

ovTradeName.dwh.CountRows = select count (*) c from (select distinct hub.accessCompanyId, sat.ovTradeName from hub.hubLocations hub inner join (select  dwhIdHubLocations, ovTradeName  from  sat.satLocations where ovTradeName is not null) sat on sat.dwhIdHubLocations = hub.dwhIdHubLocations)q
ovTradeName.dim.CountRows =  select COUNT (*) c from (select ovTradeName, accessCompanyId from dim.dimOvTradeName)q
ovTradeName.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by accessCompanyId) AS RowNumber, accessCompanyId, ovTradeName, (SELECT  CONVERT(datetime, '2000-01-01', 104)) as validFrom, (SELECT  CONVERT(datetime, '2100-01-01', 104)) as validTo, 0 as srcSystemId, 1 as dmStatus from (select distinct  hub.accessCompanyId, sat.ovTradeName from hub.hubLocations hub inner join (select  dwhIdHubLocations, ovTradeName from sat.satLocations) sat on sat.dwhIdHubLocations = hub.dwhIdHubLocations)w)q where RowNumber =
ovTradeName.dataInDM.RowByKeys = select accessCompanyId, ovTradeName, validFrom, validTo, srcSystemId, dmStatus  from dim.dimOvTradeName


bookingCargo.dwh.CountRows = select count (*) c from (select distinct dwhIdHubBookingCargo, validFrom from sat.satBookingCargo union select distinct dwhIdHubBookingCargo, validFrom from sat.satBookingCargoStatus union select distinct dwhIdHubBookingCargo, validFrom from sat.satLnkBookingBookingCargo) q
bookingCargo.dim.CountRows = select COUNT (*) c from (select dwhIdHubBookingCargo, validFrom  from dim.dimBookingCargo)q
bookingCargo.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSatStatus.dwhIdHubBookingCargo) AS RowNumber, hubSatStatus.dwhIdHubBookingCargo, satStatus.dwhIdHubBooking,  hubSatStatus.bookingNumber, hubSatStatus.cargoLineNr, hubSatStatus.accessCompanyId, hubSatStatus.agencyHarmonizedCode, hubSatStatus.cargoWeight, hubSatStatus.tareWeight, hubSatStatus.containerNr, hubSatStatus.containerTypeCode, hubSatStatus.containerTypeName, hubSatStatus.imoClass, hubSatStatus.partLoadFlag, hubSatStatus.unNumber, hubSatStatus.cargoDescr, hubSatStatus.atmosphereControl, hubSatStatus.automaticTemperatureFlag, hubSatStatus.automaticTemperatureValue, hubSatStatus.coldTreatment, hubSatStatus.dehumidificationFlag, hubSatStatus.dehumidificationValue, hubSatStatus.bulbMode, hubSatStatus.manualTemperatureFlag, hubSatStatus.manualTemperatureValue, hubSatStatus.isOperatingReefer, hubSatStatus.temperatureUnits, hubSatStatus.minTemperature, hubSatStatus.maxTemperature, hubSatStatus.imsTransportCode, hubSatStatus.typeOfPackages, hubSatStatus.marksNumbers, hubSatStatus.sealNumber, hubSatStatus.volume, hubSatStatus.volumeUnits, hubSatStatus.feederVoyageNumber, hubSatStatus.fumigationMaterialImoClass, hubSatStatus.fumigationMaterialUnNumber, hubSatStatus.dangerousCargoResidueImoClass, hubSatStatus.dangerousCargoResidueUnNumber, hubSatStatus.kipisSendFlag, hubSatStatus.cargoBackOverDimension, hubSatStatus.cargoForeOverDimension, hubSatStatus.cargoHightOverDimension, hubSatStatus.cargoLeftOverDimension, hubSatStatus.cargoLengthOverDimension, hubSatStatus.cargoRightOverDimension, hubSatStatus.cargoWidthOverDimension, hubSatStatus.precarriageVessel, hubSatStatus.packageCount, hubSatStatus.dryPortCode, hubSatStatus.eta, hubSatStatus.sailingDate, hubSatStatus.srcSystemId, hubSatStatus.satStatus as status, hubSatStatus.validFrom from sat.satLnkBookingBookingCargo satStatus full join (select hubSat.dwhIdHubBookingCargo, hubSat.bookingNumber, hubSat.cargoLineNr, hubSat.accessCompanyId, hubSat.agencyHarmonizedCode, hubSat.cargoWeight, hubSat.tareWeight, hubSat.containerNr,hubSat.containerTypeCode, hubSat.containerTypeName, hubSat.imoClass, hubSat.partLoadFlag, hubSat.unNumber, hubSat.cargoDescr, hubSat.atmosphereControl, hubSat.automaticTemperatureFlag, hubSat.automaticTemperatureValue, hubSat.coldTreatment, hubSat.dehumidificationFlag, hubSat.dehumidificationValue, hubSat.bulbMode, hubSat.manualTemperatureFlag, hubSat.manualTemperatureValue, hubSat.isOperatingReefer, hubSat.temperatureUnits, hubSat.minTemperature, hubSat.maxTemperature, hubSat.imsTransportCode, hubSat.typeOfPackages, hubSat.marksNumbers, hubSat.sealNumber, hubSat.volume, hubSat.volumeUnits, hubSat.feederVoyageNumber, hubSat.fumigationMaterialImoClass, hubSat.fumigationMaterialUnNumber, hubSat.dangerousCargoResidueImoClass, hubSat.dangerousCargoResidueUnNumber, hubSat.kipisSendFlag, hubSat.cargoBackOverDimension, hubSat.cargoForeOverDimension, hubSat.cargoHightOverDimension, hubSat.cargoLeftOverDimension, hubSat.cargoLengthOverDimension, hubSat.cargoRightOverDimension, hubSat.cargoWidthOverDimension, hubSat.precarriageVessel, hubSat.packageCount, hubSat.dryPortCode, hubSat.eta, hubSat.sailingDate, hubSat.srcSystemId, satStatus.status as satStatus, satStatus.validFrom from sat.satBookingCargoStatus satStatus inner join (select distinct hub.dwhIdHubBookingCargo, hub.bookingNumber, hub.cargoLineNr, hub.accessCompanyId, sat.agencyHarmonizedCode, sat.cargoWeight, sat.tareWeight, sat.containerNr, sat.containerTypeCode, sat.containerTypeName, sat.imoClass, sat.partLoadFlag, sat.unNumber, sat.cargoDescr, sat.atmosphereControl, sat.automaticTemperatureFlag, sat.automaticTemperatureValue, sat.coldTreatment, sat.dehumidificationFlag, sat.dehumidificationValue, sat.bulbMode, sat.manualTemperatureFlag, sat.manualTemperatureValue, sat.isOperatingReefer, sat.temperatureUnits, sat.minTemperature, sat.maxTemperature, sat.imsTransportCode, sat.typeOfPackages, sat.marksNumbers, sat.sealNumber, sat.volume, sat.volumeUnits, sat.feederVoyageNumber, sat.fumigationMaterialImoClass, sat.fumigationMaterialUnNumber, sat.dangerousCargoResidueImoClass, sat.dangerousCargoResidueUnNumber, sat.kipisSendFlag, sat.cargoBackOverDimension, sat.cargoForeOverDimension, sat.cargoHightOverDimension, sat.cargoLeftOverDimension, sat.cargoLengthOverDimension, sat.cargoRightOverDimension, sat.cargoWidthOverDimension, sat.precarriageVessel,sat. packageCount, sat.dryPortCode, sat.eta, sat.sailingDate, hub.srcSystemId from sat.satBookingCargo sat inner join (select dwhIdHubBookingCargo, bookingNumber, cargoLineNr, accessCompanyId,  srcSystemId  from hub.hubBookingCargo) hub on hub.dwhIdHubBookingCargo = sat.dwhIdHubBookingCargo) hubSat on hubSat.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) hubSatStatus on hubSatStatus.dwhIdHubBookingCargo = satStatus.dwhIdHubBookingCargo) q where RowNumber =
bookingCargo.dataInDM.RowByKeys = select dwhIdHubBookingCargo, dwhIdHubBooking, bookingNumber, cargoLineNr, agencyHarmonizedCode, cargoWeight, tareWeight,containerNr, containerTypeCode, containerTypeName, imoClass, partLoadFlag, unNumber, cargoDescr, atmosphereControl, automaticTemperatureFlag, automaticTemperatureValue, coldTreatment, dehumidificationFlag, dehumidificationValue, bulbMode, manualTemperatureFlag, manualTemperatureValue, isOperatingReefer, temperatureUnits, minTemperature, maxTemperature, imsTransportCode, typeOfPackages, marksNumbers, sealNumber, volume, volumeUnits, feederVoyageNumber, fumigationMaterialImoClass, fumigationMaterialUnNumber, dangerousCargoResidueImoClass, dangerousCargoResidueUnNumber, kipisSendFlag, cargoBackOverDimension, cargoForeOverDimension, cargoHightOverDimension, cargoLeftOverDimension, cargoLengthOverDimension, cargoRightOverDimension, cargoWidthOverDimension, precarriageVessel, packageCount, dryPortCode, eta, sailingDate, accessCompanyId, srcSystemId, dmStatus as status, validFrom, validTo from  dim.dimBookingCargo


booking.dwh.CountRows = select count (*) c from (select distinct dwhIdHubBooking, validFrom from sat.satBooking  union select distinct dwhIdHubBooking, validFrom from sat.satBookingStatus union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingPPCCEE union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingCrossBookingType union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingImportExport union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingCustomers union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingLocations union  select distinct dwhIdHubBooking, validFrom from sat.satBookingNonManifestedHaulage union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingControllingOffice union select distinct dwhIdHubBooking, validFrom from sat.satBookingCustomers union select distinct dwhIdHubBooking, validFrom from sat.satLnkBookingFileLiner union select distinct dwhIdHubBooking2, validFrom from sat.satLnkBookingBooking) q
booking.dim.CountRows = select COUNT (*) c from (select dwhIdHubBooking, validFrom  from dim.dimBooking)q
booking.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by dataLnk35.dwhIdHubBooking) AS RowNumber, dataLnk35.dwhIdHubBooking, dataLnk35.dwhIdHubPPCCEE, dataLnk35.dwhIdHubCrossBookingType, dataLnk35.dwhIdHubImportExport,  dataLnk35.dwhIdHubCustomersForwarder, dataLnk35.dwhIdHubCustomersShipper, dataLnk35.dwhIdHubCustomersConsignee, dataLnk35.dwhIdHubCustomersBookingParty, dataLnk35.dwhIdHubCustomersContractHolder, dataLnk35.dwhIdHubCustomersCareOfForwarder, dataLnk35.dwhIdHubCustomersNotify, dataLnk35.dwhIdHubCustomersNotify2, dataLnk35.dwhIdHubCustomersNotify3, dataLnk35.dwhIdHubCustomersInvComElsewhere,  dataLnk35.dwhIdHubCustomersCareOfShipper, dataLnk35.dwhIdHubCustomersStatCustomer, dataLnk35.dwhIdHubCustomersFreightPayer, dataLnk35.dwhIdHubFileLiner,  dataLnk35.dwhIdHubLocationsPOL, dataLnk35.dwhIdHubLocationsPOD, dataLnk35.dwhIdHubLocationsPLR, dataLnk35.dwhIdHubLocationsPAYABLEAT, dataLnk35.dwhIdHubLocationsPAYABLEATIMS,  dataLnk35.dwhIdHubLocationsDRYPORT, dataLnk35.dwhIdHubLocationsPORTSAIL, dataLnk35.dwhIdHubLocationsPORTFEED, dataLnk35.dwhIdHubLocationsTRANS, dataLnk35.dwhIdHubLocationsTRANS2,  dataLnk35.dwhIdHubLocationsTRANS3,  dataLnk35.dwhIdHubLocationsTRANS4, dataLnk35.dwhIdHubLocationsTRANS5, dataLnk35.dwhIdHubCompany, dataLnk35.dwhIdHubBookingCrossBooking,  dataLnk35.dwhIdHubLocationsPLD, dataLnk35.dwhIdHubControllingOffice,  dataLnk35.shipperCode, dataLnk35.bookPartyCode, dataLnk35.careOfForwarderCode, dataLnk35.careOfShipperCode,  dataLnk35.contractHolderCode,   dataLnk35.invoicingCompanyElsewhereCode, dataLnk35.forwarderCode, dataLnk35.consigneeCode, dataLnk35.namedAccountCode, dataLnk35.notifyCode,  dataLnk35.notify2Code, dataLnk35.notify3Code, dataLnk35.sshipperCode, dataLnk35.sbookPartyCode, dataLnk35.scareOfForwarderCode, dataLnk35.scareOfShipperCode,  dataLnk35.scontractHolderCode, dataLnk35.sinvoicingCompanyElsewhereCode, dataLnk35.sforwarderCode, dataLnk35.sconsigneeCode, dataLnk35.snamedAccountCode, dataLnk35.snotifyCode,  dataLnk35.snotify2Code, dataLnk35.snotify3Code, satLnk36.carriageMode as nmhCarriageMode , satLnk36.dryPortName as nmhDryPortName, satLnk36.plrName as nmhPlrName, satLnk36.podName as nmhPodName,   satLnk36.PldZipCode as nmhPldZipCode, satLnk36.PlrZipCode as nmhPlrZipCode, dataLnk35.bookingNr, dataLnk35.accessCompanyId, dataLnk35.ovTradeNumber, dataLnk35.oceanTrade, dataLnk35.ovTradeName, dataLnk35.gvaTrade, dataLnk35.serviceCode, dataLnk35.polName, dataLnk35.polDate, dataLnk35.polCode, dataLnk35.dischTerminalDepotCode, dataLnk35.podName, dataLnk35.podDate, dataLnk35.podCode, dataLnk35.creationDate, dataLnk35.blDate, dataLnk35.manifestType, dataLnk35.feederDate, dataLnk35.quotationRefNr, dataLnk35.blNumber,  dataLnk35.specialRefNr, dataLnk35.bookingStatus, dataLnk35.branch, dataLnk35.placeOfDelivery, dataLnk35.placeOfReceipt, dataLnk35.pldHaulageAtDestination, dataLnk35.pldHaulageAtOrigin, dataLnk35.pldSublocationCode, dataLnk35.plrSublocationCode, dataLnk35.pldZipCode, dataLnk35.plrZipCode, dataLnk35.inttraReferenceNr, dataLnk35.controlOffice, dataLnk35.controlCompany, dataLnk35.contractType, dataLnk35.directFlag, dataLnk35.payableAt, dataLnk35.pldDate, dataLnk35.plrDate, dataLnk35.createdBy, dataLnk35.payableAtIMS, dataLnk35.originalCrossBookNr, dataLnk35.europeanCargoStatus, dataLnk35.shipperReference, dataLnk35.depot, dataLnk35.terminal, dataLnk35.depotReference, dataLnk35.terminalReference, dataLnk35.bookingPosition, dataLnk35.importExportCode, dataLnk35.customerBookingParty, dataLnk35.blGroup, dataLnk35.srcSystemId, dataLnk35.status, dataLnk35.validFrom from sat.satBookingNonManifestedHaulage satLnk36 right join (select dataLnk34.dwhIdHubBooking, dataLnk34.dwhIdHubPPCCEE, dataLnk34.dwhIdHubCrossBookingType, dataLnk34.dwhIdHubImportExport, dataLnk34.dwhIdHubCustomersForwarder, dataLnk34.dwhIdHubCustomersShipper, dataLnk34.dwhIdHubCustomersConsignee, dataLnk34.dwhIdHubCustomersBookingParty, dataLnk34.dwhIdHubCustomersContractHolder, dataLnk34.dwhIdHubCustomersCareOfForwarder, dataLnk34.dwhIdHubCustomersNotify, dataLnk34.dwhIdHubCustomersNotify2, dataLnk34.dwhIdHubCustomersNotify3, dataLnk34.dwhIdHubCustomersInvComElsewhere, dataLnk34.dwhIdHubCustomersCareOfShipper, dataLnk34.dwhIdHubCustomersStatCustomer, dataLnk34.dwhIdHubCustomersFreightPayer, dataLnk34.dwhIdHubFileLiner, dataLnk34.dwhIdHubLocationsPOL, dataLnk34.dwhIdHubLocationsPOD, dataLnk34.dwhIdHubLocationsPLR, dataLnk34.dwhIdHubLocationsPAYABLEAT, dataLnk34.dwhIdHubLocationsPAYABLEATIMS, dataLnk34.dwhIdHubLocationsDRYPORT, dataLnk34.dwhIdHubLocationsPORTSAIL, dataLnk34.dwhIdHubLocationsPORTFEED, dataLnk34.dwhIdHubLocationsTRANS, dataLnk34.dwhIdHubLocationsTRANS2, dataLnk34.dwhIdHubLocationsTRANS3, dataLnk34.dwhIdHubLocationsTRANS4, dataLnk34.dwhIdHubLocationsTRANS5, dataLnk34.dwhIdHubCompany, dataLnk34.dwhIdHubBookingCrossBooking, dataLnk34.dwhIdHubLocationsPLD, dataLnk34.dwhIdHubControllingOffice, satLnk35.shipperCode, satLnk35.bookPartyCode, satLnk35.careOfForwarderCode, satLnk35.careOfShipperCode, satLnk35.contractHolderCode, satLnk35.invoicingCompanyElsewhereCode, satLnk35.forwarderCode, satLnk35.consigneeCode, satLnk35.namedAccountCode, satLnk35.notifyCode, satLnk35.notify2Code, satLnk35.notify3Code, satLnk35.s_shipperCode as sshipperCode, satLnk35.s_bookPartyCode as sbookPartyCode, satLnk35.s_careOfForwarderCode as scareOfForwarderCode, satLnk35.s_careOfShipperCode as scareOfShipperCode, satLnk35.s_contractHolderCode as scontractHolderCode, satLnk35.s_invoicingCompanyElsewhereCode as sinvoicingCompanyElsewhereCode, satLnk35.s_forwarderCode as sforwarderCode, satLnk35.s_consigneeCode as sconsigneeCode, satLnk35.s_namedAccountCode as snamedAccountCode, satLnk35.s_notifyCode as snotifyCode, satLnk35.s_notify2Code as snotify2Code, satLnk35.s_notify3Code as snotify3Code, dataLnk34.bookingNr, dataLnk34.accessCompanyId, dataLnk34.ovTradeNumber, dataLnk34.oceanTrade, dataLnk34.ovTradeName, dataLnk34.gvaTrade, dataLnk34.serviceCode, dataLnk34.polName, dataLnk34.polDate, dataLnk34.polCode, dataLnk34.dischTerminalDepotCode, dataLnk34.podName, dataLnk34.podDate, dataLnk34.podCode, dataLnk34.creationDate, dataLnk34.blDate, dataLnk34.manifestType, dataLnk34.feederDate, dataLnk34.quotationRefNr, dataLnk34.blNumber, dataLnk34.specialRefNr, dataLnk34.bookingStatus, dataLnk34.branch, dataLnk34.placeOfDelivery, dataLnk34.placeOfReceipt, dataLnk34.pldHaulageAtDestination, dataLnk34.pldHaulageAtOrigin, dataLnk34.pldSublocationCode, dataLnk34.plrSublocationCode, dataLnk34.pldZipCode, dataLnk34.plrZipCode, dataLnk34.inttraReferenceNr, dataLnk34.controlOffice, dataLnk34.controlCompany, dataLnk34.contractType, dataLnk34.directFlag, dataLnk34.payableAt, dataLnk34.pldDate, dataLnk34.plrDate, dataLnk34.createdBy, dataLnk34.payableAtIMS, dataLnk34.originalCrossBookNr, dataLnk34.europeanCargoStatus, dataLnk34.shipperReference, dataLnk34.depot, dataLnk34.terminal, dataLnk34.depotReference, dataLnk34.terminalReference, dataLnk34.bookingPosition, dataLnk34.importExportCode, dataLnk34.customerBookingParty, dataLnk34.blGroup, dataLnk34.srcSystemId, dataLnk34.status, dataLnk34.validFrom from sat.satBookingCustomers satLnk35 right join (select dataLnk33.dwhIdHubBooking, dataLnk33.dwhIdHubPPCCEE, dataLnk33.dwhIdHubCrossBookingType, dataLnk33.dwhIdHubImportExport, dataLnk33.dwhIdHubCustomersForwarder, dataLnk33.dwhIdHubCustomersShipper, dataLnk33.dwhIdHubCustomersConsignee, dataLnk33.dwhIdHubCustomersBookingParty, dataLnk33.dwhIdHubCustomersContractHolder, dataLnk33.dwhIdHubCustomersCareOfForwarder, dataLnk33.dwhIdHubCustomersNotify, dataLnk33.dwhIdHubCustomersNotify2, dataLnk33.dwhIdHubCustomersNotify3, dataLnk33.dwhIdHubCustomersInvComElsewhere, dataLnk33.dwhIdHubCustomersCareOfShipper, dataLnk33.dwhIdHubCustomersStatCustomer, dataLnk33.dwhIdHubCustomersFreightPayer, dataLnk33.dwhIdHubFileLiner, dataLnk33.dwhIdHubLocationsPOL, dataLnk33.dwhIdHubLocationsPOD, dataLnk33.dwhIdHubLocationsPLR, dataLnk33.dwhIdHubLocationsPAYABLEAT, dataLnk33.dwhIdHubLocationsPAYABLEATIMS, dataLnk33.dwhIdHubLocationsDRYPORT, dataLnk33.dwhIdHubLocationsPORTSAIL, dataLnk33.dwhIdHubLocationsPORTFEED, dataLnk33.dwhIdHubLocationsTRANS, dataLnk33.dwhIdHubLocationsTRANS2, dataLnk33.dwhIdHubLocationsTRANS3, dataLnk33.dwhIdHubLocationsTRANS4, dataLnk33.dwhIdHubLocationsTRANS5, dataLnk33.dwhIdHubCompany, dataLnk33.dwhIdHubBookingCrossBooking, dataLnk33.dwhIdHubLocationsPLD, satLnk34.dwhIdHubControllingOffice, dataLnk33.bookingNr, dataLnk33.accessCompanyId, dataLnk33.ovTradeNumber, dataLnk33.oceanTrade, dataLnk33.ovTradeName, dataLnk33.gvaTrade, dataLnk33.serviceCode, dataLnk33.polName, dataLnk33.polDate, dataLnk33.polCode, dataLnk33.dischTerminalDepotCode, dataLnk33.podName, dataLnk33.podDate, dataLnk33.podCode, dataLnk33.creationDate, dataLnk33.blDate, dataLnk33.manifestType, dataLnk33.feederDate, dataLnk33.quotationRefNr, dataLnk33.blNumber, dataLnk33.specialRefNr, dataLnk33.bookingStatus, dataLnk33.branch, dataLnk33.placeOfDelivery, dataLnk33.placeOfReceipt, dataLnk33.pldHaulageAtDestination, dataLnk33.pldHaulageAtOrigin, dataLnk33.pldSublocationCode, dataLnk33.plrSublocationCode, dataLnk33.pldZipCode, dataLnk33.plrZipCode, dataLnk33.inttraReferenceNr, dataLnk33.controlOffice, dataLnk33.controlCompany, dataLnk33.contractType, dataLnk33.directFlag, dataLnk33.payableAt, dataLnk33.pldDate, dataLnk33.plrDate, dataLnk33.createdBy, dataLnk33.payableAtIMS, dataLnk33.originalCrossBookNr, dataLnk33.europeanCargoStatus, dataLnk33.shipperReference, dataLnk33.depot, dataLnk33.terminal, dataLnk33.depotReference, dataLnk33.terminalReference, dataLnk33.bookingPosition, dataLnk33.importExportCode, dataLnk33.customerBookingParty, dataLnk33.blGroup, dataLnk33.srcSystemId, dataLnk33.status, dataLnk33.validFrom from sat.satLnkBookingControllingOffice satLnk34 right join (select dataLnk32.dwhIdHubBooking, dataLnk32.dwhIdHubPPCCEE, dataLnk32.dwhIdHubCrossBookingType, dataLnk32.dwhIdHubImportExport, dataLnk32.dwhIdHubCustomersForwarder, dataLnk32.dwhIdHubCustomersShipper, dataLnk32.dwhIdHubCustomersConsignee, dataLnk32.dwhIdHubCustomersBookingParty, dataLnk32.dwhIdHubCustomersContractHolder, dataLnk32.dwhIdHubCustomersCareOfForwarder, dataLnk32.dwhIdHubCustomersNotify, dataLnk32.dwhIdHubCustomersNotify2, dataLnk32.dwhIdHubCustomersNotify3, dataLnk32.dwhIdHubCustomersInvComElsewhere, dataLnk32.dwhIdHubCustomersCareOfShipper, dataLnk32.dwhIdHubCustomersStatCustomer, dataLnk32.dwhIdHubCustomersFreightPayer, dataLnk32.dwhIdHubFileLiner, dataLnk32.dwhIdHubLocationsPOL, dataLnk32.dwhIdHubLocationsPOD, dataLnk32.dwhIdHubLocationsPLR, dataLnk32.dwhIdHubLocationsPAYABLEAT, dataLnk32.dwhIdHubLocationsPAYABLEATIMS, dataLnk32.dwhIdHubLocationsDRYPORT, dataLnk32.dwhIdHubLocationsPORTSAIL, dataLnk32.dwhIdHubLocationsPORTFEED, dataLnk32.dwhIdHubLocationsTRANS, dataLnk32.dwhIdHubLocationsTRANS2, dataLnk32.dwhIdHubLocationsTRANS3, dataLnk32.dwhIdHubLocationsTRANS4, dataLnk32.dwhIdHubLocationsTRANS5, dataLnk32.dwhIdHubCompany, dataLnk32.dwhIdHubBookingCrossBooking, satLnk33.dwhIdHubLocations as dwhIdHubLocationsPLD, dataLnk32.bookingNr, dataLnk32.accessCompanyId, dataLnk32.ovTradeNumber, dataLnk32.oceanTrade, dataLnk32.ovTradeName, dataLnk32.gvaTrade, dataLnk32.serviceCode, dataLnk32.polName, dataLnk32.polDate, dataLnk32.polCode, dataLnk32.dischTerminalDepotCode, dataLnk32.podName, dataLnk32.podDate, dataLnk32.podCode, dataLnk32.creationDate, dataLnk32.blDate, dataLnk32.manifestType, dataLnk32.feederDate, dataLnk32.quotationRefNr, dataLnk32.blNumber, dataLnk32.specialRefNr, dataLnk32.bookingStatus, dataLnk32.branch, dataLnk32.placeOfDelivery, dataLnk32.placeOfReceipt, dataLnk32.pldHaulageAtDestination, dataLnk32.pldHaulageAtOrigin, dataLnk32.pldSublocationCode, dataLnk32.plrSublocationCode, dataLnk32.pldZipCode, dataLnk32.plrZipCode, dataLnk32.inttraReferenceNr, dataLnk32.controlOffice, dataLnk32.controlCompany, dataLnk32.contractType, dataLnk32.directFlag, dataLnk32.payableAt, dataLnk32.pldDate, dataLnk32.plrDate, dataLnk32.createdBy, dataLnk32.payableAtIMS, dataLnk32.originalCrossBookNr, dataLnk32.europeanCargoStatus, dataLnk32.shipperReference, dataLnk32.depot, dataLnk32.terminal, dataLnk32.depotReference, dataLnk32.terminalReference, dataLnk32.bookingPosition, dataLnk32.importExportCode, dataLnk32.customerBookingParty, dataLnk32.blGroup, dataLnk32.srcSystemId, dataLnk32.status, dataLnk32.validFrom from sat.satLnkBookingLocations satLnk33 right join (select dataLnk31.dwhIdHubBooking, dataLnk31.dwhIdHubPPCCEE, dataLnk31.dwhIdHubCrossBookingType, dataLnk31.dwhIdHubImportExport, dataLnk31.dwhIdHubCustomersForwarder, dataLnk31.dwhIdHubCustomersShipper, dataLnk31.dwhIdHubCustomersConsignee, dataLnk31.dwhIdHubCustomersBookingParty, dataLnk31.dwhIdHubCustomersContractHolder, dataLnk31.dwhIdHubCustomersCareOfForwarder, dataLnk31.dwhIdHubCustomersNotify, dataLnk31.dwhIdHubCustomersNotify2, dataLnk31.dwhIdHubCustomersNotify3, dataLnk31.dwhIdHubCustomersInvComElsewhere, dataLnk31.dwhIdHubCustomersCareOfShipper, dataLnk31.dwhIdHubCustomersStatCustomer, dataLnk31.dwhIdHubCustomersFreightPayer, dataLnk31.dwhIdHubFileLiner, dataLnk31.dwhIdHubLocationsPOL, dataLnk31.dwhIdHubLocationsPOD, dataLnk31.dwhIdHubLocationsPLR, dataLnk31.dwhIdHubLocationsPAYABLEAT, dataLnk31.dwhIdHubLocationsPAYABLEATIMS, dataLnk31.dwhIdHubLocationsDRYPORT, dataLnk31.dwhIdHubLocationsPORTSAIL, dataLnk31.dwhIdHubLocationsPORTFEED, dataLnk31.dwhIdHubLocationsTRANS, dataLnk31.dwhIdHubLocationsTRANS2, dataLnk31.dwhIdHubLocationsTRANS3, dataLnk31.dwhIdHubLocationsTRANS4, dataLnk31.dwhIdHubLocationsTRANS5, dataLnk31.dwhIdHubCompany, satLnk32.dwhIdHubBooking2 as dwhIdHubBookingCrossBooking, dataLnk31.bookingNr, dataLnk31.accessCompanyId, dataLnk31.ovTradeNumber, dataLnk31.oceanTrade, dataLnk31.ovTradeName, dataLnk31.gvaTrade, dataLnk31.serviceCode, dataLnk31.polName, dataLnk31.polDate, dataLnk31.polCode, dataLnk31.dischTerminalDepotCode, dataLnk31.podName, dataLnk31.podDate, dataLnk31.podCode, dataLnk31.creationDate, dataLnk31.blDate, dataLnk31.manifestType, dataLnk31.feederDate, dataLnk31.quotationRefNr, dataLnk31.blNumber, dataLnk31.specialRefNr, dataLnk31.bookingStatus, dataLnk31.branch, dataLnk31.placeOfDelivery, dataLnk31.placeOfReceipt, dataLnk31.pldHaulageAtDestination, dataLnk31.pldHaulageAtOrigin, dataLnk31.pldSublocationCode, dataLnk31.plrSublocationCode, dataLnk31.pldZipCode, dataLnk31.plrZipCode, dataLnk31.inttraReferenceNr, dataLnk31.controlOffice, dataLnk31.controlCompany, dataLnk31.contractType, dataLnk31.directFlag, dataLnk31.payableAt, dataLnk31.pldDate, dataLnk31.plrDate, dataLnk31.createdBy, dataLnk31.payableAtIMS, dataLnk31.originalCrossBookNr, dataLnk31.europeanCargoStatus, dataLnk31.shipperReference, dataLnk31.depot, dataLnk31.terminal, dataLnk31.depotReference, dataLnk31.terminalReference, dataLnk31.bookingPosition, dataLnk31.importExportCode, dataLnk31.customerBookingParty, dataLnk31.blGroup, dataLnk31.srcSystemId, dataLnk31.status, dataLnk31.validFrom from sat.satLnkBookingBooking satLnk32 right join (select dataLnk30.dwhIdHubBooking, dataLnk30.dwhIdHubPPCCEE, dataLnk30.dwhIdHubCrossBookingType, dataLnk30.dwhIdHubImportExport, dataLnk30.dwhIdHubCustomersForwarder, dataLnk30.dwhIdHubCustomersShipper, dataLnk30.dwhIdHubCustomersConsignee, dataLnk30.dwhIdHubCustomersBookingParty, dataLnk30.dwhIdHubCustomersContractHolder, dataLnk30.dwhIdHubCustomersCareOfForwarder, dataLnk30.dwhIdHubCustomersNotify, dataLnk30.dwhIdHubCustomersNotify2, dataLnk30.dwhIdHubCustomersNotify3, dataLnk30.dwhIdHubCustomersInvComElsewhere, dataLnk30.dwhIdHubCustomersCareOfShipper, dataLnk30.dwhIdHubCustomersStatCustomer, dataLnk30.dwhIdHubCustomersFreightPayer, dataLnk30.dwhIdHubFileLiner, dataLnk30.dwhIdHubLocationsPOL, dataLnk30.dwhIdHubLocationsPOD, dataLnk30.dwhIdHubLocationsPLR, dataLnk30.dwhIdHubLocationsPAYABLEAT, dataLnk30.dwhIdHubLocationsPAYABLEATIMS, dataLnk30.dwhIdHubLocationsDRYPORT, dataLnk30.dwhIdHubLocationsPORTSAIL, dataLnk30.dwhIdHubLocationsPORTFEED, dataLnk30.dwhIdHubLocationsTRANS, dataLnk30.dwhIdHubLocationsTRANS2, dataLnk30.dwhIdHubLocationsTRANS3, dataLnk30.dwhIdHubLocationsTRANS4, dataLnk30.dwhIdHubLocationsTRANS5, satLnk31.dwhIdHubCompany, dataLnk30.bookingNr, dataLnk30.accessCompanyId, dataLnk30.ovTradeNumber, dataLnk30.oceanTrade, dataLnk30.ovTradeName, dataLnk30.gvaTrade, dataLnk30.serviceCode, dataLnk30.polName, dataLnk30.polDate, dataLnk30.polCode, dataLnk30.dischTerminalDepotCode, dataLnk30.podName, dataLnk30.podDate, dataLnk30.podCode, dataLnk30.creationDate, dataLnk30.blDate, dataLnk30.manifestType, dataLnk30.feederDate, dataLnk30.quotationRefNr, dataLnk30.blNumber, dataLnk30.specialRefNr, dataLnk30.bookingStatus, dataLnk30.branch, dataLnk30.placeOfDelivery, dataLnk30.placeOfReceipt, dataLnk30.pldHaulageAtDestination, dataLnk30.pldHaulageAtOrigin, dataLnk30.pldSublocationCode, dataLnk30.plrSublocationCode, dataLnk30.pldZipCode, dataLnk30.plrZipCode, dataLnk30.inttraReferenceNr, dataLnk30.controlOffice, dataLnk30.controlCompany, dataLnk30.contractType, dataLnk30.directFlag, dataLnk30.payableAt, dataLnk30.pldDate, dataLnk30.plrDate, dataLnk30.createdBy, dataLnk30.payableAtIMS, dataLnk30.originalCrossBookNr, dataLnk30.europeanCargoStatus, dataLnk30.shipperReference, dataLnk30.depot, dataLnk30.terminal, dataLnk30.depotReference, dataLnk30.terminalReference, dataLnk30.bookingPosition, dataLnk30.importExportCode, dataLnk30.customerBookingParty, dataLnk30.blGroup, dataLnk30.srcSystemId, dataLnk30.status, dataLnk30.validFrom from lin.lnkBookingCompany satLnk31 right join (select dataLnk29.dwhIdHubBooking, dataLnk29.dwhIdHubPPCCEE, dataLnk29.dwhIdHubCrossBookingType, dataLnk29.dwhIdHubImportExport, dataLnk29.dwhIdHubCustomersForwarder, dataLnk29.dwhIdHubCustomersShipper, dataLnk29.dwhIdHubCustomersConsignee, dataLnk29.dwhIdHubCustomersBookingParty, dataLnk29.dwhIdHubCustomersContractHolder, dataLnk29.dwhIdHubCustomersCareOfForwarder, dataLnk29.dwhIdHubCustomersNotify, dataLnk29.dwhIdHubCustomersNotify2, dataLnk29.dwhIdHubCustomersNotify3, dataLnk29.dwhIdHubCustomersInvComElsewhere, dataLnk29.dwhIdHubCustomersCareOfShipper, dataLnk29.dwhIdHubCustomersStatCustomer, dataLnk29.dwhIdHubCustomersFreightPayer, dataLnk29.dwhIdHubFileLiner, dataLnk29.dwhIdHubLocationsPOL, dataLnk29.dwhIdHubLocationsPOD, dataLnk29.dwhIdHubLocationsPLR, dataLnk29.dwhIdHubLocationsPAYABLEAT, dataLnk29.dwhIdHubLocationsPAYABLEATIMS, dataLnk29.dwhIdHubLocationsDRYPORT, dataLnk29.dwhIdHubLocationsPORTSAIL, dataLnk29.dwhIdHubLocationsPORTFEED, dataLnk29.dwhIdHubLocationsTRANS, dataLnk29.dwhIdHubLocationsTRANS2, dataLnk29.dwhIdHubLocationsTRANS3, dataLnk29.dwhIdHubLocationsTRANS4, satLnk30.dwhIdHubLocations as dwhIdHubLocationsTRANS5, dataLnk29.bookingNr, dataLnk29.accessCompanyId, dataLnk29.ovTradeNumber, dataLnk29.oceanTrade, dataLnk29.ovTradeName, dataLnk29.gvaTrade, dataLnk29.serviceCode, dataLnk29.polName, dataLnk29.polDate, dataLnk29.polCode, dataLnk29.dischTerminalDepotCode, dataLnk29.podName, dataLnk29.podDate, dataLnk29.podCode, dataLnk29.creationDate, dataLnk29.blDate, dataLnk29.manifestType, dataLnk29.feederDate, dataLnk29.quotationRefNr, dataLnk29.blNumber, dataLnk29.specialRefNr, dataLnk29.bookingStatus, dataLnk29.branch, dataLnk29.placeOfDelivery, dataLnk29.placeOfReceipt, dataLnk29.pldHaulageAtDestination, dataLnk29.pldHaulageAtOrigin, dataLnk29.pldSublocationCode, dataLnk29.plrSublocationCode, dataLnk29.pldZipCode, dataLnk29.plrZipCode, dataLnk29.inttraReferenceNr, dataLnk29.controlOffice, dataLnk29.controlCompany, dataLnk29.contractType, dataLnk29.directFlag, dataLnk29.payableAt, dataLnk29.pldDate, dataLnk29.plrDate, dataLnk29.createdBy, dataLnk29.payableAtIMS, dataLnk29.originalCrossBookNr, dataLnk29.europeanCargoStatus, dataLnk29.shipperReference, dataLnk29.depot, dataLnk29.terminal, dataLnk29.depotReference, dataLnk29.terminalReference, dataLnk29.bookingPosition, dataLnk29.importExportCode, dataLnk29.customerBookingParty, dataLnk29.blGroup, dataLnk29.srcSystemId, dataLnk29.status, dataLnk29.validFrom from sat.satLnkBookingLocations satLnk30 right join (select dataLnk28.dwhIdHubBooking, dataLnk28.dwhIdHubPPCCEE, dataLnk28.dwhIdHubCrossBookingType, dataLnk28.dwhIdHubImportExport, dataLnk28.dwhIdHubCustomersForwarder, dataLnk28.dwhIdHubCustomersShipper, dataLnk28.dwhIdHubCustomersConsignee, dataLnk28.dwhIdHubCustomersBookingParty, dataLnk28.dwhIdHubCustomersContractHolder, dataLnk28.dwhIdHubCustomersCareOfForwarder, dataLnk28.dwhIdHubCustomersNotify, dataLnk28.dwhIdHubCustomersNotify2, dataLnk28.dwhIdHubCustomersNotify3, dataLnk28.dwhIdHubCustomersInvComElsewhere, dataLnk28.dwhIdHubCustomersCareOfShipper, dataLnk28.dwhIdHubCustomersStatCustomer, dataLnk28.dwhIdHubCustomersFreightPayer, dataLnk28.dwhIdHubFileLiner, dataLnk28.dwhIdHubLocationsPOL, dataLnk28.dwhIdHubLocationsPOD, dataLnk28.dwhIdHubLocationsPLR, dataLnk28.dwhIdHubLocationsPAYABLEAT, dataLnk28.dwhIdHubLocationsPAYABLEATIMS, dataLnk28.dwhIdHubLocationsDRYPORT, dataLnk28.dwhIdHubLocationsPORTSAIL, dataLnk28.dwhIdHubLocationsPORTFEED, dataLnk28.dwhIdHubLocationsTRANS, dataLnk28.dwhIdHubLocationsTRANS2, dataLnk28.dwhIdHubLocationsTRANS3, satLnk29.dwhIdHubLocations as dwhIdHubLocationsTRANS4, dataLnk28.bookingNr, dataLnk28.accessCompanyId, dataLnk28.ovTradeNumber, dataLnk28.oceanTrade, dataLnk28.ovTradeName, dataLnk28.gvaTrade, dataLnk28.serviceCode, dataLnk28.polName, dataLnk28.polDate, dataLnk28.polCode, dataLnk28.dischTerminalDepotCode, dataLnk28.podName, dataLnk28.podDate, dataLnk28.podCode, dataLnk28.creationDate, dataLnk28.blDate, dataLnk28.manifestType, dataLnk28.feederDate, dataLnk28.quotationRefNr, dataLnk28.blNumber, dataLnk28.specialRefNr, dataLnk28.bookingStatus, dataLnk28.branch, dataLnk28.placeOfDelivery, dataLnk28.placeOfReceipt, dataLnk28.pldHaulageAtDestination, dataLnk28.pldHaulageAtOrigin, dataLnk28.pldSublocationCode, dataLnk28.plrSublocationCode, dataLnk28.pldZipCode, dataLnk28.plrZipCode, dataLnk28.inttraReferenceNr, dataLnk28.controlOffice, dataLnk28.controlCompany, dataLnk28.contractType, dataLnk28.directFlag, dataLnk28.payableAt, dataLnk28.pldDate, dataLnk28.plrDate, dataLnk28.createdBy, dataLnk28.payableAtIMS, dataLnk28.originalCrossBookNr, dataLnk28.europeanCargoStatus, dataLnk28.shipperReference, dataLnk28.depot, dataLnk28.terminal, dataLnk28.depotReference, dataLnk28.terminalReference, dataLnk28.bookingPosition, dataLnk28.importExportCode, dataLnk28.customerBookingParty, dataLnk28.blGroup, dataLnk28.srcSystemId, dataLnk28.status, dataLnk28.validFrom from sat.satLnkBookingLocations satLnk29 right join (select dataLnk27.dwhIdHubBooking, dataLnk27.dwhIdHubPPCCEE, dataLnk27.dwhIdHubCrossBookingType, dataLnk27.dwhIdHubImportExport, dataLnk27.dwhIdHubCustomersForwarder, dataLnk27.dwhIdHubCustomersShipper, dataLnk27.dwhIdHubCustomersConsignee, dataLnk27.dwhIdHubCustomersBookingParty, dataLnk27.dwhIdHubCustomersContractHolder, dataLnk27.dwhIdHubCustomersCareOfForwarder, dataLnk27.dwhIdHubCustomersNotify, dataLnk27.dwhIdHubCustomersNotify2, dataLnk27.dwhIdHubCustomersNotify3, dataLnk27.dwhIdHubCustomersInvComElsewhere, dataLnk27.dwhIdHubCustomersCareOfShipper, dataLnk27.dwhIdHubCustomersStatCustomer, dataLnk27.dwhIdHubCustomersFreightPayer, dataLnk27.dwhIdHubFileLiner, dataLnk27.dwhIdHubLocationsPOL, dataLnk27.dwhIdHubLocationsPOD, dataLnk27.dwhIdHubLocationsPLR, dataLnk27.dwhIdHubLocationsPAYABLEAT, dataLnk27.dwhIdHubLocationsPAYABLEATIMS, dataLnk27.dwhIdHubLocationsDRYPORT, dataLnk27.dwhIdHubLocationsPORTSAIL, dataLnk27.dwhIdHubLocationsPORTFEED, dataLnk27.dwhIdHubLocationsTRANS, dataLnk27.dwhIdHubLocationsTRANS2, satLnk28.dwhIdHubLocations as dwhIdHubLocationsTRANS3, dataLnk27.bookingNr, dataLnk27.accessCompanyId, dataLnk27.ovTradeNumber, dataLnk27.oceanTrade, dataLnk27.ovTradeName, dataLnk27.gvaTrade, dataLnk27.serviceCode, dataLnk27.polName, dataLnk27.polDate, dataLnk27.polCode, dataLnk27.dischTerminalDepotCode, dataLnk27.podName, dataLnk27.podDate, dataLnk27.podCode, dataLnk27.creationDate, dataLnk27.blDate, dataLnk27.manifestType, dataLnk27.feederDate, dataLnk27.quotationRefNr, dataLnk27.blNumber, dataLnk27.specialRefNr, dataLnk27.bookingStatus, dataLnk27.branch, dataLnk27.placeOfDelivery, dataLnk27.placeOfReceipt, dataLnk27.pldHaulageAtDestination, dataLnk27.pldHaulageAtOrigin, dataLnk27.pldSublocationCode, dataLnk27.plrSublocationCode, dataLnk27.pldZipCode, dataLnk27.plrZipCode, dataLnk27.inttraReferenceNr, dataLnk27.controlOffice, dataLnk27.controlCompany, dataLnk27.contractType, dataLnk27.directFlag, dataLnk27.payableAt, dataLnk27.pldDate, dataLnk27.plrDate, dataLnk27.createdBy, dataLnk27.payableAtIMS, dataLnk27.originalCrossBookNr, dataLnk27.europeanCargoStatus, dataLnk27.shipperReference, dataLnk27.depot, dataLnk27.terminal, dataLnk27.depotReference, dataLnk27.terminalReference, dataLnk27.bookingPosition, dataLnk27.importExportCode, dataLnk27.customerBookingParty, dataLnk27.blGroup, dataLnk27.srcSystemId, dataLnk27.status, dataLnk27.validFrom from sat.satLnkBookingLocations satLnk28 right join (select dataLnk26.dwhIdHubBooking, dataLnk26.dwhIdHubPPCCEE, dataLnk26.dwhIdHubCrossBookingType, dataLnk26.dwhIdHubImportExport, dataLnk26.dwhIdHubCustomersForwarder, dataLnk26.dwhIdHubCustomersShipper, dataLnk26.dwhIdHubCustomersConsignee, dataLnk26.dwhIdHubCustomersBookingParty, dataLnk26.dwhIdHubCustomersContractHolder, dataLnk26.dwhIdHubCustomersCareOfForwarder, dataLnk26.dwhIdHubCustomersNotify, dataLnk26.dwhIdHubCustomersNotify2, dataLnk26.dwhIdHubCustomersNotify3, dataLnk26.dwhIdHubCustomersInvComElsewhere, dataLnk26.dwhIdHubCustomersCareOfShipper, dataLnk26.dwhIdHubCustomersStatCustomer, dataLnk26.dwhIdHubCustomersFreightPayer, dataLnk26.dwhIdHubFileLiner, dataLnk26.dwhIdHubLocationsPOL, dataLnk26.dwhIdHubLocationsPOD, dataLnk26.dwhIdHubLocationsPLR, dataLnk26.dwhIdHubLocationsPAYABLEAT, dataLnk26.dwhIdHubLocationsPAYABLEATIMS, dataLnk26.dwhIdHubLocationsDRYPORT, dataLnk26.dwhIdHubLocationsPORTSAIL, dataLnk26.dwhIdHubLocationsPORTFEED, dataLnk26.dwhIdHubLocationsTRANS, satLnk27.dwhIdHubLocations as dwhIdHubLocationsTRANS2, dataLnk26.bookingNr, dataLnk26.accessCompanyId, dataLnk26.ovTradeNumber, dataLnk26.oceanTrade, dataLnk26.ovTradeName, dataLnk26.gvaTrade, dataLnk26.serviceCode, dataLnk26.polName, dataLnk26.polDate, dataLnk26.polCode, dataLnk26.dischTerminalDepotCode, dataLnk26.podName, dataLnk26.podDate, dataLnk26.podCode, dataLnk26.creationDate, dataLnk26.blDate, dataLnk26.manifestType, dataLnk26.feederDate, dataLnk26.quotationRefNr, dataLnk26.blNumber, dataLnk26.specialRefNr, dataLnk26.bookingStatus, dataLnk26.branch, dataLnk26.placeOfDelivery, dataLnk26.placeOfReceipt, dataLnk26.pldHaulageAtDestination, dataLnk26.pldHaulageAtOrigin, dataLnk26.pldSublocationCode, dataLnk26.plrSublocationCode, dataLnk26.pldZipCode, dataLnk26.plrZipCode, dataLnk26.inttraReferenceNr, dataLnk26.controlOffice, dataLnk26.controlCompany, dataLnk26.contractType, dataLnk26.directFlag, dataLnk26.payableAt, dataLnk26.pldDate, dataLnk26.plrDate, dataLnk26.createdBy, dataLnk26.payableAtIMS, dataLnk26.originalCrossBookNr, dataLnk26.europeanCargoStatus, dataLnk26.shipperReference, dataLnk26.depot, dataLnk26.terminal, dataLnk26.depotReference, dataLnk26.terminalReference, dataLnk26.bookingPosition, dataLnk26.importExportCode, dataLnk26.customerBookingParty, dataLnk26.blGroup, dataLnk26.srcSystemId, dataLnk26.status, dataLnk26.validFrom from sat.satLnkBookingLocations satLnk27 right join (select dataLnk25.dwhIdHubBooking, dataLnk25.dwhIdHubPPCCEE, dataLnk25.dwhIdHubCrossBookingType, dataLnk25.dwhIdHubImportExport, dataLnk25.dwhIdHubCustomersForwarder, dataLnk25.dwhIdHubCustomersShipper, dataLnk25.dwhIdHubCustomersConsignee, dataLnk25.dwhIdHubCustomersBookingParty, dataLnk25.dwhIdHubCustomersContractHolder, dataLnk25.dwhIdHubCustomersCareOfForwarder, dataLnk25.dwhIdHubCustomersNotify, dataLnk25.dwhIdHubCustomersNotify2, dataLnk25.dwhIdHubCustomersNotify3, dataLnk25.dwhIdHubCustomersInvComElsewhere, dataLnk25.dwhIdHubCustomersCareOfShipper, dataLnk25.dwhIdHubCustomersStatCustomer, dataLnk25.dwhIdHubCustomersFreightPayer, dataLnk25.dwhIdHubFileLiner, dataLnk25.dwhIdHubLocationsPOL, dataLnk25.dwhIdHubLocationsPOD, dataLnk25.dwhIdHubLocationsPLR, dataLnk25.dwhIdHubLocationsPAYABLEAT, dataLnk25.dwhIdHubLocationsPAYABLEATIMS, dataLnk25.dwhIdHubLocationsDRYPORT, dataLnk25.dwhIdHubLocationsPORTSAIL, dataLnk25.dwhIdHubLocationsPORTFEED, satLnk26.dwhIdHubLocations as dwhIdHubLocationsTRANS, dataLnk25.bookingNr, dataLnk25.accessCompanyId, dataLnk25.ovTradeNumber, dataLnk25.oceanTrade, dataLnk25.ovTradeName, dataLnk25.gvaTrade, dataLnk25.serviceCode, dataLnk25.polName, dataLnk25.polDate, dataLnk25.polCode, dataLnk25.dischTerminalDepotCode, dataLnk25.podName, dataLnk25.podDate, dataLnk25.podCode, dataLnk25.creationDate, dataLnk25.blDate, dataLnk25.manifestType, dataLnk25.feederDate, dataLnk25.quotationRefNr, dataLnk25.blNumber, dataLnk25.specialRefNr, dataLnk25.bookingStatus, dataLnk25.branch, dataLnk25.placeOfDelivery, dataLnk25.placeOfReceipt, dataLnk25.pldHaulageAtDestination, dataLnk25.pldHaulageAtOrigin, dataLnk25.pldSublocationCode, dataLnk25.plrSublocationCode, dataLnk25.pldZipCode, dataLnk25.plrZipCode, dataLnk25.inttraReferenceNr, dataLnk25.controlOffice, dataLnk25.controlCompany, dataLnk25.contractType, dataLnk25.directFlag, dataLnk25.payableAt, dataLnk25.pldDate, dataLnk25.plrDate, dataLnk25.createdBy, dataLnk25.payableAtIMS, dataLnk25.originalCrossBookNr, dataLnk25.europeanCargoStatus, dataLnk25.shipperReference, dataLnk25.depot, dataLnk25.terminal, dataLnk25.depotReference, dataLnk25.terminalReference, dataLnk25.bookingPosition, dataLnk25.importExportCode, dataLnk25.customerBookingParty, dataLnk25.blGroup, dataLnk25.srcSystemId, dataLnk25.status, dataLnk25.validFrom from sat.satLnkBookingLocations satLnk26 right join (select dataLnk24.dwhIdHubBooking, dataLnk24.dwhIdHubPPCCEE, dataLnk24.dwhIdHubCrossBookingType, dataLnk24.dwhIdHubImportExport, dataLnk24.dwhIdHubCustomersForwarder, dataLnk24.dwhIdHubCustomersShipper, dataLnk24.dwhIdHubCustomersConsignee, dataLnk24.dwhIdHubCustomersBookingParty, dataLnk24.dwhIdHubCustomersContractHolder, dataLnk24.dwhIdHubCustomersCareOfForwarder, dataLnk24.dwhIdHubCustomersNotify, dataLnk24.dwhIdHubCustomersNotify2, dataLnk24.dwhIdHubCustomersNotify3, dataLnk24.dwhIdHubCustomersInvComElsewhere, dataLnk24.dwhIdHubCustomersCareOfShipper, dataLnk24.dwhIdHubCustomersStatCustomer, dataLnk24.dwhIdHubCustomersFreightPayer, dataLnk24.dwhIdHubFileLiner, dataLnk24.dwhIdHubLocationsPOL, dataLnk24.dwhIdHubLocationsPOD, dataLnk24.dwhIdHubLocationsPLR, dataLnk24.dwhIdHubLocationsPAYABLEAT,  dataLnk24.dwhIdHubLocationsPAYABLEATIMS, dataLnk24.dwhIdHubLocationsDRYPORT, dataLnk24.dwhIdHubLocationsPORTSAIL,  satLnk25.dwhIdHubLocations as dwhIdHubLocationsPORTFEED, dataLnk24.bookingNr, dataLnk24.accessCompanyId, dataLnk24.ovTradeNumber, dataLnk24.oceanTrade, dataLnk24.ovTradeName, dataLnk24.gvaTrade, dataLnk24.serviceCode, dataLnk24.polName, dataLnk24.polDate, dataLnk24.polCode, dataLnk24.dischTerminalDepotCode, dataLnk24.podName, dataLnk24.podDate, dataLnk24.podCode, dataLnk24.creationDate, dataLnk24.blDate, dataLnk24.manifestType, dataLnk24.feederDate, dataLnk24.quotationRefNr, dataLnk24.blNumber, dataLnk24.specialRefNr, dataLnk24.bookingStatus, dataLnk24.branch, dataLnk24.placeOfDelivery, dataLnk24.placeOfReceipt, dataLnk24.pldHaulageAtDestination, dataLnk24.pldHaulageAtOrigin, dataLnk24.pldSublocationCode, dataLnk24.plrSublocationCode, dataLnk24.pldZipCode, dataLnk24.plrZipCode, dataLnk24.inttraReferenceNr, dataLnk24.controlOffice, dataLnk24.controlCompany, dataLnk24.contractType, dataLnk24.directFlag, dataLnk24.payableAt, dataLnk24.pldDate, dataLnk24.plrDate, dataLnk24.createdBy, dataLnk24.payableAtIMS, dataLnk24.originalCrossBookNr, dataLnk24.europeanCargoStatus, dataLnk24.shipperReference, dataLnk24.depot, dataLnk24.terminal, dataLnk24.depotReference, dataLnk24.terminalReference, dataLnk24.bookingPosition, dataLnk24.importExportCode, dataLnk24.customerBookingParty, dataLnk24.blGroup, dataLnk24.srcSystemId, dataLnk24.status, dataLnk24.validFrom from sat.satLnkBookingLocations satLnk25 right join (select dataLnk23.dwhIdHubBooking, dataLnk23.dwhIdHubPPCCEE, dataLnk23.dwhIdHubCrossBookingType, dataLnk23.dwhIdHubImportExport, dataLnk23.dwhIdHubCustomersForwarder, dataLnk23.dwhIdHubCustomersShipper, dataLnk23.dwhIdHubCustomersConsignee, dataLnk23.dwhIdHubCustomersBookingParty, dataLnk23.dwhIdHubCustomersContractHolder, dataLnk23.dwhIdHubCustomersCareOfForwarder, dataLnk23.dwhIdHubCustomersNotify, dataLnk23.dwhIdHubCustomersNotify2, dataLnk23.dwhIdHubCustomersNotify3, dataLnk23.dwhIdHubCustomersInvComElsewhere, dataLnk23.dwhIdHubCustomersCareOfShipper, dataLnk23.dwhIdHubCustomersStatCustomer, dataLnk23.dwhIdHubCustomersFreightPayer, dataLnk23.dwhIdHubFileLiner, dataLnk23.dwhIdHubLocationsPOL, dataLnk23.dwhIdHubLocationsPOD, dataLnk23.dwhIdHubLocationsPLR, dataLnk23.dwhIdHubLocationsPAYABLEAT, dataLnk23.dwhIdHubLocationsPAYABLEATIMS, dataLnk23.dwhIdHubLocationsDRYPORT, satLnk24.dwhIdHubLocations as dwhIdHubLocationsPORTSAIL, dataLnk23.bookingNr, dataLnk23.accessCompanyId, dataLnk23.ovTradeNumber, dataLnk23.oceanTrade, dataLnk23.ovTradeName, dataLnk23.gvaTrade, dataLnk23.serviceCode, dataLnk23.polName, dataLnk23.polDate, dataLnk23.polCode, dataLnk23.dischTerminalDepotCode, dataLnk23.podName, dataLnk23.podDate, dataLnk23.podCode, dataLnk23.creationDate, dataLnk23.blDate, dataLnk23.manifestType, dataLnk23.feederDate, dataLnk23.quotationRefNr, dataLnk23.blNumber, dataLnk23.specialRefNr, dataLnk23.bookingStatus, dataLnk23.branch, dataLnk23.placeOfDelivery, dataLnk23.placeOfReceipt, dataLnk23.pldHaulageAtDestination, dataLnk23.pldHaulageAtOrigin, dataLnk23.pldSublocationCode, dataLnk23.plrSublocationCode, dataLnk23.pldZipCode, dataLnk23.plrZipCode, dataLnk23.inttraReferenceNr, dataLnk23.controlOffice, dataLnk23.controlCompany, dataLnk23.contractType, dataLnk23.directFlag, dataLnk23.payableAt, dataLnk23.pldDate, dataLnk23.plrDate, dataLnk23.createdBy, dataLnk23.payableAtIMS, dataLnk23.originalCrossBookNr, dataLnk23.europeanCargoStatus, dataLnk23.shipperReference, dataLnk23.depot, dataLnk23.terminal, dataLnk23.depotReference, dataLnk23.terminalReference, dataLnk23.bookingPosition, dataLnk23.importExportCode, dataLnk23.customerBookingParty, dataLnk23.blGroup, dataLnk23.srcSystemId, dataLnk23.status, dataLnk23.validFrom from sat.satLnkBookingLocations satLnk24 right join (select dataLnk22.dwhIdHubBooking, dataLnk22.dwhIdHubPPCCEE, dataLnk22.dwhIdHubCrossBookingType, dataLnk22.dwhIdHubImportExport, dataLnk22.dwhIdHubCustomersForwarder, dataLnk22.dwhIdHubCustomersShipper, dataLnk22.dwhIdHubCustomersConsignee, dataLnk22.dwhIdHubCustomersBookingParty, dataLnk22.dwhIdHubCustomersContractHolder, dataLnk22.dwhIdHubCustomersCareOfForwarder, dataLnk22.dwhIdHubCustomersNotify, dataLnk22.dwhIdHubCustomersNotify2, dataLnk22.dwhIdHubCustomersNotify3, dataLnk22.dwhIdHubCustomersInvComElsewhere, dataLnk22.dwhIdHubCustomersCareOfShipper, dataLnk22.dwhIdHubCustomersStatCustomer, dataLnk22.dwhIdHubCustomersFreightPayer, dataLnk22.dwhIdHubFileLiner, dataLnk22.dwhIdHubLocationsPOL, dataLnk22.dwhIdHubLocationsPOD, dataLnk22.dwhIdHubLocationsPLR, dataLnk22.dwhIdHubLocationsPAYABLEAT, dataLnk22.dwhIdHubLocationsPAYABLEATIMS, satLnk23.dwhIdHubLocations as dwhIdHubLocationsDRYPORT,  dataLnk22.bookingNr, dataLnk22.accessCompanyId, dataLnk22.ovTradeNumber, dataLnk22.oceanTrade, dataLnk22.ovTradeName, dataLnk22.gvaTrade, dataLnk22.serviceCode, dataLnk22.polName, dataLnk22.polDate, dataLnk22.polCode, dataLnk22.dischTerminalDepotCode, dataLnk22.podName, dataLnk22.podDate, dataLnk22.podCode, dataLnk22.creationDate, dataLnk22.blDate, dataLnk22.manifestType, dataLnk22.feederDate, dataLnk22.quotationRefNr, dataLnk22.blNumber, dataLnk22.specialRefNr, dataLnk22.bookingStatus, dataLnk22.branch, dataLnk22.placeOfDelivery, dataLnk22.placeOfReceipt, dataLnk22.pldHaulageAtDestination, dataLnk22.pldHaulageAtOrigin, dataLnk22.pldSublocationCode, dataLnk22.plrSublocationCode, dataLnk22.pldZipCode, dataLnk22.plrZipCode, dataLnk22.inttraReferenceNr, dataLnk22.controlOffice, dataLnk22.controlCompany, dataLnk22.contractType, dataLnk22.directFlag, dataLnk22.payableAt, dataLnk22.pldDate, dataLnk22.plrDate, dataLnk22.createdBy, dataLnk22.payableAtIMS, dataLnk22.originalCrossBookNr, dataLnk22.europeanCargoStatus, dataLnk22.shipperReference, dataLnk22.depot, dataLnk22.terminal, dataLnk22.depotReference, dataLnk22.terminalReference, dataLnk22.bookingPosition, dataLnk22.importExportCode, dataLnk22.customerBookingParty, dataLnk22.blGroup, dataLnk22.srcSystemId, dataLnk22.status, dataLnk22.validFrom from sat.satLnkBookingLocations satLnk23 right join (select dataLnk21.dwhIdHubBooking, dataLnk21.dwhIdHubPPCCEE, dataLnk21.dwhIdHubCrossBookingType, dataLnk21.dwhIdHubImportExport, dataLnk21.dwhIdHubCustomersForwarder, dataLnk21.dwhIdHubCustomersShipper, dataLnk21.dwhIdHubCustomersConsignee, dataLnk21.dwhIdHubCustomersBookingParty, dataLnk21.dwhIdHubCustomersContractHolder, dataLnk21.dwhIdHubCustomersCareOfForwarder, dataLnk21.dwhIdHubCustomersNotify, dataLnk21.dwhIdHubCustomersNotify2, dataLnk21.dwhIdHubCustomersNotify3, dataLnk21.dwhIdHubCustomersInvComElsewhere, dataLnk21.dwhIdHubCustomersCareOfShipper, dataLnk21.dwhIdHubCustomersStatCustomer, dataLnk21.dwhIdHubCustomersFreightPayer, dataLnk21.dwhIdHubFileLiner, dataLnk21.dwhIdHubLocationsPOL, dataLnk21.dwhIdHubLocationsPOD, dataLnk21.dwhIdHubLocationsPLR, dataLnk21.dwhIdHubLocationsPAYABLEAT, satLnk22.dwhIdHubLocations as dwhIdHubLocationsPAYABLEATIMS, dataLnk21.bookingNr, dataLnk21.accessCompanyId, dataLnk21.ovTradeNumber, dataLnk21.oceanTrade, dataLnk21.ovTradeName, dataLnk21.gvaTrade, dataLnk21.serviceCode, dataLnk21.polName, dataLnk21.polDate, dataLnk21.polCode, dataLnk21.dischTerminalDepotCode, dataLnk21.podName, dataLnk21.podDate, dataLnk21.podCode, dataLnk21.creationDate, dataLnk21.blDate, dataLnk21.manifestType, dataLnk21.feederDate, dataLnk21.quotationRefNr, dataLnk21.blNumber, dataLnk21.specialRefNr, dataLnk21.bookingStatus, dataLnk21.branch, dataLnk21.placeOfDelivery, dataLnk21.placeOfReceipt, dataLnk21.pldHaulageAtDestination, dataLnk21.pldHaulageAtOrigin, dataLnk21.pldSublocationCode, dataLnk21.plrSublocationCode, dataLnk21.pldZipCode, dataLnk21.plrZipCode, dataLnk21.inttraReferenceNr, dataLnk21.controlOffice, dataLnk21.controlCompany, dataLnk21.contractType, dataLnk21.directFlag, dataLnk21.payableAt, dataLnk21.pldDate, dataLnk21.plrDate, dataLnk21.createdBy, dataLnk21.payableAtIMS, dataLnk21.originalCrossBookNr, dataLnk21.europeanCargoStatus, dataLnk21.shipperReference, dataLnk21.depot, dataLnk21.terminal, dataLnk21.depotReference, dataLnk21.terminalReference, dataLnk21.bookingPosition, dataLnk21.importExportCode, dataLnk21.customerBookingParty, dataLnk21.blGroup, dataLnk21.srcSystemId, dataLnk21.status, dataLnk21.validFrom from sat.satLnkBookingLocations satLnk22 right join (select dataLnk20.dwhIdHubBooking, dataLnk20.dwhIdHubPPCCEE, dataLnk20.dwhIdHubCrossBookingType, dataLnk20.dwhIdHubImportExport, dataLnk20.dwhIdHubCustomersForwarder, dataLnk20.dwhIdHubCustomersShipper, dataLnk20.dwhIdHubCustomersConsignee, dataLnk20.dwhIdHubCustomersBookingParty, dataLnk20.dwhIdHubCustomersContractHolder, dataLnk20.dwhIdHubCustomersCareOfForwarder, dataLnk20.dwhIdHubCustomersNotify, dataLnk20.dwhIdHubCustomersNotify2, dataLnk20.dwhIdHubCustomersNotify3, dataLnk20.dwhIdHubCustomersInvComElsewhere, dataLnk20.dwhIdHubCustomersCareOfShipper, dataLnk20.dwhIdHubCustomersStatCustomer, dataLnk20.dwhIdHubCustomersFreightPayer, dataLnk20.dwhIdHubFileLiner, dataLnk20.dwhIdHubLocationsPOL, dataLnk20.dwhIdHubLocationsPOD, dataLnk20.dwhIdHubLocationsPLR, satLnk21.dwhIdHubLocations as dwhIdHubLocationsPAYABLEAT, dataLnk20.bookingNr, dataLnk20.accessCompanyId, dataLnk20.ovTradeNumber, dataLnk20.oceanTrade, dataLnk20.ovTradeName, dataLnk20.gvaTrade, dataLnk20.serviceCode, dataLnk20.polName, dataLnk20.polDate, dataLnk20.polCode, dataLnk20.dischTerminalDepotCode, dataLnk20.podName, dataLnk20.podDate, dataLnk20.podCode, dataLnk20.creationDate, dataLnk20.blDate, dataLnk20.manifestType, dataLnk20.feederDate, dataLnk20.quotationRefNr, dataLnk20.blNumber, dataLnk20.specialRefNr, dataLnk20.bookingStatus, dataLnk20.branch, dataLnk20.placeOfDelivery, dataLnk20.placeOfReceipt, dataLnk20.pldHaulageAtDestination, dataLnk20.pldHaulageAtOrigin, dataLnk20.pldSublocationCode, dataLnk20.plrSublocationCode, dataLnk20.pldZipCode, dataLnk20.plrZipCode, dataLnk20.inttraReferenceNr, dataLnk20.controlOffice, dataLnk20.controlCompany, dataLnk20.contractType, dataLnk20.directFlag, dataLnk20.payableAt, dataLnk20.pldDate, dataLnk20.plrDate, dataLnk20.createdBy, dataLnk20.payableAtIMS, dataLnk20.originalCrossBookNr, dataLnk20.europeanCargoStatus, dataLnk20.shipperReference, dataLnk20.depot, dataLnk20.terminal, dataLnk20.depotReference, dataLnk20.terminalReference, dataLnk20.bookingPosition, dataLnk20.importExportCode, dataLnk20.customerBookingParty, dataLnk20.blGroup, dataLnk20.srcSystemId, dataLnk20.status, dataLnk20.validFrom from sat.satLnkBookingLocations satLnk21 right join (select dataLnk19.dwhIdHubBooking, dataLnk19.dwhIdHubPPCCEE, dataLnk19.dwhIdHubCrossBookingType, dataLnk19.dwhIdHubImportExport, dataLnk19.dwhIdHubCustomersForwarder, dataLnk19.dwhIdHubCustomersShipper, dataLnk19.dwhIdHubCustomersConsignee, dataLnk19.dwhIdHubCustomersBookingParty, dataLnk19.dwhIdHubCustomersContractHolder, dataLnk19.dwhIdHubCustomersCareOfForwarder, dataLnk19.dwhIdHubCustomersNotify, dataLnk19.dwhIdHubCustomersNotify2, dataLnk19.dwhIdHubCustomersNotify3, dataLnk19.dwhIdHubCustomersInvComElsewhere, dataLnk19.dwhIdHubCustomersCareOfShipper, dataLnk19.dwhIdHubCustomersStatCustomer, dataLnk19.dwhIdHubCustomersFreightPayer, dataLnk19.dwhIdHubFileLiner, dataLnk19.dwhIdHubLocationsPOL, dataLnk19.dwhIdHubLocationsPOD, satLnk20.dwhIdHubLocations as dwhIdHubLocationsPLR, dataLnk19.bookingNr, dataLnk19.accessCompanyId, dataLnk19.ovTradeNumber, dataLnk19.oceanTrade, dataLnk19.ovTradeName, dataLnk19.gvaTrade, dataLnk19.serviceCode, dataLnk19.polName, dataLnk19.polDate, dataLnk19.polCode, dataLnk19.dischTerminalDepotCode, dataLnk19.podName, dataLnk19.podDate, dataLnk19.podCode, dataLnk19.creationDate, dataLnk19.blDate, dataLnk19.manifestType, dataLnk19.feederDate, dataLnk19.quotationRefNr, dataLnk19.blNumber, dataLnk19.specialRefNr, dataLnk19.bookingStatus, dataLnk19.branch, dataLnk19.placeOfDelivery, dataLnk19.placeOfReceipt, dataLnk19.pldHaulageAtDestination, dataLnk19.pldHaulageAtOrigin, dataLnk19.pldSublocationCode, dataLnk19.plrSublocationCode, dataLnk19.pldZipCode, dataLnk19.plrZipCode, dataLnk19.inttraReferenceNr, dataLnk19.controlOffice, dataLnk19.controlCompany, dataLnk19.contractType, dataLnk19.directFlag, dataLnk19.payableAt, dataLnk19.pldDate, dataLnk19.plrDate, dataLnk19.createdBy, dataLnk19.payableAtIMS, dataLnk19.originalCrossBookNr, dataLnk19.europeanCargoStatus, dataLnk19.shipperReference, dataLnk19.depot, dataLnk19.terminal, dataLnk19.depotReference, dataLnk19.terminalReference, dataLnk19.bookingPosition, dataLnk19.importExportCode, dataLnk19.customerBookingParty, dataLnk19.blGroup, dataLnk19.srcSystemId, dataLnk19.status, dataLnk19.validFrom from sat.satLnkBookingLocations satLnk20 right join (select dataLnk18.dwhIdHubBooking, dataLnk18.dwhIdHubPPCCEE, dataLnk18.dwhIdHubCrossBookingType, dataLnk18.dwhIdHubImportExport, dataLnk18.dwhIdHubCustomersForwarder, dataLnk18.dwhIdHubCustomersShipper, dataLnk18.dwhIdHubCustomersConsignee, dataLnk18.dwhIdHubCustomersBookingParty, dataLnk18.dwhIdHubCustomersContractHolder, dataLnk18.dwhIdHubCustomersCareOfForwarder, dataLnk18.dwhIdHubCustomersNotify, dataLnk18.dwhIdHubCustomersNotify2, dataLnk18.dwhIdHubCustomersNotify3, dataLnk18.dwhIdHubCustomersInvComElsewhere, dataLnk18.dwhIdHubCustomersCareOfShipper, dataLnk18.dwhIdHubCustomersStatCustomer, dataLnk18.dwhIdHubCustomersFreightPayer, dataLnk18.dwhIdHubFileLiner, dataLnk18.dwhIdHubLocationsPOL, satLnk19.dwhIdHubLocations as dwhIdHubLocationsPOD, dataLnk18.bookingNr, dataLnk18.accessCompanyId, dataLnk18.ovTradeNumber, dataLnk18.oceanTrade, dataLnk18.ovTradeName, dataLnk18.gvaTrade, dataLnk18.serviceCode, dataLnk18.polName, dataLnk18.polDate, dataLnk18.polCode, dataLnk18.dischTerminalDepotCode, dataLnk18.podName, dataLnk18.podDate, dataLnk18.podCode, dataLnk18.creationDate, dataLnk18.blDate, dataLnk18.manifestType, dataLnk18.feederDate, dataLnk18.quotationRefNr, dataLnk18.blNumber, dataLnk18.specialRefNr, dataLnk18.bookingStatus, dataLnk18.branch, dataLnk18.placeOfDelivery, dataLnk18.placeOfReceipt, dataLnk18.pldHaulageAtDestination, dataLnk18.pldHaulageAtOrigin, dataLnk18.pldSublocationCode, dataLnk18.plrSublocationCode, dataLnk18.pldZipCode, dataLnk18.plrZipCode, dataLnk18.inttraReferenceNr, dataLnk18.controlOffice, dataLnk18.controlCompany, dataLnk18.contractType, dataLnk18.directFlag, dataLnk18.payableAt, dataLnk18.pldDate, dataLnk18.plrDate, dataLnk18.createdBy, dataLnk18.payableAtIMS, dataLnk18.originalCrossBookNr, dataLnk18.europeanCargoStatus, dataLnk18.shipperReference, dataLnk18.depot, dataLnk18.terminal, dataLnk18.depotReference, dataLnk18.terminalReference, dataLnk18.bookingPosition, dataLnk18.importExportCode, dataLnk18.customerBookingParty, dataLnk18.blGroup, dataLnk18.srcSystemId, dataLnk18.status, dataLnk18.validFrom from sat.satLnkBookingLocations satLnk19 right join (select dataLnk17.dwhIdHubBooking, dataLnk17.dwhIdHubPPCCEE, dataLnk17.dwhIdHubCrossBookingType, dataLnk17.dwhIdHubImportExport, dataLnk17.dwhIdHubCustomersForwarder, dataLnk17.dwhIdHubCustomersShipper, dataLnk17.dwhIdHubCustomersConsignee, dataLnk17.dwhIdHubCustomersBookingParty, dataLnk17.dwhIdHubCustomersContractHolder, dataLnk17.dwhIdHubCustomersCareOfForwarder, dataLnk17.dwhIdHubCustomersNotify, dataLnk17.dwhIdHubCustomersNotify2, dataLnk17.dwhIdHubCustomersNotify3, dataLnk17.dwhIdHubCustomersInvComElsewhere, dataLnk17.dwhIdHubCustomersCareOfShipper, dataLnk17.dwhIdHubCustomersStatCustomer, dataLnk17.dwhIdHubCustomersFreightPayer, dataLnk17.dwhIdHubFileLiner, satLnk18.dwhIdHubLocations as dwhIdHubLocationsPOL, dataLnk17.bookingNr, dataLnk17.accessCompanyId, dataLnk17.ovTradeNumber, dataLnk17.oceanTrade, dataLnk17.ovTradeName, dataLnk17.gvaTrade, dataLnk17.serviceCode, dataLnk17.polName, dataLnk17.polDate, dataLnk17.polCode, dataLnk17.dischTerminalDepotCode, dataLnk17.podName, dataLnk17.podDate, dataLnk17.podCode, dataLnk17.creationDate, dataLnk17.blDate, dataLnk17.manifestType, dataLnk17.feederDate, dataLnk17.quotationRefNr, dataLnk17.blNumber, dataLnk17.specialRefNr, dataLnk17.bookingStatus, dataLnk17.branch, dataLnk17.placeOfDelivery, dataLnk17.placeOfReceipt, dataLnk17.pldHaulageAtDestination, dataLnk17.pldHaulageAtOrigin, dataLnk17.pldSublocationCode, dataLnk17.plrSublocationCode, dataLnk17.pldZipCode, dataLnk17.plrZipCode, dataLnk17.inttraReferenceNr, dataLnk17.controlOffice, dataLnk17.controlCompany, dataLnk17.contractType, dataLnk17.directFlag, dataLnk17.payableAt, dataLnk17.pldDate, dataLnk17.plrDate, dataLnk17.createdBy, dataLnk17.payableAtIMS, dataLnk17.originalCrossBookNr, dataLnk17.europeanCargoStatus, dataLnk17.shipperReference, dataLnk17.depot, dataLnk17.terminal, dataLnk17.depotReference, dataLnk17.terminalReference, dataLnk17.bookingPosition, dataLnk17.importExportCode, dataLnk17.customerBookingParty, dataLnk17.blGroup, dataLnk17.srcSystemId, dataLnk17.status, dataLnk17.validFrom from sat.satLnkBookingLocations satLnk18 right join (select dataLnk16.dwhIdHubBooking, dataLnk16.dwhIdHubPPCCEE, dataLnk16.dwhIdHubCrossBookingType, dataLnk16.dwhIdHubImportExport, dataLnk16.dwhIdHubCustomersForwarder, dataLnk16.dwhIdHubCustomersShipper, dataLnk16.dwhIdHubCustomersConsignee, dataLnk16.dwhIdHubCustomersBookingParty, dataLnk16.dwhIdHubCustomersContractHolder, dataLnk16.dwhIdHubCustomersCareOfForwarder, dataLnk16.dwhIdHubCustomersNotify, dataLnk16.dwhIdHubCustomersNotify2, dataLnk16.dwhIdHubCustomersNotify3, dataLnk16.dwhIdHubCustomersInvComElsewhere, dataLnk16.dwhIdHubCustomersCareOfShipper, dataLnk16.dwhIdHubCustomersStatCustomer, dataLnk16.dwhIdHubCustomersFreightPayer, satLnk17.dwhIdHubFileLiner, dataLnk16.bookingNr, dataLnk16.accessCompanyId, dataLnk16.ovTradeNumber, dataLnk16.oceanTrade, dataLnk16.ovTradeName, dataLnk16.gvaTrade, dataLnk16.serviceCode, dataLnk16.polName, dataLnk16.polDate, dataLnk16.polCode, dataLnk16.dischTerminalDepotCode, dataLnk16.podName, dataLnk16.podDate, dataLnk16.podCode, dataLnk16.creationDate, dataLnk16.blDate, dataLnk16.manifestType, dataLnk16.feederDate, dataLnk16.quotationRefNr, dataLnk16.blNumber, dataLnk16.specialRefNr, dataLnk16.bookingStatus, dataLnk16.branch, dataLnk16.placeOfDelivery, dataLnk16.placeOfReceipt, dataLnk16.pldHaulageAtDestination, dataLnk16.pldHaulageAtOrigin, dataLnk16.pldSublocationCode, dataLnk16.plrSublocationCode, dataLnk16.pldZipCode, dataLnk16.plrZipCode, dataLnk16.inttraReferenceNr, dataLnk16.controlOffice, dataLnk16.controlCompany, dataLnk16.contractType, dataLnk16.directFlag, dataLnk16.payableAt, dataLnk16.pldDate, dataLnk16.plrDate, dataLnk16.createdBy, dataLnk16.payableAtIMS, dataLnk16.originalCrossBookNr, dataLnk16.europeanCargoStatus, dataLnk16.shipperReference, dataLnk16.depot, dataLnk16.terminal, dataLnk16.depotReference, dataLnk16.terminalReference, dataLnk16.bookingPosition, dataLnk16.importExportCode, dataLnk16.customerBookingParty, dataLnk16.blGroup, dataLnk16.srcSystemId, dataLnk16.status, dataLnk16.validFrom from sat.satLnkBookingFileLiner satLnk17 right join (select dataLnk15.dwhIdHubBooking, dataLnk15.dwhIdHubPPCCEE, dataLnk15.dwhIdHubCrossBookingType, dataLnk15.dwhIdHubImportExport, dataLnk15.dwhIdHubCustomersForwarder, dataLnk15.dwhIdHubCustomersShipper, dataLnk15.dwhIdHubCustomersConsignee, dataLnk15.dwhIdHubCustomersBookingParty, dataLnk15.dwhIdHubCustomersContractHolder, dataLnk15.dwhIdHubCustomersCareOfForwarder, dataLnk15.dwhIdHubCustomersNotify, dataLnk15.dwhIdHubCustomersNotify2, dataLnk15.dwhIdHubCustomersNotify3, dataLnk15.dwhIdHubCustomersInvComElsewhere, dataLnk15.dwhIdHubCustomersCareOfShipper, dataLnk15.dwhIdHubCustomersStatCustomer, satLnk16.dwhIdHubCustomers as dwhIdHubCustomersFreightPayer, dataLnk15.bookingNr, dataLnk15.accessCompanyId, dataLnk15.ovTradeNumber, dataLnk15.oceanTrade, dataLnk15.ovTradeName, dataLnk15.gvaTrade,  dataLnk15.serviceCode, dataLnk15.polName, dataLnk15.polDate, dataLnk15.polCode, dataLnk15.dischTerminalDepotCode, dataLnk15.podName, dataLnk15.podDate,   dataLnk15.podCode, dataLnk15.creationDate, dataLnk15.blDate, dataLnk15.manifestType, dataLnk15.feederDate, dataLnk15.quotationRefNr, dataLnk15.blNumber,  dataLnk15.specialRefNr, dataLnk15.bookingStatus, dataLnk15.branch, dataLnk15.placeOfDelivery, dataLnk15.placeOfReceipt, dataLnk15.pldHaulageAtDestination, dataLnk15.pldHaulageAtOrigin, dataLnk15.pldSublocationCode, dataLnk15.plrSublocationCode, dataLnk15.pldZipCode, dataLnk15.plrZipCode, dataLnk15.inttraReferenceNr, dataLnk15.controlOffice, dataLnk15.controlCompany, dataLnk15.contractType, dataLnk15.directFlag, dataLnk15.payableAt, dataLnk15.pldDate, dataLnk15.plrDate, dataLnk15.createdBy, dataLnk15.payableAtIMS, dataLnk15.originalCrossBookNr, dataLnk15.europeanCargoStatus, dataLnk15.shipperReference, dataLnk15.depot, dataLnk15.terminal, dataLnk15.depotReference, dataLnk15.terminalReference, dataLnk15.bookingPosition, dataLnk15.importExportCode, dataLnk15.customerBookingParty, dataLnk15.blGroup, dataLnk15.srcSystemId, dataLnk15.status, dataLnk15.validFrom from sat.satLnkBookingCustomers satLnk16 right join (select dataLnk14.dwhIdHubBooking, dataLnk14.dwhIdHubPPCCEE, dataLnk14.dwhIdHubCrossBookingType, dataLnk14.dwhIdHubImportExport, dataLnk14.dwhIdHubCustomersForwarder, dataLnk14.dwhIdHubCustomersShipper, dataLnk14.dwhIdHubCustomersConsignee, dataLnk14.dwhIdHubCustomersBookingParty, dataLnk14.dwhIdHubCustomersContractHolder, dataLnk14.dwhIdHubCustomersCareOfForwarder, dataLnk14.dwhIdHubCustomersNotify, dataLnk14.dwhIdHubCustomersNotify2, dataLnk14.dwhIdHubCustomersNotify3, dataLnk14.dwhIdHubCustomersInvComElsewhere, dataLnk14.dwhIdHubCustomersCareOfShipper, satLnk15.dwhIdHubCustomers as dwhIdHubCustomersStatCustomer, dataLnk14.bookingNr, dataLnk14.accessCompanyId, dataLnk14.ovTradeNumber, dataLnk14.oceanTrade, dataLnk14.ovTradeName, dataLnk14.gvaTrade, dataLnk14.serviceCode, dataLnk14.polName, dataLnk14.polDate, dataLnk14.polCode, dataLnk14.dischTerminalDepotCode, dataLnk14.podName, dataLnk14.podDate, dataLnk14.podCode, dataLnk14.creationDate, dataLnk14.blDate, dataLnk14.manifestType, dataLnk14.feederDate, dataLnk14.quotationRefNr, dataLnk14.blNumber, dataLnk14.specialRefNr, dataLnk14.bookingStatus, dataLnk14.branch, dataLnk14.placeOfDelivery, dataLnk14.placeOfReceipt, dataLnk14.pldHaulageAtDestination, dataLnk14.pldHaulageAtOrigin, dataLnk14.pldSublocationCode, dataLnk14.plrSublocationCode, dataLnk14.pldZipCode, dataLnk14.plrZipCode, dataLnk14.inttraReferenceNr, dataLnk14.controlOffice, dataLnk14.controlCompany, dataLnk14.contractType, dataLnk14.directFlag, dataLnk14.payableAt, dataLnk14.pldDate, dataLnk14.plrDate, dataLnk14.createdBy, dataLnk14.payableAtIMS, dataLnk14.originalCrossBookNr, dataLnk14.europeanCargoStatus, dataLnk14.shipperReference, dataLnk14.depot, dataLnk14.terminal, dataLnk14.depotReference, dataLnk14.terminalReference, dataLnk14.bookingPosition, dataLnk14.importExportCode, dataLnk14.customerBookingParty, dataLnk14.blGroup, dataLnk14.srcSystemId, dataLnk14.status, dataLnk14.validFrom from sat.satLnkBookingCustomers satLnk15 right join (select dataLnk13.dwhIdHubBooking, dataLnk13.dwhIdHubPPCCEE, dataLnk13.dwhIdHubCrossBookingType, dataLnk13.dwhIdHubImportExport, dataLnk13.dwhIdHubCustomersForwarder, dataLnk13.dwhIdHubCustomersShipper, dataLnk13.dwhIdHubCustomersConsignee, dataLnk13.dwhIdHubCustomersBookingParty, dataLnk13.dwhIdHubCustomersContractHolder, dataLnk13.dwhIdHubCustomersCareOfForwarder, dataLnk13.dwhIdHubCustomersNotify, dataLnk13.dwhIdHubCustomersNotify2, dataLnk13.dwhIdHubCustomersNotify3, dataLnk13.dwhIdHubCustomersInvComElsewhere,satLnk14.dwhIdHubCustomers as dwhIdHubCustomersCareOfShipper, dataLnk13.bookingNr, dataLnk13.accessCompanyId, dataLnk13.ovTradeNumber, dataLnk13.oceanTrade, dataLnk13.ovTradeName, dataLnk13.gvaTrade, dataLnk13.serviceCode, dataLnk13.polName, dataLnk13.polDate, dataLnk13.polCode, dataLnk13.dischTerminalDepotCode, dataLnk13.podName, dataLnk13.podDate, dataLnk13.podCode, dataLnk13.creationDate, dataLnk13.blDate, dataLnk13.manifestType, dataLnk13.feederDate, dataLnk13.quotationRefNr, dataLnk13.blNumber, dataLnk13.specialRefNr, dataLnk13.bookingStatus, dataLnk13.branch, dataLnk13.placeOfDelivery, dataLnk13.placeOfReceipt, dataLnk13.pldHaulageAtDestination, dataLnk13.pldHaulageAtOrigin, dataLnk13.pldSublocationCode, dataLnk13.plrSublocationCode, dataLnk13.pldZipCode, dataLnk13.plrZipCode, dataLnk13.inttraReferenceNr, dataLnk13.controlOffice, dataLnk13.controlCompany, dataLnk13.contractType, dataLnk13.directFlag, dataLnk13.payableAt, dataLnk13.pldDate, dataLnk13.plrDate, dataLnk13.createdBy, dataLnk13.payableAtIMS, dataLnk13.originalCrossBookNr, dataLnk13.europeanCargoStatus, dataLnk13.shipperReference, dataLnk13.depot, dataLnk13.terminal, dataLnk13.depotReference, dataLnk13.terminalReference, dataLnk13.bookingPosition, dataLnk13.importExportCode, dataLnk13.customerBookingParty, dataLnk13.blGroup, dataLnk13.srcSystemId, dataLnk13.status, dataLnk13.validFrom from sat.satLnkBookingCustomers satLnk14 right join (select dataLnk12.dwhIdHubBooking, dataLnk12.dwhIdHubPPCCEE, dataLnk12.dwhIdHubCrossBookingType, dataLnk12.dwhIdHubImportExport, dataLnk12.dwhIdHubCustomersForwarder, dataLnk12.dwhIdHubCustomersShipper, dataLnk12.dwhIdHubCustomersConsignee, dataLnk12.dwhIdHubCustomersBookingParty, dataLnk12.dwhIdHubCustomersContractHolder, dataLnk12.dwhIdHubCustomersCareOfForwarder, dataLnk12.dwhIdHubCustomersNotify, dataLnk12.dwhIdHubCustomersNotify2, dataLnk12.dwhIdHubCustomersNotify3, satLnk13.dwhIdHubCustomers as dwhIdHubCustomersInvComElsewhere, dataLnk12.bookingNr, dataLnk12.accessCompanyId, dataLnk12.ovTradeNumber, dataLnk12.oceanTrade, dataLnk12.ovTradeName, dataLnk12.gvaTrade, dataLnk12.serviceCode, dataLnk12.polName, dataLnk12.polDate, dataLnk12.polCode, dataLnk12.dischTerminalDepotCode, dataLnk12.podName, dataLnk12.podDate, dataLnk12.podCode, dataLnk12.creationDate, dataLnk12.blDate, dataLnk12.manifestType, dataLnk12.feederDate, dataLnk12.quotationRefNr, dataLnk12.blNumber, dataLnk12.specialRefNr, dataLnk12.bookingStatus, dataLnk12.branch, dataLnk12.placeOfDelivery, dataLnk12.placeOfReceipt, dataLnk12.pldHaulageAtDestination, dataLnk12.pldHaulageAtOrigin, dataLnk12.pldSublocationCode, dataLnk12.plrSublocationCode, dataLnk12.pldZipCode, dataLnk12.plrZipCode, dataLnk12.inttraReferenceNr, dataLnk12.controlOffice, dataLnk12.controlCompany, dataLnk12.contractType, dataLnk12.directFlag, dataLnk12.payableAt, dataLnk12.pldDate, dataLnk12.plrDate, dataLnk12.createdBy, dataLnk12.payableAtIMS, dataLnk12.originalCrossBookNr, dataLnk12.europeanCargoStatus, dataLnk12.shipperReference, dataLnk12.depot, dataLnk12.terminal, dataLnk12.depotReference, dataLnk12.terminalReference, dataLnk12.bookingPosition, dataLnk12.importExportCode, dataLnk12.customerBookingParty, dataLnk12.blGroup, dataLnk12.srcSystemId, dataLnk12.status, dataLnk12.validFrom from sat.satLnkBookingCustomers satLnk13 right join (select dataLnk11.dwhIdHubBooking, dataLnk11.dwhIdHubPPCCEE, dataLnk11.dwhIdHubCrossBookingType, dataLnk11.dwhIdHubImportExport,  dataLnk11.dwhIdHubCustomersForwarder, dataLnk11.dwhIdHubCustomersShipper, dataLnk11.dwhIdHubCustomersConsignee, dataLnk11.dwhIdHubCustomersBookingParty, dataLnk11.dwhIdHubCustomersContractHolder, dataLnk11.dwhIdHubCustomersCareOfForwarder, dataLnk11.dwhIdHubCustomersNotify, dataLnk11.dwhIdHubCustomersNotify2, satLnk12.dwhIdHubCustomers as dwhIdHubCustomersNotify3, dataLnk11.bookingNr,  dataLnk11.accessCompanyId, dataLnk11.ovTradeNumber, dataLnk11.oceanTrade, dataLnk11.ovTradeName, dataLnk11.gvaTrade,  dataLnk11.serviceCode, dataLnk11.polName, dataLnk11.polDate, dataLnk11.polCode, dataLnk11.dischTerminalDepotCode, dataLnk11.podName, dataLnk11.podDate, dataLnk11.podCode, dataLnk11.creationDate, dataLnk11.blDate, dataLnk11.manifestType, dataLnk11.feederDate, dataLnk11.quotationRefNr, dataLnk11.blNumber, dataLnk11.specialRefNr, dataLnk11.bookingStatus, dataLnk11.branch, dataLnk11.placeOfDelivery, dataLnk11.placeOfReceipt, dataLnk11.pldHaulageAtDestination, dataLnk11.pldHaulageAtOrigin, dataLnk11.pldSublocationCode, dataLnk11.plrSublocationCode, dataLnk11.pldZipCode, dataLnk11.plrZipCode, dataLnk11.inttraReferenceNr, dataLnk11.controlOffice, dataLnk11.controlCompany, dataLnk11.contractType, dataLnk11.directFlag, dataLnk11.payableAt, dataLnk11.pldDate, dataLnk11.plrDate, dataLnk11.createdBy, dataLnk11.payableAtIMS, dataLnk11.originalCrossBookNr, dataLnk11.europeanCargoStatus, dataLnk11.shipperReference, dataLnk11.depot, dataLnk11.terminal, dataLnk11.depotReference, dataLnk11.terminalReference, dataLnk11.bookingPosition, dataLnk11.importExportCode, dataLnk11.customerBookingParty, dataLnk11.blGroup, dataLnk11.srcSystemId, dataLnk11.status, dataLnk11.validFrom from sat.satLnkBookingCustomers satLnk12 right join (select dataLnk10.dwhIdHubBooking, dataLnk10.dwhIdHubPPCCEE, dataLnk10.dwhIdHubCrossBookingType, dataLnk10.dwhIdHubImportExport, dataLnk10.dwhIdHubCustomersForwarder, dataLnk10.dwhIdHubCustomersShipper, dataLnk10.dwhIdHubCustomersConsignee, dataLnk10.dwhIdHubCustomersBookingParty, dataLnk10.dwhIdHubCustomersContractHolder, dataLnk10.dwhIdHubCustomersCareOfForwarder, dataLnk10.dwhIdHubCustomersNotify, satLnk11.dwhIdHubCustomers as dwhIdHubCustomersNotify2, dataLnk10.bookingNr, dataLnk10.accessCompanyId, dataLnk10.ovTradeNumber, dataLnk10.oceanTrade, dataLnk10.ovTradeName, dataLnk10.gvaTrade, dataLnk10.serviceCode, dataLnk10.polName, dataLnk10.polDate, dataLnk10.polCode, dataLnk10.dischTerminalDepotCode, dataLnk10.podName, dataLnk10.podDate, dataLnk10.podCode, dataLnk10.creationDate, dataLnk10.blDate, dataLnk10.manifestType, dataLnk10.feederDate, dataLnk10.quotationRefNr, dataLnk10.blNumber, dataLnk10.specialRefNr, dataLnk10.bookingStatus, dataLnk10.branch, dataLnk10.placeOfDelivery, dataLnk10.placeOfReceipt, dataLnk10.pldHaulageAtDestination, dataLnk10.pldHaulageAtOrigin, dataLnk10.pldSublocationCode, dataLnk10.plrSublocationCode, dataLnk10.pldZipCode, dataLnk10.plrZipCode, dataLnk10.inttraReferenceNr, dataLnk10.controlOffice, dataLnk10.controlCompany, dataLnk10.contractType, dataLnk10.directFlag, dataLnk10.payableAt, dataLnk10.pldDate, dataLnk10.plrDate, dataLnk10.createdBy, dataLnk10.payableAtIMS, dataLnk10.originalCrossBookNr, dataLnk10.europeanCargoStatus, dataLnk10.shipperReference, dataLnk10.depot, dataLnk10.terminal, dataLnk10.depotReference, dataLnk10.terminalReference, dataLnk10.bookingPosition, dataLnk10.importExportCode, dataLnk10.customerBookingParty, dataLnk10.blGroup, dataLnk10.srcSystemId, dataLnk10.status, dataLnk10.validFrom from sat.satLnkBookingCustomers satLnk11 right join (select dataLnk9.dwhIdHubBooking, dataLnk9.dwhIdHubPPCCEE, dataLnk9.dwhIdHubCrossBookingType, dataLnk9.dwhIdHubImportExport, dataLnk9.dwhIdHubCustomersForwarder, dataLnk9.dwhIdHubCustomersShipper, dataLnk9.dwhIdHubCustomersConsignee, dataLnk9.dwhIdHubCustomersBookingParty, dataLnk9.dwhIdHubCustomersContractHolder, dataLnk9.dwhIdHubCustomersCareOfForwarder, satLnk10.dwhIdHubCustomers as dwhIdHubCustomersNotify, dataLnk9.bookingNr, dataLnk9.accessCompanyId, dataLnk9.ovTradeNumber, dataLnk9.oceanTrade, dataLnk9.ovTradeName, dataLnk9.gvaTrade, dataLnk9.serviceCode, dataLnk9.polName, dataLnk9.polDate, dataLnk9.polCode, dataLnk9.dischTerminalDepotCode, dataLnk9.podName, dataLnk9.podDate, dataLnk9.podCode, dataLnk9.creationDate, dataLnk9.blDate, dataLnk9.manifestType, dataLnk9.feederDate, dataLnk9.quotationRefNr, dataLnk9.blNumber, dataLnk9.specialRefNr, dataLnk9.bookingStatus, dataLnk9.branch, dataLnk9.placeOfDelivery, dataLnk9.placeOfReceipt, dataLnk9.pldHaulageAtDestination, dataLnk9.pldHaulageAtOrigin, dataLnk9.pldSublocationCode, dataLnk9.plrSublocationCode, dataLnk9.pldZipCode, dataLnk9.plrZipCode, dataLnk9.inttraReferenceNr, dataLnk9.controlOffice, dataLnk9.controlCompany, dataLnk9.contractType, dataLnk9.directFlag, dataLnk9.payableAt, dataLnk9.pldDate, dataLnk9.plrDate, dataLnk9.createdBy, dataLnk9.payableAtIMS, dataLnk9.originalCrossBookNr, dataLnk9.europeanCargoStatus, dataLnk9.shipperReference, dataLnk9.depot, dataLnk9.terminal, dataLnk9.depotReference, dataLnk9.terminalReference, dataLnk9.bookingPosition, dataLnk9.importExportCode, dataLnk9.customerBookingParty, dataLnk9.blGroup, dataLnk9.srcSystemId, dataLnk9.status, dataLnk9.validFrom from sat.satLnkBookingCustomers satLnk10 right join (select dataLnk8.dwhIdHubBooking, dataLnk8.dwhIdHubPPCCEE, dataLnk8.dwhIdHubCrossBookingType, dataLnk8.dwhIdHubImportExport, dataLnk8.dwhIdHubCustomersForwarder, dataLnk8.dwhIdHubCustomersShipper, dataLnk8.dwhIdHubCustomersConsignee, dataLnk8.dwhIdHubCustomersBookingParty, dataLnk8.dwhIdHubCustomersContractHolder, satLnk9.dwhIdHubCustomers as dwhIdHubCustomersCareOfForwarder, dataLnk8.bookingNr, dataLnk8.accessCompanyId, dataLnk8.ovTradeNumber, dataLnk8.oceanTrade, dataLnk8.ovTradeName, dataLnk8.gvaTrade, dataLnk8.serviceCode, dataLnk8.polName, dataLnk8.polDate, dataLnk8.polCode, dataLnk8.dischTerminalDepotCode, dataLnk8.podName, dataLnk8.podDate, dataLnk8.podCode, dataLnk8.creationDate, dataLnk8.blDate, dataLnk8.manifestType, dataLnk8.feederDate, dataLnk8.quotationRefNr, dataLnk8.blNumber, dataLnk8.specialRefNr, dataLnk8.bookingStatus, dataLnk8.branch, dataLnk8.placeOfDelivery, dataLnk8.placeOfReceipt, dataLnk8.pldHaulageAtDestination, dataLnk8.pldHaulageAtOrigin, dataLnk8.pldSublocationCode, dataLnk8.plrSublocationCode, dataLnk8.pldZipCode, dataLnk8.plrZipCode, dataLnk8.inttraReferenceNr, dataLnk8.controlOffice, dataLnk8.controlCompany, dataLnk8.contractType, dataLnk8.directFlag, dataLnk8.payableAt, dataLnk8.pldDate, dataLnk8.plrDate, dataLnk8.createdBy, dataLnk8.payableAtIMS, dataLnk8.originalCrossBookNr, dataLnk8.europeanCargoStatus, dataLnk8.shipperReference, dataLnk8.depot, dataLnk8.terminal, dataLnk8.depotReference, dataLnk8.terminalReference, dataLnk8.bookingPosition, dataLnk8.importExportCode, dataLnk8.customerBookingParty, dataLnk8.blGroup, dataLnk8.srcSystemId, dataLnk8.status, dataLnk8.validFrom from sat.satLnkBookingCustomers satLnk9 right join (select dataLnk7.dwhIdHubBooking, dataLnk7.dwhIdHubPPCCEE, dataLnk7.dwhIdHubCrossBookingType, dataLnk7.dwhIdHubImportExport, dataLnk7.dwhIdHubCustomersForwarder, dataLnk7.dwhIdHubCustomersShipper, dataLnk7.dwhIdHubCustomersConsignee, dataLnk7.dwhIdHubCustomersBookingParty, satLnk8.dwhIdHubCustomers as dwhIdHubCustomersContractHolder, dataLnk7.bookingNr, dataLnk7.accessCompanyId, dataLnk7.ovTradeNumber, dataLnk7.oceanTrade, dataLnk7.ovTradeName, dataLnk7.gvaTrade, dataLnk7.serviceCode, dataLnk7.polName, dataLnk7.polDate, dataLnk7.polCode, dataLnk7.dischTerminalDepotCode, dataLnk7.podName, dataLnk7.podDate, dataLnk7.podCode, dataLnk7.creationDate, dataLnk7.blDate, dataLnk7.manifestType, dataLnk7.feederDate, dataLnk7.quotationRefNr, dataLnk7.blNumber, dataLnk7.specialRefNr, dataLnk7.bookingStatus, dataLnk7.branch, dataLnk7.placeOfDelivery, dataLnk7.placeOfReceipt, dataLnk7.pldHaulageAtDestination, dataLnk7.pldHaulageAtOrigin, dataLnk7.pldSublocationCode, dataLnk7.plrSublocationCode, dataLnk7.pldZipCode, dataLnk7.plrZipCode, dataLnk7.inttraReferenceNr, dataLnk7.controlOffice, dataLnk7.controlCompany, dataLnk7.contractType, dataLnk7.directFlag, dataLnk7.payableAt, dataLnk7.pldDate, dataLnk7.plrDate, dataLnk7.createdBy, dataLnk7.payableAtIMS, dataLnk7.originalCrossBookNr, dataLnk7.europeanCargoStatus, dataLnk7.shipperReference, dataLnk7.depot, dataLnk7.terminal, dataLnk7.depotReference, dataLnk7.terminalReference, dataLnk7.bookingPosition, dataLnk7.importExportCode, dataLnk7.customerBookingParty, dataLnk7.blGroup, dataLnk7.srcSystemId, dataLnk7.status, dataLnk7.validFrom from sat.satLnkBookingCustomers satLnk8 right join (select dataLnk6.dwhIdHubBooking, dataLnk6.dwhIdHubPPCCEE, dataLnk6.dwhIdHubCrossBookingType, dataLnk6.dwhIdHubImportExport, dataLnk6.dwhIdHubCustomersForwarder, dataLnk6.dwhIdHubCustomersShipper, dataLnk6.dwhIdHubCustomersConsignee, satLnk7.dwhIdHubCustomers as dwhIdHubCustomersBookingParty, dataLnk6.bookingNr, dataLnk6.accessCompanyId, dataLnk6.ovTradeNumber, dataLnk6.oceanTrade,dataLnk6.ovTradeName, dataLnk6.gvaTrade, dataLnk6.serviceCode, dataLnk6.polName, dataLnk6.polDate, dataLnk6.polCode, dataLnk6.dischTerminalDepotCode, dataLnk6.podName, dataLnk6.podDate, dataLnk6.podCode, dataLnk6.creationDate, dataLnk6.blDate, dataLnk6.manifestType, dataLnk6.feederDate, dataLnk6.quotationRefNr, dataLnk6.blNumber, dataLnk6.specialRefNr, dataLnk6.bookingStatus, dataLnk6.branch, dataLnk6.placeOfDelivery, dataLnk6.placeOfReceipt, dataLnk6.pldHaulageAtDestination, dataLnk6.pldHaulageAtOrigin, dataLnk6.pldSublocationCode, dataLnk6.plrSublocationCode, dataLnk6.pldZipCode, dataLnk6.plrZipCode, dataLnk6.inttraReferenceNr, dataLnk6.controlOffice, dataLnk6.controlCompany, dataLnk6.contractType, dataLnk6.directFlag, dataLnk6.payableAt, dataLnk6.pldDate, dataLnk6.plrDate, dataLnk6.createdBy, dataLnk6.payableAtIMS, dataLnk6.originalCrossBookNr, dataLnk6.europeanCargoStatus, dataLnk6.shipperReference, dataLnk6.depot, dataLnk6.terminal, dataLnk6.depotReference, dataLnk6.terminalReference, dataLnk6.bookingPosition, dataLnk6.importExportCode, dataLnk6.customerBookingParty, dataLnk6.blGroup, dataLnk6.srcSystemId, dataLnk6.status, dataLnk6.validFrom from sat.satLnkBookingCustomers satLnk7 right join (select dataLnk5.dwhIdHubBooking, dataLnk5.dwhIdHubPPCCEE, dataLnk5.dwhIdHubCrossBookingType, dataLnk5.dwhIdHubImportExport, dataLnk5.dwhIdHubCustomersForwarder, dataLnk5.dwhIdHubCustomersShipper, satLnk6.dwhIdHubCustomers as dwhIdHubCustomersConsignee, dataLnk5.bookingNr, dataLnk5.accessCompanyId, dataLnk5.ovTradeNumber, dataLnk5.oceanTrade, dataLnk5.ovTradeName, dataLnk5.gvaTrade, dataLnk5.serviceCode, dataLnk5.polName, dataLnk5.polDate, dataLnk5.polCode, dataLnk5.dischTerminalDepotCode, dataLnk5.podName, dataLnk5.podDate, dataLnk5.podCode, dataLnk5.creationDate, dataLnk5.blDate, dataLnk5.manifestType, dataLnk5.feederDate, dataLnk5.quotationRefNr, dataLnk5.blNumber, dataLnk5.specialRefNr, dataLnk5.bookingStatus, dataLnk5.branch, dataLnk5.placeOfDelivery, dataLnk5.placeOfReceipt, dataLnk5.pldHaulageAtDestination, dataLnk5.pldHaulageAtOrigin, dataLnk5.pldSublocationCode, dataLnk5.plrSublocationCode, dataLnk5.pldZipCode, dataLnk5.plrZipCode, dataLnk5.inttraReferenceNr, dataLnk5.controlOffice, dataLnk5.controlCompany, dataLnk5.contractType, dataLnk5.directFlag, dataLnk5.payableAt, dataLnk5.pldDate, dataLnk5.plrDate, dataLnk5.createdBy, dataLnk5.payableAtIMS, dataLnk5.originalCrossBookNr, dataLnk5.europeanCargoStatus, dataLnk5.shipperReference, dataLnk5.depot, dataLnk5.terminal, dataLnk5.depotReference, dataLnk5.terminalReference, dataLnk5.bookingPosition, dataLnk5.importExportCode, dataLnk5.customerBookingParty, dataLnk5.blGroup, dataLnk5.srcSystemId, dataLnk5.status, dataLnk5.validFrom from sat.satLnkBookingCustomers satLnk6 right join (select dataLnk4.dwhIdHubBooking, dataLnk4.dwhIdHubPPCCEE, dataLnk4.dwhIdHubCrossBookingType, dataLnk4.dwhIdHubImportExport, dataLnk4.dwhIdHubCustomersForwarder, satLnk5.dwhIdHubCustomers as dwhIdHubCustomersShipper, dataLnk4.bookingNr, dataLnk4.accessCompanyId, dataLnk4.ovTradeNumber, dataLnk4.oceanTrade, dataLnk4.ovTradeName, dataLnk4.gvaTrade, dataLnk4.serviceCode, dataLnk4.polName, dataLnk4.polDate, dataLnk4.polCode, dataLnk4.dischTerminalDepotCode, dataLnk4.podName, dataLnk4.podDate, dataLnk4.podCode, dataLnk4.creationDate, dataLnk4.blDate, dataLnk4.manifestType, dataLnk4.feederDate, dataLnk4.quotationRefNr, dataLnk4.blNumber, dataLnk4.specialRefNr, dataLnk4.bookingStatus, dataLnk4.branch, dataLnk4.placeOfDelivery, dataLnk4.placeOfReceipt, dataLnk4.pldHaulageAtDestination, dataLnk4.pldHaulageAtOrigin, dataLnk4.pldSublocationCode, dataLnk4.plrSublocationCode, dataLnk4.pldZipCode, dataLnk4.plrZipCode, dataLnk4.inttraReferenceNr, dataLnk4.controlOffice, dataLnk4.controlCompany, dataLnk4.contractType, dataLnk4.directFlag, dataLnk4.payableAt, dataLnk4.pldDate, dataLnk4.plrDate, dataLnk4.createdBy, dataLnk4.payableAtIMS, dataLnk4.originalCrossBookNr, dataLnk4.europeanCargoStatus, dataLnk4.shipperReference, dataLnk4.depot, dataLnk4.terminal, dataLnk4.depotReference, dataLnk4.terminalReference, dataLnk4.bookingPosition, dataLnk4.importExportCode, dataLnk4.customerBookingParty, dataLnk4.blGroup, dataLnk4.srcSystemId, dataLnk4.status, dataLnk4.validFrom from sat.satLnkBookingCustomers satLnk5 right join (select dataLnk3.dwhIdHubBooking, dataLnk3.dwhIdHubPPCCEE, dataLnk3.dwhIdHubCrossBookingType, dataLnk3.dwhIdHubImportExport, satLnk4.dwhIdHubCustomers as dwhIdHubCustomersForwarder,  dataLnk3.bookingNr, dataLnk3.accessCompanyId, dataLnk3.ovTradeNumber, dataLnk3.oceanTrade, dataLnk3.ovTradeName, dataLnk3.gvaTrade, dataLnk3.serviceCode, dataLnk3.polName, dataLnk3.polDate, dataLnk3.polCode, dataLnk3.dischTerminalDepotCode, dataLnk3.podName, dataLnk3.podDate, dataLnk3.podCode, dataLnk3.creationDate, dataLnk3.blDate, dataLnk3.manifestType, dataLnk3.feederDate, dataLnk3.quotationRefNr, dataLnk3.blNumber, dataLnk3.specialRefNr, dataLnk3.bookingStatus, dataLnk3.branch, dataLnk3.placeOfDelivery, dataLnk3.placeOfReceipt, dataLnk3.pldHaulageAtDestination, dataLnk3.pldHaulageAtOrigin, dataLnk3.pldSublocationCode, dataLnk3.plrSublocationCode, dataLnk3.pldZipCode, dataLnk3.plrZipCode, dataLnk3.inttraReferenceNr, dataLnk3.controlOffice, dataLnk3.controlCompany, dataLnk3.contractType, dataLnk3.directFlag, dataLnk3.payableAt, dataLnk3.pldDate, dataLnk3.plrDate, dataLnk3.createdBy, dataLnk3.payableAtIMS, dataLnk3.originalCrossBookNr, dataLnk3.europeanCargoStatus, dataLnk3.shipperReference, dataLnk3.depot, dataLnk3.terminal, dataLnk3.depotReference, dataLnk3.terminalReference, dataLnk3.bookingPosition, dataLnk3.importExportCode, dataLnk3.customerBookingParty, dataLnk3.blGroup, dataLnk3.srcSystemId, dataLnk3.status, dataLnk3.validFrom from sat.satLnkBookingCustomers satLnk4 right join (select dataLnk2.dwhIdHubBooking, dataLnk2.dwhIdHubPPCCEE, dataLnk2.dwhIdHubCrossBookingType, satLnk3.dwhIdHubImportExport, dataLnk2.bookingNr, dataLnk2.accessCompanyId, dataLnk2.ovTradeNumber, dataLnk2.oceanTrade, dataLnk2.ovTradeName, dataLnk2.gvaTrade, dataLnk2.serviceCode, dataLnk2.polName, dataLnk2.polDate, dataLnk2.polCode, dataLnk2.dischTerminalDepotCode, dataLnk2.podName, dataLnk2.podDate, dataLnk2.podCode, dataLnk2.creationDate, dataLnk2.blDate, dataLnk2.manifestType, dataLnk2.feederDate, dataLnk2.quotationRefNr, dataLnk2.blNumber, dataLnk2.specialRefNr, dataLnk2.bookingStatus, dataLnk2.branch, dataLnk2.placeOfDelivery, dataLnk2.placeOfReceipt, dataLnk2.pldHaulageAtDestination, dataLnk2.pldHaulageAtOrigin, dataLnk2.pldSublocationCode, dataLnk2.plrSublocationCode, dataLnk2.pldZipCode, dataLnk2.plrZipCode, dataLnk2.inttraReferenceNr, dataLnk2.controlOffice, dataLnk2.controlCompany, dataLnk2.contractType, dataLnk2.directFlag, dataLnk2.payableAt, dataLnk2.pldDate, dataLnk2.plrDate, dataLnk2.createdBy, dataLnk2.payableAtIMS, dataLnk2.originalCrossBookNr, dataLnk2.europeanCargoStatus, dataLnk2.shipperReference, dataLnk2.depot, dataLnk2.terminal, dataLnk2.depotReference, dataLnk2.terminalReference, dataLnk2.bookingPosition, dataLnk2.importExportCode, dataLnk2.customerBookingParty, dataLnk2.blGroup, dataLnk2.srcSystemId, dataLnk2.status, dataLnk2.validFrom from sat.satLnkBookingImportExport satLnk3 full join (select dataLnk1.dwhIdHubBooking, dataLnk1.dwhIdHubPPCCEE, satLnk2.dwhIdHubCrossBookingType, dataLnk1.bookingNr, dataLnk1.accessCompanyId, dataLnk1.ovTradeNumber, dataLnk1.oceanTrade, dataLnk1.ovTradeName, dataLnk1.gvaTrade, dataLnk1.serviceCode, dataLnk1.polName, dataLnk1.polDate, dataLnk1.polCode, dataLnk1.dischTerminalDepotCode, dataLnk1.podName, dataLnk1.podDate, dataLnk1.podCode, dataLnk1.creationDate, dataLnk1.blDate, dataLnk1.manifestType, dataLnk1.feederDate, dataLnk1.quotationRefNr, dataLnk1.blNumber, dataLnk1.specialRefNr, dataLnk1.bookingStatus, dataLnk1.branch, dataLnk1.placeOfDelivery, dataLnk1.placeOfReceipt, dataLnk1.pldHaulageAtDestination, dataLnk1.pldHaulageAtOrigin, dataLnk1.pldSublocationCode, dataLnk1.plrSublocationCode, dataLnk1.pldZipCode, dataLnk1.plrZipCode, dataLnk1.inttraReferenceNr, dataLnk1.controlOffice, dataLnk1.controlCompany, dataLnk1.contractType, dataLnk1.directFlag, dataLnk1.payableAt, dataLnk1.pldDate, dataLnk1.plrDate, dataLnk1.createdBy, dataLnk1.payableAtIMS, dataLnk1.originalCrossBookNr, dataLnk1.europeanCargoStatus, dataLnk1.shipperReference, dataLnk1.depot, dataLnk1.terminal, dataLnk1.depotReference, dataLnk1.terminalReference, dataLnk1.bookingPosition, dataLnk1.importExportCode, dataLnk1.customerBookingParty, dataLnk1.blGroup, dataLnk1.srcSystemId, dataLnk1.status, dataLnk1.validFrom from sat.satLnkBookingCrossBookingType satLnk2 full join (select hubSatStatus.dwhIdHubBooking, satLnk1.dwhIdHubPPCCEE,  hubSatStatus.bookingNr, hubSatStatus.accessCompanyId, hubSatStatus.ovTradeNumber, hubSatStatus.oceanTrade, hubSatStatus.ovTradeName, hubSatStatus.gvaTrade, hubSatStatus.serviceCode, hubSatStatus.polName, hubSatStatus.polDate, hubSatStatus.polCode, hubSatStatus.dischTerminalDepotCode, hubSatStatus.podName, hubSatStatus.podDate, hubSatStatus.podCode, hubSatStatus.creationDate, hubSatStatus.blDate, hubSatStatus.manifestType, hubSatStatus.feederDate, hubSatStatus.quotationRefNr, hubSatStatus.blNumber, hubSatStatus.specialRefNr, hubSatStatus.bookingStatus, hubSatStatus.branch, hubSatStatus.placeOfDelivery, hubSatStatus.placeOfReceipt, hubSatStatus.pldHaulageAtDestination, hubSatStatus.pldHaulageAtOrigin, hubSatStatus.pldSublocationCode, hubSatStatus.plrSublocationCode, hubSatStatus.pldZipCode, hubSatStatus.plrZipCode, hubSatStatus.inttraReferenceNr, hubSatStatus.controlOffice, hubSatStatus.controlCompany, hubSatStatus.contractType, hubSatStatus.directFlag, hubSatStatus.payableAt, hubSatStatus.pldDate, hubSatStatus.plrDate, hubSatStatus.createdBy, hubSatStatus.payableAtIMS, hubSatStatus.originalCrossBookNr, hubSatStatus.europeanCargoStatus, hubSatStatus.shipperReference, hubSatStatus.depot, hubSatStatus.terminal, hubSatStatus.depotReference, hubSatStatus.terminalReference, hubSatStatus.bookingPosition, hubSatStatus.importExportCode, hubSatStatus.customerBookingParty, hubSatStatus.blGroup, hubSatStatus.srcSystemId, hubSatStatus.status, hubSatStatus.validFrom from sat.satLnkBookingPPCCEE satLnk1 full join (select hubSat.dwhIdHubBooking, hubSat.bookingNr, hubSat.accessCompanyId, hubSat.ovTradeNumber, hubSat.oceanTrade, hubSat.ovTradeName, hubSat.gvaTrade, hubSat.serviceCode, hubSat.polName, hubSat.polDate, hubSat.polCode, hubSat.dischTerminalDepotCode, hubSat.podName, hubSat.podDate, hubSat.podCode, hubSat.creationDate, hubSat.blDate, hubSat.manifestType, hubSat.feederDate, hubSat.quotationRefNr, hubSat.blNumber,hubSat.specialRefNr, hubSat.bookingStatus, hubSat.branch, hubSat.placeOfDelivery, hubSat.placeOfReceipt, hubSat.pldHaulageAtDestination, hubSat.pldHaulageAtOrigin, hubSat.pldSublocationCode, hubSat.plrSublocationCode, hubSat.pldZipCode, hubSat.plrZipCode, hubSat.inttraReferenceNr, hubSat.controlOffice, hubSat.controlCompany, hubSat.contractType, hubSat.directFlag, hubSat.payableAt, hubSat.pldDate, hubSat.plrDate, hubSat.createdBy, hubSat.payableAtIMS, hubSat.originalCrossBookNr, hubSat.europeanCargoStatus, hubSat.shipperReference, hubSat.depot, hubSat.terminal, hubSat.depotReference, hubSat.terminalReference, hubSat.bookingPosition, hubSat.importExportCode, hubSat.customerBookingParty, hubSat.blGroup, hubSat.srcSystemId, satStatus.status as status, satStatus.validFrom from sat.satBookingStatus satStatus inner join (select distinct hub.dwhIdHubBooking, hub.bookingNumber as bookingNr, hub.accessCompanyId, sat.oceanTrade as ovTradeNumber, sat.oceanTrade as oceanTrade, sat.gvaTrade as ovTradeName, sat.gvaTrade as gvaTrade, sat.serviceCode, sat.polName, sat.polDate, sat.polCode, sat.dischTerminalDepotCode, sat.podName, sat.podDate, sat.podCode, sat.creationDate, sat.blDate, sat.manifestType, sat.feederDate, sat.quotationRefNr, sat.blNumber, sat.specialRefNr, sat.bookingStatus, sat.branch, sat.placeOfDelivery, sat.placeOfReceipt, sat.pldHaulageAtDestination, sat.pldHaulageAtOrigin, sat.pldSublocationCode, sat.plrSublocationCode, sat.pldZipCode, sat.plrZipCode, sat.inttraReferenceNr, sat.controlOffice, sat.controlCompany, sat.contractType, sat.directFlag, sat.payableAt, sat.pldDate, sat.plrDate, sat.createdBy, sat.payableAtIMS, sat.originalCrossBookNr, sat.europeanCargoStatus, sat.shipperReference, sat.depot, sat.terminal, sat.depotReference, sat.terminalReference, sat.bookingPosition, sat.importExportCode, sat.customerBookingParty, sat.blGroup, hub.srcSystemId, sat.validFrom from sat.satBooking sat inner join (select dwhIdHubBooking, bookingNumber, accessCompanyId,  srcSystemId  from hub.hubBooking) hub on hub.dwhIdHubBooking = sat.dwhIdHubBooking) hubSat on hubSat.dwhIdHubBooking = satStatus.dwhIdHubBooking) hubSatStatus on hubSatStatus.dwhIdHubBooking = satLnk1.dwhIdHubBooking) dataLnk1 on dataLnk1.dwhIdHubBooking = satLnk2.dwhIdHubBooking) dataLnk2 on dataLnk2.dwhIdHubBooking = satLnk3.dwhIdHubBooking) dataLnk3 on dataLnk3.dwhIdHubBooking = satLnk4.dwhIdHubBooking and satLnk4.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Forwarder')) dataLnk4 on dataLnk4.dwhIdHubBooking = satLnk5.dwhIdHubBooking and satLnk5.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Shipper')) dataLnk5 on dataLnk5.dwhIdHubBooking = satLnk6.dwhIdHubBooking and satLnk6.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Consignee')) dataLnk6 on dataLnk6.dwhIdHubBooking = satLnk7.dwhIdHubBooking and satLnk7.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Booking party')) dataLnk7 on dataLnk7.dwhIdHubBooking = satLnk8.dwhIdHubBooking and satLnk8.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Contract holder')) dataLnk8 on dataLnk8.dwhIdHubBooking = satLnk9.dwhIdHubBooking and satLnk9.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Care of forwarder')) dataLnk9 on dataLnk9.dwhIdHubBooking = satLnk10.dwhIdHubBooking and satLnk10.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Notify')) dataLnk10 on dataLnk10.dwhIdHubBooking = satLnk11.dwhIdHubBooking and satLnk11.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Notify2')) dataLnk11 on dataLnk11.dwhIdHubBooking = satLnk12.dwhIdHubBooking and satLnk12.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Notify3')) dataLnk12 on dataLnk12.dwhIdHubBooking = satLnk13.dwhIdHubBooking and satLnk13.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Invoicing company elsewhere')) dataLnk13 on dataLnk13.dwhIdHubBooking = satLnk14.dwhIdHubBooking and satLnk14.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='Care of shipper')) dataLnk14 on dataLnk14.dwhIdHubBooking = satLnk15.dwhIdHubBooking and satLnk15.dwhIdHubCustomerParty= (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='StatCustomer')) dataLnk15 on dataLnk15.dwhIdHubBooking = satLnk16.dwhIdHubBooking and satLnk16.dwhIdHubCustomerParty = (select dwhIdHubCustomerParty from hub.hubCustomerParty where customerPartyName='FreightPayer')) dataLnk16 on dataLnk16.dwhIdHubBooking = satLnk17.dwhIdHubBooking) dataLnk17 on dataLnk17.dwhIdHubBooking = satLnk18.dwhIdHubBooking and satLnk18.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='POL')) dataLnk18 on dataLnk18.dwhIdHubBooking = satLnk19.dwhIdHubBooking and satLnk19.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='POD')) dataLnk19 on dataLnk19.dwhIdHubBooking = satLnk20.dwhIdHubBooking and satLnk20.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PLR')) dataLnk20 on dataLnk20.dwhIdHubBooking = satLnk21.dwhIdHubBooking and satLnk21.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PAYBLE_AT')) dataLnk21 on dataLnk21.dwhIdHubBooking = satLnk22.dwhIdHubBooking and satLnk22.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PAYABLE_AT_IMS')) dataLnk22 on dataLnk22.dwhIdHubBooking = satLnk23.dwhIdHubBooking and satLnk23.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='DRY_PORT')) dataLnk23 on dataLnk23.dwhIdHubBooking = satLnk24.dwhIdHubBooking and satLnk24.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_SAIL')) dataLnk24 on dataLnk24.dwhIdHubBooking = satLnk25.dwhIdHubBooking and satLnk25.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_FEED')) dataLnk25 on dataLnk25.dwhIdHubBooking = satLnk26.dwhIdHubBooking and satLnk26.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_TRANS')) dataLnk26 on dataLnk26.dwhIdHubBooking = satLnk27.dwhIdHubBooking and satLnk27.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_TRANS2')) dataLnk27 on dataLnk27.dwhIdHubBooking = satLnk28.dwhIdHubBooking and satLnk28.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_TRANS3')) dataLnk28 on dataLnk28.dwhIdHubBooking = satLnk29.dwhIdHubBooking and satLnk29.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_TRANS4')) dataLnk29 on dataLnk29.dwhIdHubBooking = satLnk30.dwhIdHubBooking and satLnk30.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PORT_TRANS5')) dataLnk30 on dataLnk30.dwhIdHubBooking = satLnk31.dwhIdHubBooking ) dataLnk31 on dataLnk31.dwhIdHubBooking = satLnk32.dwhIdHubBooking1 ) dataLnk32 on dataLnk32.dwhIdHubBooking = satLnk33.dwhIdHubBooking and satLnk33.dwhIdHubLocationRole = (select dwhIdHubLocationRole from hub.HubLocationRole where locationRoleName='PLD')) dataLnk33 on dataLnk33.dwhIdHubBooking = satLnk34.dwhIdHubBooking) dataLnk34 on dataLnk34.dwhIdHubBooking = satLnk35.dwhIdHubBooking) dataLnk35 on dataLnk35.dwhIdHubBooking = satLnk36.dwhIdHubBooking)q where RowNumber =
booking.dataInDM.RowByKeys = select dwhIdHubBooking, dwhIdHubPPCCEE, dwhIdHubCrossBookingType, dwhIdHubImportExport, dwhIdHubCustomersForwarder, dwhIdHubCustomersShipper, dwhIdHubCustomersConsignee, dwhIdHubCustomersBookingParty, dwhIdHubCustomersContractHolder, dwhIdHubCustomersCareOfForwarder, dwhIdHubCustomersNotify , dwhIdHubCustomersNotify2, dwhIdHubCustomersNotify3, dwhIdHubCustomersInvComElsewhere, dwhIdHubCustomersCareOfShipper, dwhIdHubCustomersStatCustomer, dwhIdHubCustomersFreightPayer, dwhIdHubFileLiner, dwhIdHubLocationsPOL, dwhIdHubLocationsPOD, dwhIdHubLocationsPLR, dwhIdHubLocationsPAYABLEAT, dwhIdHubLocationsPAYABLEATIMS, dwhIdHubLocationsDRYPORT, dwhIdHubLocationsPORTSAIL, dwhIdHubLocationsPORTFEED, dwhIdHubLocationsTRANS, dwhIdHubLocationsTRANS2, dwhIdHubLocationsTRANS3, dwhIdHubLocationsTRANS4, dwhIdHubLocationsTRANS5, dwhIdHubCompany, dwhIdHubBookingCrossBooking, dwhIdHubLocationsPLD, dwhIdHubControllingOffice, ovTradeNumber, ovTradeName, bookingNr, serviceCode, polName, polDate, polCode, dischTerminalDepotCode, podName, podDate, podCode, creationDate, oceanTrade, blDate, manifestType, feederDate, quotationRefNr, blNumber, gvaTrade, specialRefNr, bookingStatus, branch, placeOfDelivery, placeOfReceipt, pldHaulageAtDestination, pldHaulageAtOrigin, pldSublocationCode, plrSublocationCode, pldZipCode, plrZipCode, inttraReferenceNr, controlOffice, controlCompany, contractType, directFlag, payableAt, pldDate, plrDate, createdBy, payableAtIMS, originalCrossBookNr, europeanCargoStatus, shipperReference, depot, terminal, depotReference, terminalReference, bookingPosition, importExportCode, customerBookingParty, blGroup, shipperCode, bookPartyCode, careOfForwarderCode, careOfShipperCode, contractHolderCode, invoicingCompanyElsewhereCode, forwarderCode, consigneeCode, namedAccountCode, notifyCode, notify2Code, notify3Code, sshipperCode, sbookPartyCode, scareOfForwarderCode, scareOfShipperCode, scontractHolderCode, sinvoicingCompanyElsewhereCode, sforwarderCode, sconsigneeCode, snamedAccountCode, snotifyCode, snotify2Code, snotify3Code, nmhCarriageMode , nmhDryPortName, nmhPlrName, nmhPodName, nmhPldZipCode, nmhPlrZipCode, accessCompanyId, srcSystemId, dmStatus as status , validFrom from dim.dimBooking

bookingOceanVessel.dwh.CountRows = select count (*) c from (select distinct dwhIdHubBookingOceanVessel, validFrom from sat.satBookingOceanVessel union select distinct dwhIdHubBookingOceanVessel, validFrom from sat.satBookingOceanVesselStatus union select distinct dwhIdHubBookingOceanVessel, validFrom from sat.satLnkBookingBookingOceanVessel union select distinct dwhIdHubBookingOceanVessel, validFrom from sat.satLnkBookingOceanVesselOceanVesselStatus union select distinct dwhIdHubBookingOceanVessel, validFrom from sat.satLnkBookingOceanVesselExportVessels) q
bookingOceanVessel.dim.CountRows = select COUNT (*) c from (select dwhIdHubBookingOceanVessel, validFrom  from dim.dimBookingOceanVessel)q
bookingOceanVessel.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hubSatlnk2.dwhIdHubBookingOceanVessel) AS RowNumber,  hubSatlnk2.dwhIdHubBookingOceanVessel, hubSatlnk2.dwhIdHubBooking, hubSatlnk2.dwhIdHubOceanVesselStatus, satLnk3.dwhIdHubExportVessels, hubSatlnk2.bookingNumber,  hubSatlnk2.bookVesselId, hubSatlnk2.blockStowCode, hubSatlnk2.createdBy, hubSatlnk2.creationDate, hubSatlnk2.accessCompanyId,  hubSatlnk2.srcSystemId, hubSatlnk2.status, hubSatlnk2.validFrom  from sat.satLnkBookingOceanVesselExportVessels satLnk3 full join ( select hubSatlnk1.dwhIdHubBookingOceanVessel, hubSatlnk1.dwhIdHubBooking, satLnk2.dwhIdHubOceanVesselStatus, hubSatlnk1.bookingNumber,  hubSatlnk1.bookVesselId, hubSatlnk1.accessCompanyId,  hubSatlnk1.blockStowCode, hubSatlnk1.createdBy, hubSatlnk1.creationDate, hubSatlnk1.srcSystemId, hubSatlnk1.status, hubSatlnk1.validFrom from sat.satLnkBookingOceanVesselOceanVesselStatus satLnk2 full join (select hubSatStatus.dwhIdHubBookingOceanVessel, satLnk1.dwhIdHubBooking, hubSatStatus.bookingNumber, hubSatStatus.bookVesselId, hubSatStatus.accessCompanyId, hubSatStatus.blockStowCode, hubSatStatus.createdBy, hubSatStatus.creationDate, hubSatStatus.srcSystemId, hubSatStatus.status, hubSatStatus.validFrom from sat.satLnkBookingBookingOceanVessel satLnk1 full join (select hubSat.dwhIdHubBookingOceanVessel, hubSat.bookingNumber, hubSat.bookVesselId, hubSat.accessCompanyId, hubSat.blockStowCode, hubSat.createdBy, hubSat.creationDate, hubSat.srcSystemId, satStatus.status, satStatus.validFrom from sat.satBookingOceanVesselStatus satStatus inner join (select distinct hub.dwhIdHubBookingOceanVessel, hub.bookingNumber, hub.bookVesselId, hub.accessCompanyId, sat.blockStowCode, sat.createdBy, sat.creationDate, hub.srcSystemId from sat.satBookingOceanVessel sat inner join (select dwhIdHubBookingOceanVessel, bookingNumber, bookVesselId, accessCompanyId,  srcSystemId  from hub.hubBookingOceanVessel) hub on hub.dwhIdHubBookingOceanVessel = sat.dwhIdHubBookingOceanVessel) hubSat on hubSat.dwhIdHubBookingOceanVessel = satStatus.dwhIdHubBookingOceanVessel) hubSatStatus on hubSatStatus.dwhIdHubBookingOceanVessel = satLnk1.dwhIdHubBookingOceanVessel) hubSatlnk1 on hubSatlnk1.dwhIdHubBookingOceanVessel = satLnk2.dwhIdHubBookingOceanVessel) hubSatlnk2 on hubSatlnk2.dwhIdHubBookingOceanVessel = satLnk3.dwhIdHubBookingOceanVessel) q where RowNumber = 
bookingOceanVessel.dataInDM.RowByKeys = select dwhIdHubBookingOceanVessel, dwhIdHubBooking, dwhIdHubOceanVesselStatus, dwhIdHubExportVessels, bookingNumber, bookVesselId, blockStowCode, createdBy, creationDate, accessCompanyId, srcSystemId, dmStatus as status, validFrom from  dim.dimBookingOceanVessel

oceanVesselService.dwh.CountRows = select count (*) c from (select distinct dwhIdHubOceanVesselService, validFrom from sat.satOceanVesselServiceStatus ) q
oceanVesselService.dim.CountRows = select COUNT (*) c from (select dwhIdHubOceanVesselService, validFrom  from dim.dimOceanVesselService)q
oceanVesselService.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by sat.dwhIdHubOceanVesselService) AS RowNumber,   hub.dwhIdHubOceanVesselService, hub.carrierCode, hub.serviceCode, hub.shortName, hub.fullName, hub.accessCompanyId, sat.status, sat.validFrom, hub.srcSystemId from sat.satOceanVesselServiceStatus sat inner join (select dwhIdHubOceanVesselService, carrierCode, serviceCode, shortName, fullName, accessCompanyId,  srcSystemId  from hub.hubOceanVesselService) hub on hub.dwhIdHubOceanVesselService = sat.dwhIdHubOceanVesselService) q where RowNumber = 
oceanVesselService.dataInDM.RowByKeys = select dwhIdHubOceanVesselService, carrierCode, serviceCode, shortName, fullName, accessCompanyId, srcSystemId, dmStatus as status, validFrom from  dim.dimOceanVesselService


containerType.dwh.CountRows = select count (*) c from (select distinct dwhIdHubContainerType, validFrom from sat.satContainerType union select distinct dwhIdHubContainerType, validFrom from sat.satContainerTypeStatus union select distinct dwhIdHubContainerType, validFrom from sat.satLnkContainerTypeContainerTypeSpecEquip) q
containerType.dim.CountRows = select COUNT (*) c from (select dwhIdHubContainerType, validFrom  from dim.dimContainerType)q
containerType.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by hub2_1.dwhIdHubContainerType) AS RowNumber,  case when hub2_1.dwhIdHubContainerTypeSpecEquip is not null then 1 else 0 end seIsSpecial,  hub2_1.dwhIdHubContainerType, hub2_1.dwhIdHubContainerTypeSpecEquip, hub2_1.feet, hub2_1.typeCode, hub2_1.typeName, hub2_1.size, hub2_1.shipperOwned, hub2_1.isReefer, hub2_1.containerTypeCode, hub2_1.contFeet as seContFeet, hub2_1.contSize as seContSize, hub2_1.contType as seContType, hub2_1.contTypeName as seContTypeName, sat2.masterContType as seMasterContType, sat2.isTank as seIsTank, sat2.isSpecialWithRef as seIsSpecialWithRef, sat2.isSpecialWoRef as seIsSpecialWoRef, sat2.isFlatrack as seIsFlatrack, sat2.isPlatform as seIsPlatform, sat2.isOpentop as seIsOpentop,hub2_1.status, hub2_1.validFrom, hub2_1.accessCompanyId, hub2_1.srcSystemId from sat.satContainerTypeSpecEquip sat2 right join (select distinct allcontType2.dwhIdHubContainerType, allcontType2.dwhIdHubContainerTypeSpecEquip, allcontType2.feet, allcontType2.typeCode, allcontType2.typeName, allcontType2.size, allcontType2.shipperOwned, allcontType2.isReefer, allcontType2.containerTypeCode, hub2.contFeet, hub2.contSize, hub2.contType, hub2.contTypeName, allcontType2.status, allcontType2.validFrom, allcontType2.accessCompanyId, allcontType2.srcSystemId from hub.hubContainerTypeSpecEquip hub2 right join (select allContType.dwhIdHubContainerType, satLnk.dwhIdHubContainerTypeSpecEquip, allContType.feet, allContType.typeCode, allContType.typeName, allContType.size, allContType.shipperOwned, allContType.isReefer, allContType.containerTypeCode, allContType.status, allContType.validFrom, allContType.accessCompanyId, allContType.srcSystemId from sat.satLnkContainerTypeContainerTypeSpecEquip satLnk full join (select hub1sat1.dwhIdHubContainerType, hub1sat1.feet, hub1sat1.typeCode, hub1sat1.typeName, hub1sat1.size, hub1sat1.shipperOwned, hub1sat1.isReefer, hub1sat1.containerTypeCode, satStatus.status, hub1sat1.validFrom, hub1sat1.accessCompanyId, hub1sat1.srcSystemId from sat.satContainerTypeStatus satStatus inner join (select hub1.dwhIdHubContainerType, sat1.feet, sat1.typeCode, sat1.typeName, sat1.size, sat1.shipperOwned, sat1.isReefer, hub1.containerTypeCode, sat1.validFrom, hub1.accessCompanyId, hub1.srcSystemId from sat.satContainerType sat1 inner join (select dwhIdHubContainerType, containerTypeCode, accessCompanyId, srcSystemId from hub.hubContainerType) hub1 on hub1.dwhIdHubContainerType =  sat1.dwhIdHubContainerType) hub1sat1 on hub1sat1.dwhIdHubContainerType= satStatus.dwhIdHubContainerType) allContType on allContType.dwhIdHubContainerType= satLnk.dwhIdHubContainerType) allcontType2 on allcontType2.dwhIdHubContainerTypeSpecEquip = hub2.dwhIdHubContainerTypeSpecEquip) hub2_1 on hub2_1.dwhIdHubContainerTypeSpecEquip =  sat2.dwhIdHubContainerTypeSpecEquip) q where RowNumber =
containerType.dataInDM.RowByKeys = select dwhIdHubContainerType, dwhIdHubContainerTypeSpecEquip, containerTypeCode, feet,typeCode, typeName, size, shipperOwned, isReefer, seIsSpecial, seContFeet, seContSize, seContType, seContTypeName, seMasterContType, seIsTank, seIsSpecialWithRef, seIsSpecialWoRef, seIsFlatrack, seIsPlatform, seIsOpentop, accessCompanyId, srcSystemId, dmStatus as status, validFrom  from  dim.dimContainerType

company.dwh.CountRows = select count (*) c from (select distinct dwhIdHubCompany, validFrom from sat.satCompany union select distinct dwhIdHubCompany, validFrom from sat.satCompanyStatus union select distinct dwhIdHubCompany, validFrom from sat.satCompanyAgentCode) q
company.dim.CountRows = select COUNT (*) c from (select dwhIdHubCompany, validFrom  from dim.dimCompany)q
company.dataInDV.RowByRowNum = select * from (SELECT ROW_NUMBER() OVER (Order by dwhIdHubCompany) AS RowNumber, dwhIdHubCompany, companyId, companyName, address1, address2, address3,  zipCode, homeCurrencyCode, agentCode, status, validFrom, srcSystemId, dwhIdHubCountry,  isLandlockedCountry from (select distinct b.*, case when func2.isLandlockedCountry ='Y' then 1 when func2.isLandlockedCountry ='N' then 0 else -1 end isLandlockedCountry from(select  distinct a.*, func1.dwhIdHubCountry from (select distinct allmain.dwhIdHubCompany, allmain.companyId, allmain.companyName, allmain.address1, allmain.address2, allmain.address3, allmain.zipCode, allmain.homeCurrencyCode, sat2.agentCode, allmain.status, allmain.validFrom, allmain.srcSystemId from sat.satCompanyAgentCode sat2 inner join (select hub1sat1.dwhIdHubCompany, hub1sat1.companyId, hub1sat1.companyName, hub1sat1.address1, hub1sat1.address2, hub1sat1.address3, hub1sat1.zipCode, hub1sat1.homeCurrencyCode, satStatus.status, hub1sat1.validFrom, hub1sat1.srcSystemId from sat.satCompanyStatus satStatus inner join (select hub1.dwhIdHubCompany, hub1.companyId, sat1.companyName, sat1.address1, sat1.address2, sat1.address3, sat1.zipCode, sat1.homeCurrencyCode, sat1.validFrom, hub1.srcSystemId from sat.satCompany sat1 inner join (select dwhIdHubCompany, companyId, srcSystemId from hub.hubCompany) hub1 on hub1.dwhIdHubCompany =  sat1.dwhIdHubCompany) hub1sat1 on hub1sat1.dwhIdHubCompany= satStatus.dwhIdHubCompany) allmain on allmain.dwhIdHubCompany= sat2.dwhIdHubCompany)a inner join (select hc.accessCompanyId, spo.agencyCode, spo.validFrom, case when lead (spo.validFrom) OVER (partition by spo.dwhIdHubLocationsPortsOverview order by spo.validFrom) is null then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (spo.validFrom) OVER (partition by spo.dwhIdHubLocationsPortsOverview order by spo.validFrom))) end as spoValidTo, hc.dwhIdHubCountry, spo.alterDate from sat.satLocationsPortsOverview spo inner join (	select lll.dwhIdHubLocationsPortsOverview, lll.dwhIdHubLocations, lll.validFrom as lll_validFrom, case when  lll.validFrom > lll.validTo then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (lll.validFrom) OVER (partition by lll.dwhIdHubLocationsPortsOverview order by lll.validFrom))) end as lll_ValidTo from sat.satLnkLocationsLocationsPortsOverview lll) lll on spo.dwhIdHubLocationsPortsOverview = lll.dwhIdHubLocationsPortsOverview inner join (select llc.dwhIdHubLocations,	llc.dwhIdHubCountry, llc.validFrom as llc_validFrom, case when  llc.validFrom > llc.validTo then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (llc.validFrom) OVER (partition by llc.dwhIdHubLocations order by llc.validFrom))) end as llc_ValidTo from sat.satLnkLocationsCountry llc) llc on lll.dwhIdHubLocations = llc.dwhIdHubLocations inner join (select scs.dwhIdHubCountry,scs.status, scs.validFrom as scs_validFrom, case when  scs.validFrom >= scs.validTo then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (scs.validFrom) OVER (partition by scs.dwhIdHubCountry order by scs.validFrom))) end as scs_ValidTo from sat.satCountryStatus scs) scs	on llc.dwhIdHubCountry = scs.dwhIdHubCountry inner join hub.hubCountry hc on llc.dwhIdHubCountry = hc.dwhIdHubCountry where 1 = 1 and spo.agencyRegion is not null and GETDATE() between lll_validFrom and lll_validTo and GETDATE()  between llc_validFrom and llc_validTo and GETDATE()  between scs_validFrom and scs_validTo) func1 on a.agentCode = func1.agencyCode and a.companyId =  func1.accessCompanyId) b inner join (select hc.accessCompanyId, spo.agencyCode, spo.validFrom, case when lead (spo.validFrom) OVER (partition by spo.dwhIdHubLocationsPortsOverview order by spo.validFrom) is null then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (spo.validFrom) OVER (partition by spo.dwhIdHubLocationsPortsOverview order by spo.validFrom))) end as spoValidTo, hc.dwhIdHubCountry, spo.alterDate, spo.isLandlockedCountry from sat.satLocationsPortsOverview spo inner join (select lll.dwhIdHubLocationsPortsOverview,	lll.dwhIdHubLocations, lll.validFrom as lll_validFrom, case when  lll.validFrom > lll.validTo then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (lll.validFrom) OVER (partition by lll.dwhIdHubLocationsPortsOverview order by lll.validFrom))) end as lll_ValidTo	from sat.satLnkLocationsLocationsPortsOverview lll) lll	on spo.dwhIdHubLocationsPortsOverview = lll.dwhIdHubLocationsPortsOverview inner join (select llc.dwhIdHubLocations, llc.dwhIdHubCountry, llc.validFrom as llc_validFrom, case when  llc.validFrom > llc.validTo then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (llc.validFrom) OVER (partition by llc.dwhIdHubLocations order by llc.validFrom)))end as llc_ValidTo from sat.satLnkLocationsCountry llc) llc on lll.dwhIdHubLocations = llc.dwhIdHubLocations inner join (select scs.dwhIdHubCountry, scs.status, scs.validFrom as scs_validFrom, case when  scs.validFrom >= scs.validTo then '2100-01-01 00:00:00.000' else dateadd (SS, -1, (lead (scs.validFrom) OVER (partition by scs.dwhIdHubCountry order by scs.validFrom))) end as scs_ValidTo from sat.satCountryStatus scs) scs on llc.dwhIdHubCountry = scs.dwhIdHubCountry inner join hub.hubCountry hc on llc.dwhIdHubCountry = hc.dwhIdHubCountry where 1 = 1 and spo.agencyRegion is not null and getdate() between lll_validFrom and lll_validTo and getdate() between llc_validFrom and llc_validTo and getdate() between scs_validFrom and scs_validTo) func2 on b.agentCode = func2.agencyCode and b.companyId =  func2.accessCompanyId)w)q  where RowNumber = 
company.dataInDM.RowByKeys = select dwhIdHubCompany,  companyId, companyName, address1, address2, address3, zipCode, homeCurrencyCode, agentCode,   dmStatus as status, validFrom, srcSystemId, dwhIdHubCountry, isLandlockedCountry  from  dim.dimCompany









